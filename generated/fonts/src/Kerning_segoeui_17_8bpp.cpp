#include <touchgfx/Font.hpp>

#ifndef NO_USING_NAMESPACE_TOUCHGFX
using namespace touchgfx;
#endif

FONT_LOCATION_FLASH_PRAGMA
KEEP extern const touchgfx::KerningNode kerning_segoeui_17_8bpp[] FONT_LOCATION_FLASH_ATTRIBUTE = {
    {0x0065, -1},  // (First char = [0x0065, ], Second char = [0x0022, ], Kerning dist = -1) 
    {0x006E, -1},  // (First char = [0x006E, ], Second char = [0x0022, ], Kerning dist = -1) 
    {0x006F, -1},  // (First char = [0x006F, ], Second char = [0x0022, ], Kerning dist = -1) 
    {0x0065, -1},  // (First char = [0x0065, ], Second char = [0x0027, ], Kerning dist = -1) 
    {0x006E, -1},  // (First char = [0x006E, ], Second char = [0x0027, ], Kerning dist = -1) 
    {0x006F, -1},  // (First char = [0x006F, ], Second char = [0x0027, ], Kerning dist = -1) 
    {0x0066,  1},  // (First char = [0x0066, ], Second char = [0x0029, ], Kerning dist = 1) 
    {0x0041, -1},  // (First char = [0x0041, ], Second char = [0x002A, ], Kerning dist = -1) 
    {0x004C, -1},  // (First char = [0x004C, ], Second char = [0x002A, ], Kerning dist = -1) 
    {0x0044, -1},  // (First char = [0x0044, ], Second char = [0x002C, ], Kerning dist = -1) 
    {0x0046, -1},  // (First char = [0x0046, ], Second char = [0x002C, ], Kerning dist = -1) 
    {0x004A, -1},  // (First char = [0x004A, ], Second char = [0x002C, ], Kerning dist = -1) 
    {0x004F, -1},  // (First char = [0x004F, ], Second char = [0x002C, ], Kerning dist = -1) 
    {0x0050, -2},  // (First char = [0x0050, ], Second char = [0x002C, ], Kerning dist = -2) 
    {0x0051, -1},  // (First char = [0x0051, ], Second char = [0x002C, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x002C, ], Kerning dist = -1) 
    {0x0056, -1},  // (First char = [0x0056, ], Second char = [0x002C, ], Kerning dist = -1) 
    {0x0057, -1},  // (First char = [0x0057, ], Second char = [0x002C, ], Kerning dist = -1) 
    {0x0059, -1},  // (First char = [0x0059, ], Second char = [0x002C, ], Kerning dist = -1) 
    {0x0066, -1},  // (First char = [0x0066, ], Second char = [0x002C, ], Kerning dist = -1) 
    {0x0072, -1},  // (First char = [0x0072, ], Second char = [0x002C, ], Kerning dist = -1) 
    {0x0076, -1},  // (First char = [0x0076, ], Second char = [0x002C, ], Kerning dist = -1) 
    {0x0077, -1},  // (First char = [0x0077, ], Second char = [0x002C, ], Kerning dist = -1) 
    {0x0079, -1},  // (First char = [0x0079, ], Second char = [0x002C, ], Kerning dist = -1) 
    {0x00D0, -1},  // (First char = [0xFFFFFFD0, ], Second char = [0x002C, ], Kerning dist = -1) 
    {0x00DD, -1},  // (First char = [0xFFFFFFDD, ], Second char = [0x002C, ], Kerning dist = -1) 
    {0x00DE, -2},  // (First char = [0xFFFFFFDE, ], Second char = [0x002C, ], Kerning dist = -2) 
    {0x00FD, -1},  // (First char = [0xFFFFFFFD, ], Second char = [0x002C, ], Kerning dist = -1) 
    {0x0066, -1},  // (First char = [0x0066, ], Second char = [0x002D, ], Kerning dist = -1) 
    {0x006B, -1},  // (First char = [0x006B, ], Second char = [0x002D, ], Kerning dist = -1) 
    {0x0072, -1},  // (First char = [0x0072, ], Second char = [0x002D, ], Kerning dist = -1) 
    {0x0074, -1},  // (First char = [0x0074, ], Second char = [0x002D, ], Kerning dist = -1) 
    {0x0044, -1},  // (First char = [0x0044, ], Second char = [0x002E, ], Kerning dist = -1) 
    {0x0046, -1},  // (First char = [0x0046, ], Second char = [0x002E, ], Kerning dist = -1) 
    {0x004A, -1},  // (First char = [0x004A, ], Second char = [0x002E, ], Kerning dist = -1) 
    {0x004F, -1},  // (First char = [0x004F, ], Second char = [0x002E, ], Kerning dist = -1) 
    {0x0050, -2},  // (First char = [0x0050, ], Second char = [0x002E, ], Kerning dist = -2) 
    {0x0051, -1},  // (First char = [0x0051, ], Second char = [0x002E, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x002E, ], Kerning dist = -1) 
    {0x0056, -1},  // (First char = [0x0056, ], Second char = [0x002E, ], Kerning dist = -1) 
    {0x0057, -1},  // (First char = [0x0057, ], Second char = [0x002E, ], Kerning dist = -1) 
    {0x0059, -1},  // (First char = [0x0059, ], Second char = [0x002E, ], Kerning dist = -1) 
    {0x0066, -1},  // (First char = [0x0066, ], Second char = [0x002E, ], Kerning dist = -1) 
    {0x0072, -1},  // (First char = [0x0072, ], Second char = [0x002E, ], Kerning dist = -1) 
    {0x0076, -1},  // (First char = [0x0076, ], Second char = [0x002E, ], Kerning dist = -1) 
    {0x0077, -1},  // (First char = [0x0077, ], Second char = [0x002E, ], Kerning dist = -1) 
    {0x0079, -1},  // (First char = [0x0079, ], Second char = [0x002E, ], Kerning dist = -1) 
    {0x00D0, -1},  // (First char = [0xFFFFFFD0, ], Second char = [0x002E, ], Kerning dist = -1) 
    {0x00DD, -1},  // (First char = [0xFFFFFFDD, ], Second char = [0x002E, ], Kerning dist = -1) 
    {0x00DE, -2},  // (First char = [0xFFFFFFDE, ], Second char = [0x002E, ], Kerning dist = -2) 
    {0x00FD, -1},  // (First char = [0xFFFFFFFD, ], Second char = [0x002E, ], Kerning dist = -1) 
    {0x004C, -1},  // (First char = [0x004C, ], Second char = [0x003F, ], Kerning dist = -1) 
    {0x002A, -1},  // (First char = [0x002A, ], Second char = [0x0041, ], Kerning dist = -1) 
    {0x0046, -1},  // (First char = [0x0046, ], Second char = [0x0041, ], Kerning dist = -1) 
    {0x0050, -1},  // (First char = [0x0050, ], Second char = [0x0041, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x0041, ], Kerning dist = -1) 
    {0x0056, -1},  // (First char = [0x0056, ], Second char = [0x0041, ], Kerning dist = -1) 
    {0x0059, -1},  // (First char = [0x0059, ], Second char = [0x0041, ], Kerning dist = -1) 
    {0x00DD, -1},  // (First char = [0xFFFFFFDD, ], Second char = [0x0041, ], Kerning dist = -1) 
    {0x00DE, -1},  // (First char = [0xFFFFFFDE, ], Second char = [0x0041, ], Kerning dist = -1) 
    {0x004B, -1},  // (First char = [0x004B, ], Second char = [0x0043, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x0043, ], Kerning dist = -1) 
    {0x004B, -1},  // (First char = [0x004B, ], Second char = [0x0047, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x0047, ], Kerning dist = -1) 
    {0x002A, -1},  // (First char = [0x002A, ], Second char = [0x004A, ], Kerning dist = -1) 
    {0x0041,  1},  // (First char = [0x0041, ], Second char = [0x004A, ], Kerning dist = 1) 
    {0x004B,  1},  // (First char = [0x004B, ], Second char = [0x004A, ], Kerning dist = 1) 
    {0x004C,  1},  // (First char = [0x004C, ], Second char = [0x004A, ], Kerning dist = 1) 
    {0x0050, -1},  // (First char = [0x0050, ], Second char = [0x004A, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x004A, ], Kerning dist = -1) 
    {0x0058,  1},  // (First char = [0x0058, ], Second char = [0x004A, ], Kerning dist = 1) 
    {0x00C0,  1},  // (First char = [0xFFFFFFC0, ], Second char = [0x004A, ], Kerning dist = 1) 
    {0x00C1,  1},  // (First char = [0xFFFFFFC1, ], Second char = [0x004A, ], Kerning dist = 1) 
    {0x00C2,  1},  // (First char = [0xFFFFFFC2, ], Second char = [0x004A, ], Kerning dist = 1) 
    {0x00C3,  1},  // (First char = [0xFFFFFFC3, ], Second char = [0x004A, ], Kerning dist = 1) 
    {0x00C4,  1},  // (First char = [0xFFFFFFC4, ], Second char = [0x004A, ], Kerning dist = 1) 
    {0x00C5,  1},  // (First char = [0xFFFFFFC5, ], Second char = [0x004A, ], Kerning dist = 1) 
    {0x00DE, -1},  // (First char = [0xFFFFFFDE, ], Second char = [0x004A, ], Kerning dist = -1) 
    {0x004B, -1},  // (First char = [0x004B, ], Second char = [0x004F, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x004F, ], Kerning dist = -1) 
    {0x004B, -1},  // (First char = [0x004B, ], Second char = [0x0051, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x0051, ], Kerning dist = -1) 
    {0x0041, -1},  // (First char = [0x0041, ], Second char = [0x0054, ], Kerning dist = -1) 
    {0x0042, -1},  // (First char = [0x0042, ], Second char = [0x0054, ], Kerning dist = -1) 
    {0x0044, -1},  // (First char = [0x0044, ], Second char = [0x0054, ], Kerning dist = -1) 
    {0x004C, -1},  // (First char = [0x004C, ], Second char = [0x0054, ], Kerning dist = -1) 
    {0x004F, -1},  // (First char = [0x004F, ], Second char = [0x0054, ], Kerning dist = -1) 
    {0x0051, -1},  // (First char = [0x0051, ], Second char = [0x0054, ], Kerning dist = -1) 
    {0x0063, -1},  // (First char = [0x0063, ], Second char = [0x0054, ], Kerning dist = -1) 
    {0x00C0, -1},  // (First char = [0xFFFFFFC0, ], Second char = [0x0054, ], Kerning dist = -1) 
    {0x00C1, -1},  // (First char = [0xFFFFFFC1, ], Second char = [0x0054, ], Kerning dist = -1) 
    {0x00C2, -1},  // (First char = [0xFFFFFFC2, ], Second char = [0x0054, ], Kerning dist = -1) 
    {0x00C3, -1},  // (First char = [0xFFFFFFC3, ], Second char = [0x0054, ], Kerning dist = -1) 
    {0x00C4, -1},  // (First char = [0xFFFFFFC4, ], Second char = [0x0054, ], Kerning dist = -1) 
    {0x00C5, -1},  // (First char = [0xFFFFFFC5, ], Second char = [0x0054, ], Kerning dist = -1) 
    {0x00D0, -1},  // (First char = [0xFFFFFFD0, ], Second char = [0x0054, ], Kerning dist = -1) 
    {0x00D2, -1},  // (First char = [0xFFFFFFD2, ], Second char = [0x0054, ], Kerning dist = -1) 
    {0x00D3, -1},  // (First char = [0xFFFFFFD3, ], Second char = [0x0054, ], Kerning dist = -1) 
    {0x00D4, -1},  // (First char = [0xFFFFFFD4, ], Second char = [0x0054, ], Kerning dist = -1) 
    {0x00D5, -1},  // (First char = [0xFFFFFFD5, ], Second char = [0x0054, ], Kerning dist = -1) 
    {0x00D6, -1},  // (First char = [0xFFFFFFD6, ], Second char = [0x0054, ], Kerning dist = -1) 
    {0x00D8, -1},  // (First char = [0xFFFFFFD8, ], Second char = [0x0054, ], Kerning dist = -1) 
    {0x0041, -1},  // (First char = [0x0041, ], Second char = [0x0056, ], Kerning dist = -1) 
    {0x004C, -1},  // (First char = [0x004C, ], Second char = [0x0056, ], Kerning dist = -1) 
    {0x00C0, -1},  // (First char = [0xFFFFFFC0, ], Second char = [0x0056, ], Kerning dist = -1) 
    {0x00C1, -1},  // (First char = [0xFFFFFFC1, ], Second char = [0x0056, ], Kerning dist = -1) 
    {0x00C2, -1},  // (First char = [0xFFFFFFC2, ], Second char = [0x0056, ], Kerning dist = -1) 
    {0x00C3, -1},  // (First char = [0xFFFFFFC3, ], Second char = [0x0056, ], Kerning dist = -1) 
    {0x00C4, -1},  // (First char = [0xFFFFFFC4, ], Second char = [0x0056, ], Kerning dist = -1) 
    {0x00C5, -1},  // (First char = [0xFFFFFFC5, ], Second char = [0x0056, ], Kerning dist = -1) 
    {0x0041, -1},  // (First char = [0x0041, ], Second char = [0x0059, ], Kerning dist = -1) 
    {0x004C, -1},  // (First char = [0x004C, ], Second char = [0x0059, ], Kerning dist = -1) 
    {0x00BB, -1},  // (First char = [0xFFFFFFBB, ], Second char = [0x0059, ], Kerning dist = -1) 
    {0x00BF, -1},  // (First char = [0xFFFFFFBF, ], Second char = [0x0059, ], Kerning dist = -1) 
    {0x00C0, -1},  // (First char = [0xFFFFFFC0, ], Second char = [0x0059, ], Kerning dist = -1) 
    {0x00C1, -1},  // (First char = [0xFFFFFFC1, ], Second char = [0x0059, ], Kerning dist = -1) 
    {0x00C2, -1},  // (First char = [0xFFFFFFC2, ], Second char = [0x0059, ], Kerning dist = -1) 
    {0x00C3, -1},  // (First char = [0xFFFFFFC3, ], Second char = [0x0059, ], Kerning dist = -1) 
    {0x00C4, -1},  // (First char = [0xFFFFFFC4, ], Second char = [0x0059, ], Kerning dist = -1) 
    {0x00C5, -1},  // (First char = [0xFFFFFFC5, ], Second char = [0x0059, ], Kerning dist = -1) 
    {0x0066,  1},  // (First char = [0x0066, ], Second char = [0x005D, ], Kerning dist = 1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x0061, ], Kerning dist = -1) 
    {0x0056, -1},  // (First char = [0x0056, ], Second char = [0x0061, ], Kerning dist = -1) 
    {0x0059, -1},  // (First char = [0x0059, ], Second char = [0x0061, ], Kerning dist = -1) 
    {0x00DD, -1},  // (First char = [0xFFFFFFDD, ], Second char = [0x0061, ], Kerning dist = -1) 
    {0x002A, -1},  // (First char = [0x002A, ], Second char = [0x0063, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x0063, ], Kerning dist = -1) 
    {0x0056, -1},  // (First char = [0x0056, ], Second char = [0x0063, ], Kerning dist = -1) 
    {0x0059, -1},  // (First char = [0x0059, ], Second char = [0x0063, ], Kerning dist = -1) 
    {0x00DD, -1},  // (First char = [0xFFFFFFDD, ], Second char = [0x0063, ], Kerning dist = -1) 
    {0x002A, -1},  // (First char = [0x002A, ], Second char = [0x0064, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x0064, ], Kerning dist = -1) 
    {0x0056, -1},  // (First char = [0x0056, ], Second char = [0x0064, ], Kerning dist = -1) 
    {0x0059, -1},  // (First char = [0x0059, ], Second char = [0x0064, ], Kerning dist = -1) 
    {0x00DD, -1},  // (First char = [0xFFFFFFDD, ], Second char = [0x0064, ], Kerning dist = -1) 
    {0x002A, -1},  // (First char = [0x002A, ], Second char = [0x0065, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x0065, ], Kerning dist = -1) 
    {0x0056, -1},  // (First char = [0x0056, ], Second char = [0x0065, ], Kerning dist = -1) 
    {0x0059, -1},  // (First char = [0x0059, ], Second char = [0x0065, ], Kerning dist = -1) 
    {0x00DD, -1},  // (First char = [0xFFFFFFDD, ], Second char = [0x0065, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x0066, ], Kerning dist = -1) 
    {0x002A, -1},  // (First char = [0x002A, ], Second char = [0x0067, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x0067, ], Kerning dist = -1) 
    {0x0056, -1},  // (First char = [0x0056, ], Second char = [0x0067, ], Kerning dist = -1) 
    {0x0059, -1},  // (First char = [0x0059, ], Second char = [0x0067, ], Kerning dist = -1) 
    {0x00DD, -1},  // (First char = [0xFFFFFFDD, ], Second char = [0x0067, ], Kerning dist = -1) 
    {0x0028,  1},  // (First char = [0x0028, ], Second char = [0x006A, ], Kerning dist = 1) 
    {0x005B,  1},  // (First char = [0x005B, ], Second char = [0x006A, ], Kerning dist = 1) 
    {0x0071,  1},  // (First char = [0x0071, ], Second char = [0x006A, ], Kerning dist = 1) 
    {0x007B,  1},  // (First char = [0x007B, ], Second char = [0x006A, ], Kerning dist = 1) 
    {0x00A1,  1},  // (First char = [0xFFFFFFA1, ], Second char = [0x006A, ], Kerning dist = 1) 
    {0x00BF,  1},  // (First char = [0xFFFFFFBF, ], Second char = [0x006A, ], Kerning dist = 1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x006D, ], Kerning dist = -1) 
    {0x0059, -1},  // (First char = [0x0059, ], Second char = [0x006D, ], Kerning dist = -1) 
    {0x00DD, -1},  // (First char = [0xFFFFFFDD, ], Second char = [0x006D, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x006E, ], Kerning dist = -1) 
    {0x0059, -1},  // (First char = [0x0059, ], Second char = [0x006E, ], Kerning dist = -1) 
    {0x00DD, -1},  // (First char = [0xFFFFFFDD, ], Second char = [0x006E, ], Kerning dist = -1) 
    {0x002A, -1},  // (First char = [0x002A, ], Second char = [0x006F, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x006F, ], Kerning dist = -1) 
    {0x0056, -1},  // (First char = [0x0056, ], Second char = [0x006F, ], Kerning dist = -1) 
    {0x0059, -1},  // (First char = [0x0059, ], Second char = [0x006F, ], Kerning dist = -1) 
    {0x00DD, -1},  // (First char = [0xFFFFFFDD, ], Second char = [0x006F, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x0070, ], Kerning dist = -1) 
    {0x0059, -1},  // (First char = [0x0059, ], Second char = [0x0070, ], Kerning dist = -1) 
    {0x00DD, -1},  // (First char = [0xFFFFFFDD, ], Second char = [0x0070, ], Kerning dist = -1) 
    {0x002A, -1},  // (First char = [0x002A, ], Second char = [0x0071, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x0071, ], Kerning dist = -1) 
    {0x0056, -1},  // (First char = [0x0056, ], Second char = [0x0071, ], Kerning dist = -1) 
    {0x0059, -1},  // (First char = [0x0059, ], Second char = [0x0071, ], Kerning dist = -1) 
    {0x00DD, -1},  // (First char = [0xFFFFFFDD, ], Second char = [0x0071, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x0072, ], Kerning dist = -1) 
    {0x0059, -1},  // (First char = [0x0059, ], Second char = [0x0072, ], Kerning dist = -1) 
    {0x00DD, -1},  // (First char = [0xFFFFFFDD, ], Second char = [0x0072, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x0073, ], Kerning dist = -1) 
    {0x0059, -1},  // (First char = [0x0059, ], Second char = [0x0073, ], Kerning dist = -1) 
    {0x00DD, -1},  // (First char = [0xFFFFFFDD, ], Second char = [0x0073, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x0075, ], Kerning dist = -1) 
    {0x0059, -1},  // (First char = [0x0059, ], Second char = [0x0075, ], Kerning dist = -1) 
    {0x00DD, -1},  // (First char = [0xFFFFFFDD, ], Second char = [0x0075, ], Kerning dist = -1) 
    {0x004C, -1},  // (First char = [0x004C, ], Second char = [0x0076, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x0076, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x0077, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x0078, ], Kerning dist = -1) 
    {0x004B, -1},  // (First char = [0x004B, ], Second char = [0x0079, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x0079, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0x007A, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0xFFFFFFAB, ], Kerning dist = -1) 
    {0x0056, -1},  // (First char = [0x0056, ], Second char = [0xFFFFFFBF, ], Kerning dist = -1) 
    {0x0057, -1},  // (First char = [0x0057, ], Second char = [0xFFFFFFBF, ], Kerning dist = -1) 
    {0x0059, -1},  // (First char = [0x0059, ], Second char = [0xFFFFFFBF, ], Kerning dist = -1) 
    {0x00DD, -1},  // (First char = [0xFFFFFFDD, ], Second char = [0xFFFFFFBF, ], Kerning dist = -1) 
    {0x0046, -1},  // (First char = [0x0046, ], Second char = [0xFFFFFFC0, ], Kerning dist = -1) 
    {0x0050, -1},  // (First char = [0x0050, ], Second char = [0xFFFFFFC0, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0xFFFFFFC0, ], Kerning dist = -1) 
    {0x0056, -1},  // (First char = [0x0056, ], Second char = [0xFFFFFFC0, ], Kerning dist = -1) 
    {0x0059, -1},  // (First char = [0x0059, ], Second char = [0xFFFFFFC0, ], Kerning dist = -1) 
    {0x00DD, -1},  // (First char = [0xFFFFFFDD, ], Second char = [0xFFFFFFC0, ], Kerning dist = -1) 
    {0x00DE, -1},  // (First char = [0xFFFFFFDE, ], Second char = [0xFFFFFFC0, ], Kerning dist = -1) 
    {0x0046, -1},  // (First char = [0x0046, ], Second char = [0xFFFFFFC1, ], Kerning dist = -1) 
    {0x0050, -1},  // (First char = [0x0050, ], Second char = [0xFFFFFFC1, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0xFFFFFFC1, ], Kerning dist = -1) 
    {0x0056, -1},  // (First char = [0x0056, ], Second char = [0xFFFFFFC1, ], Kerning dist = -1) 
    {0x0059, -1},  // (First char = [0x0059, ], Second char = [0xFFFFFFC1, ], Kerning dist = -1) 
    {0x00DD, -1},  // (First char = [0xFFFFFFDD, ], Second char = [0xFFFFFFC1, ], Kerning dist = -1) 
    {0x00DE, -1},  // (First char = [0xFFFFFFDE, ], Second char = [0xFFFFFFC1, ], Kerning dist = -1) 
    {0x0046, -1},  // (First char = [0x0046, ], Second char = [0xFFFFFFC2, ], Kerning dist = -1) 
    {0x0050, -1},  // (First char = [0x0050, ], Second char = [0xFFFFFFC2, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0xFFFFFFC2, ], Kerning dist = -1) 
    {0x0056, -1},  // (First char = [0x0056, ], Second char = [0xFFFFFFC2, ], Kerning dist = -1) 
    {0x0059, -1},  // (First char = [0x0059, ], Second char = [0xFFFFFFC2, ], Kerning dist = -1) 
    {0x00DD, -1},  // (First char = [0xFFFFFFDD, ], Second char = [0xFFFFFFC2, ], Kerning dist = -1) 
    {0x00DE, -1},  // (First char = [0xFFFFFFDE, ], Second char = [0xFFFFFFC2, ], Kerning dist = -1) 
    {0x0046, -1},  // (First char = [0x0046, ], Second char = [0xFFFFFFC3, ], Kerning dist = -1) 
    {0x0050, -1},  // (First char = [0x0050, ], Second char = [0xFFFFFFC3, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0xFFFFFFC3, ], Kerning dist = -1) 
    {0x0056, -1},  // (First char = [0x0056, ], Second char = [0xFFFFFFC3, ], Kerning dist = -1) 
    {0x0059, -1},  // (First char = [0x0059, ], Second char = [0xFFFFFFC3, ], Kerning dist = -1) 
    {0x00DD, -1},  // (First char = [0xFFFFFFDD, ], Second char = [0xFFFFFFC3, ], Kerning dist = -1) 
    {0x00DE, -1},  // (First char = [0xFFFFFFDE, ], Second char = [0xFFFFFFC3, ], Kerning dist = -1) 
    {0x0046, -1},  // (First char = [0x0046, ], Second char = [0xFFFFFFC4, ], Kerning dist = -1) 
    {0x0050, -1},  // (First char = [0x0050, ], Second char = [0xFFFFFFC4, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0xFFFFFFC4, ], Kerning dist = -1) 
    {0x0056, -1},  // (First char = [0x0056, ], Second char = [0xFFFFFFC4, ], Kerning dist = -1) 
    {0x0059, -1},  // (First char = [0x0059, ], Second char = [0xFFFFFFC4, ], Kerning dist = -1) 
    {0x00DD, -1},  // (First char = [0xFFFFFFDD, ], Second char = [0xFFFFFFC4, ], Kerning dist = -1) 
    {0x00DE, -1},  // (First char = [0xFFFFFFDE, ], Second char = [0xFFFFFFC4, ], Kerning dist = -1) 
    {0x0046, -1},  // (First char = [0x0046, ], Second char = [0xFFFFFFC5, ], Kerning dist = -1) 
    {0x0050, -1},  // (First char = [0x0050, ], Second char = [0xFFFFFFC5, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0xFFFFFFC5, ], Kerning dist = -1) 
    {0x0056, -1},  // (First char = [0x0056, ], Second char = [0xFFFFFFC5, ], Kerning dist = -1) 
    {0x0059, -1},  // (First char = [0x0059, ], Second char = [0xFFFFFFC5, ], Kerning dist = -1) 
    {0x00DD, -1},  // (First char = [0xFFFFFFDD, ], Second char = [0xFFFFFFC5, ], Kerning dist = -1) 
    {0x00DE, -1},  // (First char = [0xFFFFFFDE, ], Second char = [0xFFFFFFC5, ], Kerning dist = -1) 
    {0x0046, -1},  // (First char = [0x0046, ], Second char = [0xFFFFFFC6, ], Kerning dist = -1) 
    {0x004A, -1},  // (First char = [0x004A, ], Second char = [0xFFFFFFC6, ], Kerning dist = -1) 
    {0x0050, -2},  // (First char = [0x0050, ], Second char = [0xFFFFFFC6, ], Kerning dist = -2) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0xFFFFFFC6, ], Kerning dist = -1) 
    {0x0055, -1},  // (First char = [0x0055, ], Second char = [0xFFFFFFC6, ], Kerning dist = -1) 
    {0x0056, -1},  // (First char = [0x0056, ], Second char = [0xFFFFFFC6, ], Kerning dist = -1) 
    {0x0057, -1},  // (First char = [0x0057, ], Second char = [0xFFFFFFC6, ], Kerning dist = -1) 
    {0x0059, -1},  // (First char = [0x0059, ], Second char = [0xFFFFFFC6, ], Kerning dist = -1) 
    {0x00DD, -1},  // (First char = [0xFFFFFFDD, ], Second char = [0xFFFFFFC6, ], Kerning dist = -1) 
    {0x00DE, -2},  // (First char = [0xFFFFFFDE, ], Second char = [0xFFFFFFC6, ], Kerning dist = -2) 
    {0x004B, -1},  // (First char = [0x004B, ], Second char = [0xFFFFFFC7, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0xFFFFFFC7, ], Kerning dist = -1) 
    {0x004B, -1},  // (First char = [0x004B, ], Second char = [0xFFFFFFD2, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0xFFFFFFD2, ], Kerning dist = -1) 
    {0x004B, -1},  // (First char = [0x004B, ], Second char = [0xFFFFFFD3, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0xFFFFFFD3, ], Kerning dist = -1) 
    {0x004B, -1},  // (First char = [0x004B, ], Second char = [0xFFFFFFD4, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0xFFFFFFD4, ], Kerning dist = -1) 
    {0x004B, -1},  // (First char = [0x004B, ], Second char = [0xFFFFFFD5, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0xFFFFFFD5, ], Kerning dist = -1) 
    {0x004B, -1},  // (First char = [0x004B, ], Second char = [0xFFFFFFD6, ], Kerning dist = -1) 
    {0x0054, -1},  // (First char = [0x0054, ], Second char = [0xFFFFFFD6, ], Kerning dist = -1) 
};

