/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/datetimesettingsscreen_screen/dateTimeSettingsScreenViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <touchgfx/Color.hpp>
#include <texts/TextKeysAndLanguages.hpp>

dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase()  :
    buttonCallback(this, &dateTimeSettingsScreenViewBase::buttonCallbackHandler)
{
    image3.setXY(0, 0);
    image3.setBitmap(Bitmap(BITMAP_BACKGROUND_ID));

    box2.setPosition(126,16,339,44);
    box2.setColor(touchgfx::Color::getColorFrom24BitRGB(255,255,255));
    box2.setAlpha(45);

    dateTimeBackBtn.setPosition(0, 0, 60, 60);
    dateTimeBackBtn.setBitmaps(Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), Bitmap(BITMAP_DARK_ICONS_BACK_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_BACK_ARROW_32_ID));
    dateTimeBackBtn.setIconXY(21, 14);
    dateTimeBackBtn.setAction(buttonCallback);

    dateTimeHomeBtn.setPosition(60, 0, 60, 60);
    dateTimeHomeBtn.setBitmaps(Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), Bitmap(BITMAP_DARK_ICONS_HOME_32_ID), Bitmap(BITMAP_DARK_ICONS_HOME_32_ID));
    dateTimeHomeBtn.setIconXY(14, 15);
    dateTimeHomeBtn.setAction(buttonCallback);

    yearDecBtn.setPosition(61, 189, 60, 60);
    yearDecBtn.setBitmaps(Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
    yearDecBtn.setIconXY(14, 21);
    yearDecBtn.setAction(buttonCallback);

    yearIncBtn.setPosition(120, 189, 60, 60);
    yearIncBtn.setBitmaps(Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
    yearIncBtn.setIconXY(14, 21);
    yearIncBtn.setAction(buttonCallback);

    monthDecBtn.setPosition(181, 189, 60, 60);
    monthDecBtn.setBitmaps(Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
    monthDecBtn.setIconXY(14, 21);
    monthDecBtn.setAction(buttonCallback);

    monthIncBtn.setPosition(241, 189, 60, 60);
    monthIncBtn.setBitmaps(Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
    monthIncBtn.setIconXY(14, 21);
    monthIncBtn.setAction(buttonCallback);

    dayDecBtn.setPosition(301, 189, 60, 60);
    dayDecBtn.setBitmaps(Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
    dayDecBtn.setIconXY(14, 21);
    dayDecBtn.setAction(buttonCallback);

    dayIncBtn.setPosition(361, 189, 60, 60);
    dayIncBtn.setBitmaps(Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
    dayIncBtn.setIconXY(14, 21);
    dayIncBtn.setAction(buttonCallback);

    hourDecBtn.setPosition(120, 96, 60, 60);
    hourDecBtn.setBitmaps(Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
    hourDecBtn.setIconXY(14, 21);
    hourDecBtn.setAction(buttonCallback);

    hourIncBtn.setPosition(181, 96, 60, 60);
    hourIncBtn.setBitmaps(Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
    hourIncBtn.setIconXY(14, 21);
    hourIncBtn.setAction(buttonCallback);

    minDecBtn.setPosition(240, 96, 60, 60);
    minDecBtn.setBitmaps(Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_DOWN_ARROW_32_ID));
    minDecBtn.setIconXY(14, 21);
    minDecBtn.setAction(buttonCallback);

    minIncBtn.setPosition(300, 96, 60, 60);
    minIncBtn.setBitmaps(Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_UP_ARROW_32_ID));
    minIncBtn.setIconXY(14, 21);
    minIncBtn.setAction(buttonCallback);

    textArea1.setPosition(131, 70, 99, 26);
    textArea1.setColor(touchgfx::Color::getColorFrom24BitRGB(255,255,255));
    textArea1.setLinespacing(0);
    textArea1.setTypedText(TypedText(T_TEXTID51));
    textArea1.setAlpha(90);

    textArea1_1.setPosition(251, 70, 99, 26);
    textArea1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255,255,255));
    textArea1_1.setLinespacing(0);
    textArea1_1.setTypedText(TypedText(T_TEXTID52));
    textArea1_1.setAlpha(90);

    textArea1_1_1.setPosition(72, 163, 99, 26);
    textArea1_1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255,255,255));
    textArea1_1_1.setLinespacing(0);
    textArea1_1_1.setTypedText(TypedText(T_TEXTID53));
    textArea1_1_1.setAlpha(90);

    textArea1_1_2.setPosition(192, 163, 99, 26);
    textArea1_1_2.setColor(touchgfx::Color::getColorFrom24BitRGB(255,255,255));
    textArea1_1_2.setLinespacing(0);
    textArea1_1_2.setTypedText(TypedText(T_TEXTID54));
    textArea1_1_2.setAlpha(90);

    textArea1_1_3.setPosition(312, 163, 99, 26);
    textArea1_1_3.setColor(touchgfx::Color::getColorFrom24BitRGB(255,255,255));
    textArea1_1_3.setLinespacing(0);
    textArea1_1_3.setTypedText(TypedText(T_TEXTID55));
    textArea1_1_3.setAlpha(90);

    year.setPosition(152, 16, 65, 44);
    year.setColor(touchgfx::Color::getColorFrom24BitRGB(40,230,50));
    year.setLinespacing(0);
    year.setTypedText(TypedText(T_TEXTID93));
    yearBuffer[0] = 0;
    year.setWildcard(yearBuffer);

    month.setPosition(230, 16, 32, 44);
    month.setColor(touchgfx::Color::getColorFrom24BitRGB(40,230,50));
    month.setLinespacing(0);
    month.setTypedText(TypedText(T_TEXTID95));
    monthBuffer[0] = 0;
    month.setWildcard(monthBuffer);

    textArea2_1.setPosition(262, 16, 15, 44);
    textArea2_1.setColor(touchgfx::Color::getColorFrom24BitRGB(40,230,50));
    textArea2_1.setLinespacing(0);
    textArea2_1.setTypedText(TypedText(T_TEXTID96));

    textArea2_1_1.setPosition(214, 16, 16, 44);
    textArea2_1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(40,230,50));
    textArea2_1_1.setLinespacing(0);
    textArea2_1_1.setTypedText(TypedText(T_TEXTID97));

    textArea2_1_2.setPosition(383, 16, 15, 44);
    textArea2_1_2.setColor(touchgfx::Color::getColorFrom24BitRGB(40,230,50));
    textArea2_1_2.setLinespacing(0);
    textArea2_1_2.setTypedText(TypedText(T_TEXTID98));

    day.setPosition(277, 16, 32, 44);
    day.setColor(touchgfx::Color::getColorFrom24BitRGB(40,230,50));
    day.setLinespacing(0);
    day.setTypedText(TypedText(T_TEXTID99));
    dayBuffer[0] = 0;
    day.setWildcard(dayBuffer);

    hour.setPosition(351, 16, 32, 44);
    hour.setColor(touchgfx::Color::getColorFrom24BitRGB(40,230,50));
    hour.setLinespacing(0);
    hour.setTypedText(TypedText(T_TEXTID100));
    hourBuffer[0] = 0;
    hour.setWildcard(hourBuffer);

    min.setPosition(398, 16, 32, 44);
    min.setColor(touchgfx::Color::getColorFrom24BitRGB(40,230,50));
    min.setLinespacing(0);
    min.setTypedText(TypedText(T_TEXTID101));
    minBuffer[0] = 0;
    min.setWildcard(minBuffer);
    add(image3);
    add(box2);
    add(dateTimeBackBtn);
    add(dateTimeHomeBtn);
    add(yearDecBtn);
    add(yearIncBtn);
    add(monthDecBtn);
    add(monthIncBtn);
    add(dayDecBtn);
    add(dayIncBtn);
    add(hourDecBtn);
    add(hourIncBtn);
    add(minDecBtn);
    add(minIncBtn);
    add(textArea1);
    add(textArea1_1);
    add(textArea1_1_1);
    add(textArea1_1_2);
    add(textArea1_1_3);
    add(year);
    add(month);
    add(textArea2_1);
    add(textArea2_1_1);
    add(textArea2_1_2);
    add(day);
    add(hour);
    add(min);
}

void dateTimeSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &dateTimeBackBtn)
    {
        //dateTimeBackBtnClicked
        //When dateTimeBackBtn clicked change screen to settingsScreen
        //Go to settingsScreen with slide screen transition towards West
        application().gotosettingsScreenScreenSlideTransitionWest();
    }
    else if (&src == &dateTimeHomeBtn)
    {
        //dateTimeHomeBtnClicked
        //When dateTimeHomeBtn clicked change screen to mainScreen
        //Go to mainScreen with slide screen transition towards West
        application().gotomainScreenScreenSlideTransitionWest();
    }
    else if (&src == &yearDecBtn)
    {
        //yearDecBtnClicked
        //When yearDecBtn clicked call virtual function
        //Call yearDecBtnClicked
        yearDecBtnClicked();
    }
    else if (&src == &yearIncBtn)
    {
        //yearIncBtnClicked
        //When yearIncBtn clicked call virtual function
        //Call yearIncBtnClicked
        yearIncBtnClicked();
    }
    else if (&src == &monthDecBtn)
    {
        //monthDecBtnClicked
        //When monthDecBtn clicked call virtual function
        //Call monthDecBtnClicked
        monthDecBtnClicked();
    }
    else if (&src == &monthIncBtn)
    {
        //monthIncBtnClicked
        //When monthIncBtn clicked call virtual function
        //Call monthIncBtnClicked
        monthIncBtnClicked();
    }
    else if (&src == &dayDecBtn)
    {
        //dayDecBtnClicked
        //When dayDecBtn clicked call virtual function
        //Call dayDecBtnClicked
        dayDecBtnClicked();
    }
    else if (&src == &dayIncBtn)
    {
        //dayIncBtnClicked
        //When dayIncBtn clicked call virtual function
        //Call dayIncBtnClicked
        dayIncBtnClicked();
    }
    else if (&src == &hourDecBtn)
    {
        //hourDecBtnClicked
        //When hourDecBtn clicked call virtual function
        //Call hourDecBtnClicked
        hourDecBtnClicked();
    }
    else if (&src == &hourIncBtn)
    {
        //hourIncBtnClicked
        //When hourIncBtn clicked call virtual function
        //Call hourIncBtnClicked
        hourIncBtnClicked();
    }
    else if (&src == &minDecBtn)
    {
        //minDecBtnClicked
        //When minDecBtn clicked call virtual function
        //Call minDecBtnClicked
        minDecBtnClicked();
    }
    else if (&src == &minIncBtn)
    {
        //minIncBtnClicked
        //When minIncBtn clicked call virtual function
        //Call minIncBtnClicked
        minIncBtnClicked();
    }
}
