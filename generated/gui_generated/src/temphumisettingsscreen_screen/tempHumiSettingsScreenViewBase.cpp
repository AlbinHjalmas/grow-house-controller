/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#include <gui_generated/temphumisettingsscreen_screen/tempHumiSettingsScreenViewBase.hpp>
#include "BitmapDatabase.hpp"
#include <texts/TextKeysAndLanguages.hpp>
#include <touchgfx/Color.hpp>

tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()  :
    buttonCallback(this, &tempHumiSettingsScreenViewBase::buttonCallbackHandler),
    sliderValueChangedCallback(this, &tempHumiSettingsScreenViewBase::sliderValueChangedCallbackHandler)
{
    image2.setXY(0, 0);
    image2.setBitmap(Bitmap(BITMAP_BACKGROUND_ID));

    tempHumiBackBtn.setPosition(0, 0, 60, 60);
    tempHumiBackBtn.setBitmaps(Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), Bitmap(BITMAP_DARK_ICONS_BACK_ARROW_32_ID), Bitmap(BITMAP_DARK_ICONS_BACK_ARROW_32_ID));
    tempHumiBackBtn.setIconXY(21, 14);
    tempHumiBackBtn.setAction(buttonCallback);

    tempHumiHomeBtn.setPosition(60, 0, 60, 60);
    tempHumiHomeBtn.setBitmaps(Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID), Bitmap(BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID), Bitmap(BITMAP_DARK_ICONS_HOME_32_ID), Bitmap(BITMAP_DARK_ICONS_HOME_32_ID));
    tempHumiHomeBtn.setIconXY(14, 15);
    tempHumiHomeBtn.setAction(buttonCallback);

    nightHumiSlider.setBitmaps(Bitmap(BITMAP_DARK_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), Bitmap(BITMAP_DARK_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_FILL_ID), Bitmap(BITMAP_DARK_SLIDER_VERTICAL_SMALL_INDICATORS_SLIDER3_VERTICAL_ROUND_NOB_ID));
    nightHumiSlider.setXY(421, 56);
    nightHumiSlider.setNewValueCallback(sliderValueChangedCallback);
    nightHumiSlider.setupVerticalSlider(0, 0, 3, 5, 136);
    nightHumiSlider.setValueRange(10, 90);
    nightHumiSlider.setValue(10);

    nightTempSlider.setBitmaps(Bitmap(BITMAP_DARK_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), Bitmap(BITMAP_DARK_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_FILL_ID), Bitmap(BITMAP_DARK_SLIDER_VERTICAL_SMALL_INDICATORS_SLIDER3_VERTICAL_ROUND_NOB_ID));
    nightTempSlider.setXY(288, 56);
    nightTempSlider.setNewValueCallback(sliderValueChangedCallback);
    nightTempSlider.setupVerticalSlider(0, 0, 3, 5, 136);
    nightTempSlider.setValueRange(15, 35);
    nightTempSlider.setValue(15);

    dayHumiSlider.setBitmaps(Bitmap(BITMAP_DARK_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), Bitmap(BITMAP_DARK_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_FILL_ID), Bitmap(BITMAP_DARK_SLIDER_VERTICAL_SMALL_INDICATORS_SLIDER3_VERTICAL_ROUND_NOB_ID));
    dayHumiSlider.setXY(355, 56);
    dayHumiSlider.setNewValueCallback(sliderValueChangedCallback);
    dayHumiSlider.setupVerticalSlider(0, 0, 3, 5, 136);
    dayHumiSlider.setValueRange(10, 90);
    dayHumiSlider.setValue(10);

    dayTempSlider.setBitmaps(Bitmap(BITMAP_DARK_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID), Bitmap(BITMAP_DARK_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_FILL_ID), Bitmap(BITMAP_DARK_SLIDER_VERTICAL_SMALL_INDICATORS_SLIDER3_VERTICAL_ROUND_NOB_ID));
    dayTempSlider.setXY(220, 56);
    dayTempSlider.setNewValueCallback(sliderValueChangedCallback);
    dayTempSlider.setupVerticalSlider(0, 0, 3, 5, 136);
    dayTempSlider.setValueRange(15, 35);
    dayTempSlider.setValue(15);

    textArea2.setXY(232, 23);
    textArea2.setColor(touchgfx::Color::getColorFrom24BitRGB(255,255,255));
    textArea2.setLinespacing(0);
    textArea2.setTypedText(TypedText(T_TEXTID22));
    textArea2.setAlpha(90);

    textArea3.setXY(380, 23);
    textArea3.setColor(touchgfx::Color::getColorFrom24BitRGB(255,255,255));
    textArea3.setLinespacing(0);
    textArea3.setTypedText(TypedText(T_TEXTID23));
    textArea3.setAlpha(90);

    textArea4.setXY(227, 42);
    textArea4.setColor(touchgfx::Color::getColorFrom24BitRGB(255,255,255));
    textArea4.setLinespacing(0);
    textArea4.setTypedText(TypedText(T_TEXTID24));
    textArea4.setAlpha(90);

    textArea4_1.setXY(362, 42);
    textArea4_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255,255,255));
    textArea4_1.setLinespacing(0);
    textArea4_1.setTypedText(TypedText(T_TEXTID25));
    textArea4_1.setAlpha(90);

    textArea5.setXY(290, 42);
    textArea5.setColor(touchgfx::Color::getColorFrom24BitRGB(255,255,255));
    textArea5.setLinespacing(0);
    textArea5.setTypedText(TypedText(T_TEXTID26));
    textArea5.setAlpha(90);

    textArea5_1.setXY(424, 42);
    textArea5_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255,255,255));
    textArea5_1.setLinespacing(0);
    textArea5_1.setTypedText(TypedText(T_TEXTID27));
    textArea5_1.setAlpha(90);

    box1.setPosition(39,99,55,26);
    box1.setColor(touchgfx::Color::getColorFrom24BitRGB(255,255,255));
    box1.setAlpha(39);

    box1_3.setPosition(130,198,55,26);
    box1_3.setColor(touchgfx::Color::getColorFrom24BitRGB(255,255,255));
    box1_3.setAlpha(39);

    box1_1.setPosition(130,99,55,26);
    box1_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255,255,255));
    box1_1.setAlpha(39);

    box1_2.setPosition(37,198,55,26);
    box1_2.setColor(touchgfx::Color::getColorFrom24BitRGB(255,255,255));
    box1_2.setAlpha(39);

    textArea2_1.setXY(70, 66);
    textArea2_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255,255,255));
    textArea2_1.setLinespacing(0);
    textArea2_1.setTypedText(TypedText(T_TEXTID35));
    textArea2_1.setAlpha(90);

    textArea3_1.setXY(83, 165);
    textArea3_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255,255,255));
    textArea3_1.setLinespacing(0);
    textArea3_1.setTypedText(TypedText(T_TEXTID36));
    textArea3_1.setAlpha(90);

    textArea4_2.setXY(53, 82);
    textArea4_2.setColor(touchgfx::Color::getColorFrom24BitRGB(255,255,255));
    textArea4_2.setLinespacing(0);
    textArea4_2.setTypedText(TypedText(T_TEXTID37));
    textArea4_2.setAlpha(90);

    textArea5_2.setXY(140, 82);
    textArea5_2.setColor(touchgfx::Color::getColorFrom24BitRGB(255,255,255));
    textArea5_2.setLinespacing(0);
    textArea5_2.setTypedText(TypedText(T_TEXTID38));
    textArea5_2.setAlpha(90);

    auhvswuha.setXY(53, 181);
    auhvswuha.setColor(touchgfx::Color::getColorFrom24BitRGB(255,255,255));
    auhvswuha.setLinespacing(0);
    auhvswuha.setTypedText(TypedText(T_TEXTID41));
    auhvswuha.setAlpha(90);

    textArea5_2_1.setXY(140, 181);
    textArea5_2_1.setColor(touchgfx::Color::getColorFrom24BitRGB(255,255,255));
    textArea5_2_1.setLinespacing(0);
    textArea5_2_1.setTypedText(TypedText(T_TEXTID42));
    textArea5_2_1.setAlpha(90);

    dayTempTxt.setPosition(39, 99, 55, 26);
    dayTempTxt.setColor(touchgfx::Color::getColorFrom24BitRGB(40,230,50));
    dayTempTxt.setLinespacing(0);
    dayTempTxt.setTypedText(TypedText(T_TEXTID72));
    dayTempTxtBuffer[0] = 0;
    dayTempTxt.setWildcard(dayTempTxtBuffer);

    nightHumiTxt.setPosition(130, 198, 55, 26);
    nightHumiTxt.setColor(touchgfx::Color::getColorFrom24BitRGB(40,230,50));
    nightHumiTxt.setLinespacing(0);
    nightHumiTxt.setTypedText(TypedText(T_TEXTID73));
    nightHumiTxtBuffer[0] = 0;
    nightHumiTxt.setWildcard(nightHumiTxtBuffer);

    dayHumiTxt.setPosition(37, 198, 55, 26);
    dayHumiTxt.setColor(touchgfx::Color::getColorFrom24BitRGB(40,230,50));
    dayHumiTxt.setLinespacing(0);
    dayHumiTxt.setTypedText(TypedText(T_TEXTID74));
    dayHumiTxtBuffer[0] = 0;
    dayHumiTxt.setWildcard(dayHumiTxtBuffer);

    nightTempTxt.setPosition(130, 99, 55, 26);
    nightTempTxt.setColor(touchgfx::Color::getColorFrom24BitRGB(40,230,50));
    nightTempTxt.setLinespacing(0);
    nightTempTxt.setTypedText(TypedText(T_TEXTID75));
    nightTempTxtBuffer[0] = 0;
    nightTempTxt.setWildcard(nightTempTxtBuffer);
    add(image2);
    add(tempHumiBackBtn);
    add(tempHumiHomeBtn);
    add(nightHumiSlider);
    add(nightTempSlider);
    add(dayHumiSlider);
    add(dayTempSlider);
    add(textArea2);
    add(textArea3);
    add(textArea4);
    add(textArea4_1);
    add(textArea5);
    add(textArea5_1);
    add(box1);
    add(box1_3);
    add(box1_1);
    add(box1_2);
    add(textArea2_1);
    add(textArea3_1);
    add(textArea4_2);
    add(textArea5_2);
    add(auhvswuha);
    add(textArea5_2_1);
    add(dayTempTxt);
    add(nightHumiTxt);
    add(dayHumiTxt);
    add(nightTempTxt);
}

void tempHumiSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton& src)
{
    if (&src == &tempHumiBackBtn)
    {
        //tempHumiBackBtnClicked
        //When tempHumiBackBtn clicked change screen to settingsScreen
        //Go to settingsScreen with slide screen transition towards West
        application().gotosettingsScreenScreenSlideTransitionWest();
    }
    else if (&src == &tempHumiHomeBtn)
    {
        //tempHumiHomeBtnClicked
        //When tempHumiHomeBtn clicked change screen to mainScreen
        //Go to mainScreen with slide screen transition towards West
        application().gotomainScreenScreenSlideTransitionWest();
    }
}

void tempHumiSettingsScreenViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value)
{
    if (&src == &nightHumiSlider)
    {
        //nightHumiSliderValueChanged
        //When nightHumiSlider value changed call virtual function
        //Call nightHumiSliderValueChanged
        nightHumiSliderValueChanged(value);
    }
    else if (&src == &nightTempSlider)
    {
        //nightTempSliderValueChanged
        //When nightTempSlider value changed call virtual function
        //Call nightTempSliderValueChanged
        nightTempSliderValueChanged(value);
    }
    else if (&src == &dayHumiSlider)
    {
        //dayHumiSliderValueChanged
        //When dayHumiSlider value changed call virtual function
        //Call dayHumiSliderValueChanged
        dayHumiSliderValueChanged(value);
    }
    else if (&src == &dayTempSlider)
    {
        //dayTempSliderValueChanged
        //When dayTempSlider value changed call virtual function
        //Call dayTempSliderValueChanged
        dayTempSliderValueChanged(value);
    }
}
