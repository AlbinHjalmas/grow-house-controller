/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef TEMPHUMISETTINGSSCREEN_VIEW_BASE_HPP
#define TEMPHUMISETTINGSSCREEN_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/temphumisettingsscreen_screen/tempHumiSettingsScreenPresenter.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/containers/Slider.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class tempHumiSettingsScreenViewBase : public touchgfx::View<tempHumiSettingsScreenPresenter>
{
public:
    tempHumiSettingsScreenViewBase();
    virtual ~tempHumiSettingsScreenViewBase() {}

    /*
     * Custom Action Handlers
     */
    virtual void dayTempSliderValueChanged(int value)
    {
        // TODO override and implement this function in tempHumiSettingsScreenView
    }

    virtual void nightTempSliderValueChanged(int value)
    {
        // TODO override and implement this function in tempHumiSettingsScreenView
    }

    virtual void dayHumiSliderValueChanged(int value)
    {
        // TODO override and implement this function in tempHumiSettingsScreenView
    }

    virtual void nightHumiSliderValueChanged(int value)
    {
        // TODO override and implement this function in tempHumiSettingsScreenView
    }

protected:
    FrontendApplication& application() { 
        return *static_cast<FrontendApplication*>(Application::getInstance()); 
    }

    /*
     * Member Declarations
     */
    touchgfx::Image image2;
    touchgfx::ButtonWithIcon tempHumiBackBtn;
    touchgfx::ButtonWithIcon tempHumiHomeBtn;
    touchgfx::Slider nightHumiSlider;
    touchgfx::Slider nightTempSlider;
    touchgfx::Slider dayHumiSlider;
    touchgfx::Slider dayTempSlider;
    touchgfx::TextArea textArea2;
    touchgfx::TextArea textArea3;
    touchgfx::TextArea textArea4;
    touchgfx::TextArea textArea4_1;
    touchgfx::TextArea textArea5;
    touchgfx::TextArea textArea5_1;
    touchgfx::Box box1;
    touchgfx::Box box1_3;
    touchgfx::Box box1_1;
    touchgfx::Box box1_2;
    touchgfx::TextArea textArea2_1;
    touchgfx::TextArea textArea3_1;
    touchgfx::TextArea textArea4_2;
    touchgfx::TextArea textArea5_2;
    touchgfx::TextArea auhvswuha;
    touchgfx::TextArea textArea5_2_1;
    touchgfx::TextAreaWithOneWildcard dayTempTxt;
    touchgfx::TextAreaWithOneWildcard nightHumiTxt;
    touchgfx::TextAreaWithOneWildcard dayHumiTxt;
    touchgfx::TextAreaWithOneWildcard nightTempTxt;

    /*
     * Wildcard Buffers
     */
    static const uint16_t DAYTEMPTXT_SIZE = 3;
    touchgfx::Unicode::UnicodeChar dayTempTxtBuffer[DAYTEMPTXT_SIZE];
    static const uint16_t NIGHTHUMITXT_SIZE = 3;
    touchgfx::Unicode::UnicodeChar nightHumiTxtBuffer[NIGHTHUMITXT_SIZE];
    static const uint16_t DAYHUMITXT_SIZE = 3;
    touchgfx::Unicode::UnicodeChar dayHumiTxtBuffer[DAYHUMITXT_SIZE];
    static const uint16_t NIGHTTEMPTXT_SIZE = 3;
    touchgfx::Unicode::UnicodeChar nightTempTxtBuffer[NIGHTTEMPTXT_SIZE];

private:

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);
    void sliderValueChangedCallbackHandler(const touchgfx::Slider& src, int value);

    /*
     * Callback Declarations
     */
    touchgfx::Callback<tempHumiSettingsScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;
    touchgfx::Callback<tempHumiSettingsScreenViewBase, const touchgfx::Slider&, int> sliderValueChangedCallback;

};

#endif // TEMPHUMISETTINGSSCREEN_VIEW_BASE_HPP
