/*********************************************************************************/
/********** THIS FILE IS GENERATED BY TOUCHGFX DESIGNER, DO NOT MODIFY ***********/
/*********************************************************************************/
#ifndef DATETIMESETTINGSSCREEN_VIEW_BASE_HPP
#define DATETIMESETTINGSSCREEN_VIEW_BASE_HPP

#include <gui/common/FrontendApplication.hpp>
#include <mvp/View.hpp>
#include <gui/datetimesettingsscreen_screen/dateTimeSettingsScreenPresenter.hpp>
#include <touchgfx/widgets/Image.hpp>
#include <touchgfx/widgets/Box.hpp>
#include <touchgfx/widgets/ButtonWithIcon.hpp>
#include <touchgfx/widgets/TextArea.hpp>
#include <touchgfx/widgets/TextAreaWithWildcard.hpp>

class dateTimeSettingsScreenViewBase : public touchgfx::View<dateTimeSettingsScreenPresenter>
{
public:
    dateTimeSettingsScreenViewBase();
    virtual ~dateTimeSettingsScreenViewBase() {}

    /*
     * Custom Action Handlers
     */
    virtual void hourDecBtnClicked()
    {
        // TODO override and implement this function in dateTimeSettingsScreenView
    }

    virtual void hourIncBtnClicked()
    {
        // TODO override and implement this function in dateTimeSettingsScreenView
    }

    virtual void minDecBtnClicked()
    {
        // TODO override and implement this function in dateTimeSettingsScreenView
    }

    virtual void minIncBtnClicked()
    {
        // TODO override and implement this function in dateTimeSettingsScreenView
    }

    virtual void yearDecBtnClicked()
    {
        // TODO override and implement this function in dateTimeSettingsScreenView
    }

    virtual void yearIncBtnClicked()
    {
        // TODO override and implement this function in dateTimeSettingsScreenView
    }

    virtual void monthDecBtnClicked()
    {
        // TODO override and implement this function in dateTimeSettingsScreenView
    }

    virtual void monthIncBtnClicked()
    {
        // TODO override and implement this function in dateTimeSettingsScreenView
    }

    virtual void dayDecBtnClicked()
    {
        // TODO override and implement this function in dateTimeSettingsScreenView
    }

    virtual void dayIncBtnClicked()
    {
        // TODO override and implement this function in dateTimeSettingsScreenView
    }

protected:
    FrontendApplication& application() { 
        return *static_cast<FrontendApplication*>(Application::getInstance()); 
    }

    /*
     * Member Declarations
     */
    touchgfx::Image image3;
    touchgfx::Box box2;
    touchgfx::ButtonWithIcon dateTimeBackBtn;
    touchgfx::ButtonWithIcon dateTimeHomeBtn;
    touchgfx::ButtonWithIcon yearDecBtn;
    touchgfx::ButtonWithIcon yearIncBtn;
    touchgfx::ButtonWithIcon monthDecBtn;
    touchgfx::ButtonWithIcon monthIncBtn;
    touchgfx::ButtonWithIcon dayDecBtn;
    touchgfx::ButtonWithIcon dayIncBtn;
    touchgfx::ButtonWithIcon hourDecBtn;
    touchgfx::ButtonWithIcon hourIncBtn;
    touchgfx::ButtonWithIcon minDecBtn;
    touchgfx::ButtonWithIcon minIncBtn;
    touchgfx::TextArea textArea1;
    touchgfx::TextArea textArea1_1;
    touchgfx::TextArea textArea1_1_1;
    touchgfx::TextArea textArea1_1_2;
    touchgfx::TextArea textArea1_1_3;
    touchgfx::TextAreaWithOneWildcard year;
    touchgfx::TextAreaWithOneWildcard month;
    touchgfx::TextArea textArea2_1;
    touchgfx::TextArea textArea2_1_1;
    touchgfx::TextArea textArea2_1_2;
    touchgfx::TextAreaWithOneWildcard day;
    touchgfx::TextAreaWithOneWildcard hour;
    touchgfx::TextAreaWithOneWildcard min;

    /*
     * Wildcard Buffers
     */
    static const uint16_t YEAR_SIZE = 5;
    touchgfx::Unicode::UnicodeChar yearBuffer[YEAR_SIZE];
    static const uint16_t MONTH_SIZE = 3;
    touchgfx::Unicode::UnicodeChar monthBuffer[MONTH_SIZE];
    static const uint16_t DAY_SIZE = 3;
    touchgfx::Unicode::UnicodeChar dayBuffer[DAY_SIZE];
    static const uint16_t HOUR_SIZE = 3;
    touchgfx::Unicode::UnicodeChar hourBuffer[HOUR_SIZE];
    static const uint16_t MIN_SIZE = 3;
    touchgfx::Unicode::UnicodeChar minBuffer[MIN_SIZE];

private:

    /*
     * Callback Handler Declarations
     */
    void buttonCallbackHandler(const touchgfx::AbstractButton& src);

    /*
     * Callback Declarations
     */
    touchgfx::Callback<dateTimeSettingsScreenViewBase, const touchgfx::AbstractButton&> buttonCallback;

};

#endif // DATETIMESETTINGSSCREEN_VIEW_BASE_HPP
