// Generated by imageconverter. Please, do not edit!

#ifndef BITMAPDATABASE_HPP
#define BITMAPDATABASE_HPP

#include <touchgfx/hal/Types.hpp>
#include <touchgfx/Bitmap.hpp>

const uint16_t BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_ID = 0; // Size: 60x60 pixels
const uint16_t BITMAP_DARK_BUTTONS_ROUND_EDGE_ICON_BUTTON_PRESSED_ID = 1; // Size: 60x60 pixels
const uint16_t BITMAP_DARK_BUTTONS_ROUND_EDGE_LARGE_ID = 2; // Size: 360x60 pixels
const uint16_t BITMAP_DARK_BUTTONS_ROUND_EDGE_LARGE_PRESSED_ID = 3; // Size: 360x60 pixels
const uint16_t BITMAP_DARK_ICONS_BACK_ARROW_32_ID = 4; // Size: 19x32 pixels
const uint16_t BITMAP_DARK_ICONS_DOWN_ARROW_32_ID = 5; // Size: 32x19 pixels
const uint16_t BITMAP_DARK_ICONS_HOME_32_ID = 6; // Size: 32x31 pixels
const uint16_t BITMAP_DARK_ICONS_INFO_32_ID = 7; // Size: 32x32 pixels
const uint16_t BITMAP_DARK_ICONS_POWER_32_ID = 8; // Size: 31x31 pixels
const uint16_t BITMAP_DARK_ICONS_SETTINGS_32_ID = 9; // Size: 32x32 pixels
const uint16_t BITMAP_DARK_ICONS_UP_ARROW_32_ID = 10; // Size: 32x19 pixels
const uint16_t BITMAP_DARK_SLIDER_VERTICAL_SMALL_INDICATORS_SLIDER3_VERTICAL_ROUND_NOB_ID = 11; // Size: 34x54 pixels
const uint16_t BITMAP_DARK_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_BACK_ID = 12; // Size: 40x193 pixels
const uint16_t BITMAP_DARK_SLIDER_VERTICAL_SMALL_SLIDER3_VERTICAL_ROUND_FILL_ID = 13; // Size: 40x193 pixels
const uint16_t BITMAP_DARK_TOGGLEBARS_TOGGLE_ROUND_SMALL_BUTTON_OFF_ID = 14; // Size: 96x38 pixels
const uint16_t BITMAP_DARK_TOGGLEBARS_TOGGLE_ROUND_SMALL_BUTTON_ON_ID = 15; // Size: 96x38 pixels
const uint16_t BITMAP_DARK_TOGGLEBARS_TOGGLE_SMALL_BUTTON_OFF_ID = 16; // Size: 96x38 pixels
const uint16_t BITMAP_DARK_TOGGLEBARS_TOGGLE_SMALL_BUTTON_ON_ID = 17; // Size: 96x38 pixels
const uint16_t BITMAP_BACKGROUND_ID = 18; // Size: 480x272 pixels

namespace BitmapDatabase
{
#ifndef NO_USING_NAMESPACE_TOUCHGFX
  using namespace touchgfx;
#endif

  class BitmapData;
  const touchgfx::Bitmap::BitmapData* getInstance();
  uint16_t getInstanceSize();
}

#endif
