<!doctype html public "-//w3c//dtd html 4.0 transitional//en">
<html><head>
<title>Static Call Graph - [.\Flash\application.axf]</title></head>
<body><HR>
<H1>Static Call Graph for image .\Flash\application.axf</H1><HR>
<BR><P>#&#060CALLGRAPH&#062# ARM Linker, 5060528: Last Updated: Fri Sep 01 20:12:00 2017
<BR><P>
<H3>Maximum Stack Usage =        512 bytes + Unknown(Functions without stacksize, Cycles, Untraceable Function Pointers)</H3><H3>
Call chain for Maximum Stack Depth:</H3>
mainScreenView::setupScreen() &rArr; mainScreenView::setDate(int, int, int, int, int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<P>
<H3>
Functions with no stack information
</H3><UL>
 <LI><a href="#[268]">__user_initial_stackheap</a>
</UL>
</UL>
<P>
<H3>
Mutually Recursive functions
</H3> <LI><a href="#[1e]">NMI_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1e]">NMI_Handler</a><BR>
 <LI><a href="#[1f]">HardFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[1f]">HardFault_Handler</a><BR>
 <LI><a href="#[20]">MemManage_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[20]">MemManage_Handler</a><BR>
 <LI><a href="#[21]">BusFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[21]">BusFault_Handler</a><BR>
 <LI><a href="#[22]">UsageFault_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[22]">UsageFault_Handler</a><BR>
 <LI><a href="#[24]">DebugMon_Handler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[24]">DebugMon_Handler</a><BR>
 <LI><a href="#[39]">ADC_IRQHandler</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[39]">ADC_IRQHandler</a><BR>
 <LI><a href="#[440]">touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)</a>&nbsp;&nbsp;&nbsp;&rArr;&nbsp;&nbsp;&nbsp;<a href="#[440]">touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)</a><BR>
</UL>
<P>
<H3>
Function Pointers
</H3><UL>
 <LI><a href="#[39]">ADC_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[21]">BusFault_Handler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[3b]">CAN1_RX0_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[3c]">CAN1_RX1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[3d]">CAN1_SCE_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[3a]">CAN1_TX_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[67]">CAN2_RX0_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[68]">CAN2_RX1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[69]">CAN2_SCE_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[66]">CAN2_TX_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[84]">CEC_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[75]">DCMI_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[32]">DMA1_Stream0_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[33]">DMA1_Stream1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[34]">DMA1_Stream2_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[35]">DMA1_Stream3_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[36]">DMA1_Stream4_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[37]">DMA1_Stream5_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[38]">DMA1_Stream6_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[56]">DMA1_Stream7_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[80]">DMA2D_IRQHandler</a> from stm32f7hal.o(i.DMA2D_IRQHandler) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[5f]">DMA2_Stream0_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[60]">DMA2_Stream1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[61]">DMA2_Stream2_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[62]">DMA2_Stream3_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[63]">DMA2_Stream4_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[6b]">DMA2_Stream5_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[6c]">DMA2_Stream6_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[6d]">DMA2_Stream7_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[24]">DebugMon_Handler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[64]">ETH_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[65]">ETH_WKUP_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[2d]">EXTI0_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[4f]">EXTI15_10_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[2e]">EXTI1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[2f]">EXTI2_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[30]">EXTI3_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[31]">EXTI4_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[3e]">EXTI9_5_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[2b]">FLASH_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[57]">FMC_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[77]">FPU_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[1f]">HardFault_Handler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[47]">I2C1_ER_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[46]">I2C1_EV_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[49]">I2C2_ER_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[48]">I2C2_EV_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[70]">I2C3_ER_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[6f]">I2C3_EV_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[86]">I2C4_ER_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[85]">I2C4_EV_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[83]">LPTIM1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[7f]">LTDC_ER_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[7e]">LTDC_IRQHandler</a> from stm32f7hal.o(i.LTDC_IRQHandler) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[20]">MemManage_Handler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[1e]">NMI_Handler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[6a]">OTG_FS_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[51]">OTG_FS_WKUP_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[72]">OTG_HS_EP1_IN_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[71]">OTG_HS_EP1_OUT_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[74]">OTG_HS_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[73]">OTG_HS_WKUP_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[28]">PVD_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[25]">PendSV_Handler</a> from port.o(.emb_text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[82]">QUADSPI_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[2c]">RCC_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[76]">RNG_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[50]">RTC_Alarm_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[2a]">RTC_WKUP_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[1d]">Reset_Handler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[7d]">SAI1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[81]">SAI2_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[58]">SDMMC1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[87]">SPDIF_RX_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[4a]">SPI1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[4b]">SPI2_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[5a]">SPI3_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[7a]">SPI4_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[7b]">SPI5_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[7c]">SPI6_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[23]">SVC_Handler</a> from port.o(.emb_text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[26]">SysTick_Handler</a> from boardconfiguration.o(i.SysTick_Handler) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[88]">SystemInit</a> from system_stm32f7xx.o(i.SystemInit) referenced from startup_stm32f746xx.o(.text)
 <LI><a href="#[29]">TAMP_STAMP_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[3f]">TIM1_BRK_TIM9_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[42]">TIM1_CC_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[41]">TIM1_TRG_COM_TIM11_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[40]">TIM1_UP_TIM10_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[43]">TIM2_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[44]">TIM3_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[45]">TIM4_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[59]">TIM5_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[5d]">TIM6_DAC_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[5e]">TIM7_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[52]">TIM8_BRK_TIM12_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[55]">TIM8_CC_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[54]">TIM8_TRG_COM_TIM14_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[53]">TIM8_UP_TIM13_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[5b]">UART4_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[5c]">UART5_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[78]">UART7_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[79]">UART8_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[4c]">USART1_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[4d]">USART2_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[4e]">USART3_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[6e]">USART6_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[22]">UsageFault_Handler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[27]">WWDG_IRQHandler</a> from startup_stm32f746xx.o(.text) referenced from startup_stm32f746xx.o(RESET)
 <LI><a href="#[95]">IdleTaskHook(void*)</a> from oswrappers.o(i._Z12IdleTaskHookPv) referenced from oswrappers.o(i.vApplicationIdleHook)
 <LI><a href="#[93]">GUITask(void*)</a> from main.o(i._Z7GUITaskPv) referenced from main.o(i.main)
 <LI><a href="#[ae]">STM32F7DMA::initialize()</a> from stm32f7dma.o(i._ZN10STM32F7DMA10initializeEv) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[ab]">STM32F7DMA::getBlitCaps()</a> from stm32f7dma.o(i._ZN10STM32F7DMA11getBlitCapsEv) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[b4]">STM32F7DMA::setupDataCopy(const touchgfx::BlitOp&)</a> from stm32f7dma.o(i._ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[b5]">STM32F7DMA::setupDataFill(const touchgfx::BlitOp&)</a> from stm32f7dma.o(i._ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[b9]">STM32F7DMA::setupFillWithAlpha(const touchgfx::BlitOp&)</a> from stm32f7dma.o(i._ZN10STM32F7DMA18setupFillWithAlphaERKN8touchgfx6BlitOpE) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[b0]">STM32F7DMA::signalDMAInterrupt()</a> from stm32f7dma.o(i._ZN10STM32F7DMA18signalDMAInterruptEv) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[8d]">STM32F7DMA::~STM32F7DMA()</a> from stm32f7dma.o(i._ZN10STM32F7DMAD1Ev) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[8d]">STM32F7DMA::~STM32F7DMA()</a> from stm32f7dma.o(i._ZN10STM32F7DMAD1Ev) referenced from boardconfiguration.o(i.__sti___22_BoardConfiguration_cpp_dceb80ee)
 <LI><a href="#[cb]">STM32F7HAL::enableInterrupts()</a> from stm32f7hal.o(i._ZN10STM32F7HAL16enableInterruptsEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[bb]">STM32F7HAL::flushFrameBuffer(const touchgfx::Rect&)</a> from stm32f7hal.o(i._ZN10STM32F7HAL16flushFrameBufferERKN8touchgfx4RectE) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[cc]">STM32F7HAL::disableInterrupts()</a> from stm32f7hal.o(i._ZN10STM32F7HAL17disableInterruptsEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[d0]">STM32F7HAL::getTFTCurrentLine()</a> from stm32f7hal.o(i._ZN10STM32F7HAL17getTFTCurrentLineEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[d5]">STM32F7HAL::setTFTFrameBuffer(unsigned short*)</a> from stm32f7hal.o(i._ZN10STM32F7HAL17setTFTFrameBufferEPt) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[ca]">STM32F7HAL::configureInterrupts()</a> from stm32f7hal.o(i._ZN10STM32F7HAL19configureInterruptsEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[cd]">STM32F7HAL::enableLCDControllerInterrupt()</a> from stm32f7hal.o(i._ZN10STM32F7HAL28enableLCDControllerInterruptEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[99]">STM32F7HAL::~STM32F7HAL()</a> from stm32f7hal.o(i._ZN10STM32F7HALD1Ev) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[99]">STM32F7HAL::~STM32F7HAL()</a> from stm32f7hal.o(i._ZN10STM32F7HALD1Ev) referenced from boardconfiguration.o(t._ZN8touchgfx6getHALI10STM32F7HALEERNS_3HALERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEss)
 <LI><a href="#[db]">Screen1View::setupScreen()</a> from screen1view.o(i._ZN11Screen1View11setupScreenEv) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[e3]">Screen1View::homeBtnClicked()</a> from screen1view.o(i._ZN11Screen1View14homeBtnClickedEv) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[dd]">Screen1View::tearDownScreen()</a> from screen1view.o(i._ZN11Screen1View14tearDownScreenEv) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[d9]">Screen1View::~Screen1View()</a> from screen1view.o(i._ZN11Screen1ViewD1Ev) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[97]">FrontendHeap::~FrontendHeap()</a> from boardconfiguration.o(i._ZN12FrontendHeapD1Ev) referenced from boardconfiguration.o(.constdata__ZTV12FrontendHeap)
 <LI><a href="#[97]">FrontendHeap::~FrontendHeap()</a> from boardconfiguration.o(i._ZN12FrontendHeapD1Ev) referenced from boardconfiguration.o(t._ZN8touchgfx21touchgfx_generic_initI10STM32F7HALEERNS_3HALERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEssPtjj)
 <LI><a href="#[e7]">ModelListener::dateChanged(int, int, int, int, int)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener11dateChangedEiiiii) referenced from datetimesettingsscreenpresenter.o(.constdata__ZTV13ModelListener)
 <LI><a href="#[e7]">ModelListener::dateChanged(int, int, int, int, int)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener11dateChangedEiiiii) referenced from screen1presenter.o(.constdata__ZTV16Screen1Presenter)
 <LI><a href="#[e7]">ModelListener::dateChanged(int, int, int, int, int)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener11dateChangedEiiiii) referenced from settingsscreenpresenter.o(.constdata__ZTV23settingsScreenPresenter)
 <LI><a href="#[e7]">ModelListener::dateChanged(int, int, int, int, int)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener11dateChangedEiiiii) referenced from datetimesettingsscreenpresenter.o(.constdata__ZTV31dateTimeSettingsScreenPresenter)
 <LI><a href="#[e7]">ModelListener::dateChanged(int, int, int, int, int)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener11dateChangedEiiiii) referenced from daynightsettingsscreenpresenter.o(.constdata__ZTV31dayNightSettingsScreenPresenter)
 <LI><a href="#[e7]">ModelListener::dateChanged(int, int, int, int, int)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener11dateChangedEiiiii) referenced from opconfigsettingsscreenpresenter.o(.constdata__ZTV31opConfigSettingsScreenPresenter)
 <LI><a href="#[e7]">ModelListener::dateChanged(int, int, int, int, int)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener11dateChangedEiiiii) referenced from temphumisettingsscreenpresenter.o(.constdata__ZTV31tempHumiSettingsScreenPresenter)
 <LI><a href="#[e6]">ModelListener::humidityChanged(int)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener15humidityChangedEi) referenced from datetimesettingsscreenpresenter.o(.constdata__ZTV13ModelListener)
 <LI><a href="#[e6]">ModelListener::humidityChanged(int)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener15humidityChangedEi) referenced from screen1presenter.o(.constdata__ZTV16Screen1Presenter)
 <LI><a href="#[e6]">ModelListener::humidityChanged(int)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener15humidityChangedEi) referenced from settingsscreenpresenter.o(.constdata__ZTV23settingsScreenPresenter)
 <LI><a href="#[e6]">ModelListener::humidityChanged(int)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener15humidityChangedEi) referenced from datetimesettingsscreenpresenter.o(.constdata__ZTV31dateTimeSettingsScreenPresenter)
 <LI><a href="#[e6]">ModelListener::humidityChanged(int)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener15humidityChangedEi) referenced from daynightsettingsscreenpresenter.o(.constdata__ZTV31dayNightSettingsScreenPresenter)
 <LI><a href="#[e6]">ModelListener::humidityChanged(int)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener15humidityChangedEi) referenced from opconfigsettingsscreenpresenter.o(.constdata__ZTV31opConfigSettingsScreenPresenter)
 <LI><a href="#[e6]">ModelListener::humidityChanged(int)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener15humidityChangedEi) referenced from temphumisettingsscreenpresenter.o(.constdata__ZTV31tempHumiSettingsScreenPresenter)
 <LI><a href="#[ea]">ModelListener::heatOpStateChanged(bool)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener18heatOpStateChangedEb) referenced from datetimesettingsscreenpresenter.o(.constdata__ZTV13ModelListener)
 <LI><a href="#[ea]">ModelListener::heatOpStateChanged(bool)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener18heatOpStateChangedEb) referenced from screen1presenter.o(.constdata__ZTV16Screen1Presenter)
 <LI><a href="#[ea]">ModelListener::heatOpStateChanged(bool)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener18heatOpStateChangedEb) referenced from settingsscreenpresenter.o(.constdata__ZTV23settingsScreenPresenter)
 <LI><a href="#[ea]">ModelListener::heatOpStateChanged(bool)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener18heatOpStateChangedEb) referenced from datetimesettingsscreenpresenter.o(.constdata__ZTV31dateTimeSettingsScreenPresenter)
 <LI><a href="#[ea]">ModelListener::heatOpStateChanged(bool)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener18heatOpStateChangedEb) referenced from daynightsettingsscreenpresenter.o(.constdata__ZTV31dayNightSettingsScreenPresenter)
 <LI><a href="#[ea]">ModelListener::heatOpStateChanged(bool)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener18heatOpStateChangedEb) referenced from opconfigsettingsscreenpresenter.o(.constdata__ZTV31opConfigSettingsScreenPresenter)
 <LI><a href="#[ea]">ModelListener::heatOpStateChanged(bool)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener18heatOpStateChangedEb) referenced from temphumisettingsscreenpresenter.o(.constdata__ZTV31tempHumiSettingsScreenPresenter)
 <LI><a href="#[e9]">ModelListener::humiOpStateChanged(bool)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener18humiOpStateChangedEb) referenced from datetimesettingsscreenpresenter.o(.constdata__ZTV13ModelListener)
 <LI><a href="#[e9]">ModelListener::humiOpStateChanged(bool)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener18humiOpStateChangedEb) referenced from screen1presenter.o(.constdata__ZTV16Screen1Presenter)
 <LI><a href="#[e9]">ModelListener::humiOpStateChanged(bool)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener18humiOpStateChangedEb) referenced from settingsscreenpresenter.o(.constdata__ZTV23settingsScreenPresenter)
 <LI><a href="#[e9]">ModelListener::humiOpStateChanged(bool)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener18humiOpStateChangedEb) referenced from datetimesettingsscreenpresenter.o(.constdata__ZTV31dateTimeSettingsScreenPresenter)
 <LI><a href="#[e9]">ModelListener::humiOpStateChanged(bool)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener18humiOpStateChangedEb) referenced from daynightsettingsscreenpresenter.o(.constdata__ZTV31dayNightSettingsScreenPresenter)
 <LI><a href="#[e9]">ModelListener::humiOpStateChanged(bool)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener18humiOpStateChangedEb) referenced from opconfigsettingsscreenpresenter.o(.constdata__ZTV31opConfigSettingsScreenPresenter)
 <LI><a href="#[e9]">ModelListener::humiOpStateChanged(bool)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener18humiOpStateChangedEb) referenced from temphumisettingsscreenpresenter.o(.constdata__ZTV31tempHumiSettingsScreenPresenter)
 <LI><a href="#[e5]">ModelListener::temperatureChanged(int)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener18temperatureChangedEi) referenced from datetimesettingsscreenpresenter.o(.constdata__ZTV13ModelListener)
 <LI><a href="#[e5]">ModelListener::temperatureChanged(int)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener18temperatureChangedEi) referenced from screen1presenter.o(.constdata__ZTV16Screen1Presenter)
 <LI><a href="#[e5]">ModelListener::temperatureChanged(int)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener18temperatureChangedEi) referenced from settingsscreenpresenter.o(.constdata__ZTV23settingsScreenPresenter)
 <LI><a href="#[e5]">ModelListener::temperatureChanged(int)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener18temperatureChangedEi) referenced from datetimesettingsscreenpresenter.o(.constdata__ZTV31dateTimeSettingsScreenPresenter)
 <LI><a href="#[e5]">ModelListener::temperatureChanged(int)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener18temperatureChangedEi) referenced from daynightsettingsscreenpresenter.o(.constdata__ZTV31dayNightSettingsScreenPresenter)
 <LI><a href="#[e5]">ModelListener::temperatureChanged(int)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener18temperatureChangedEi) referenced from opconfigsettingsscreenpresenter.o(.constdata__ZTV31opConfigSettingsScreenPresenter)
 <LI><a href="#[e5]">ModelListener::temperatureChanged(int)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener18temperatureChangedEi) referenced from temphumisettingsscreenpresenter.o(.constdata__ZTV31tempHumiSettingsScreenPresenter)
 <LI><a href="#[e8]">ModelListener::lightOpStateChanged(bool)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener19lightOpStateChangedEb) referenced from datetimesettingsscreenpresenter.o(.constdata__ZTV13ModelListener)
 <LI><a href="#[e8]">ModelListener::lightOpStateChanged(bool)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener19lightOpStateChangedEb) referenced from screen1presenter.o(.constdata__ZTV16Screen1Presenter)
 <LI><a href="#[e8]">ModelListener::lightOpStateChanged(bool)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener19lightOpStateChangedEb) referenced from settingsscreenpresenter.o(.constdata__ZTV23settingsScreenPresenter)
 <LI><a href="#[e8]">ModelListener::lightOpStateChanged(bool)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener19lightOpStateChangedEb) referenced from datetimesettingsscreenpresenter.o(.constdata__ZTV31dateTimeSettingsScreenPresenter)
 <LI><a href="#[e8]">ModelListener::lightOpStateChanged(bool)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener19lightOpStateChangedEb) referenced from daynightsettingsscreenpresenter.o(.constdata__ZTV31dayNightSettingsScreenPresenter)
 <LI><a href="#[e8]">ModelListener::lightOpStateChanged(bool)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener19lightOpStateChangedEb) referenced from opconfigsettingsscreenpresenter.o(.constdata__ZTV31opConfigSettingsScreenPresenter)
 <LI><a href="#[e8]">ModelListener::lightOpStateChanged(bool)</a> from datetimesettingsscreenpresenter.o(i._ZN13ModelListener19lightOpStateChangedEb) referenced from temphumisettingsscreenpresenter.o(.constdata__ZTV31tempHumiSettingsScreenPresenter)
 <LI><a href="#[ec]">mainScreenView::setupScreen()</a> from mainscreenview.o(i._ZN14mainScreenView11setupScreenEv) referenced from mainscreenview.o(.constdata__ZTV14mainScreenView)
 <LI><a href="#[ed]">mainScreenView::tearDownScreen()</a> from mainscreenview.o(i._ZN14mainScreenView14tearDownScreenEv) referenced from mainscreenview.o(.constdata__ZTV14mainScreenView)
 <LI><a href="#[f0]">mainScreenView::lightOpBtnClicked()</a> from mainscreenview.o(i._ZN14mainScreenView17lightOpBtnClickedEv) referenced from mainscreenview.o(.constdata__ZTV14mainScreenView)
 <LI><a href="#[f1]">mainScreenView::heaterOpBtnClicked()</a> from mainscreenview.o(i._ZN14mainScreenView18heaterOpBtnClickedEv) referenced from mainscreenview.o(.constdata__ZTV14mainScreenView)
 <LI><a href="#[f2]">mainScreenView::mainPowerBtnClicked()</a> from mainscreenview.o(i._ZN14mainScreenView19mainPowerBtnClickedEv) referenced from mainscreenview.o(.constdata__ZTV14mainScreenView)
 <LI><a href="#[ef]">mainScreenView::humidifierOpBtnClicked()</a> from mainscreenview.o(i._ZN14mainScreenView22humidifierOpBtnClickedEv) referenced from mainscreenview.o(.constdata__ZTV14mainScreenView)
 <LI><a href="#[ee]">mainScreenView::manualOverrideBtnClicked()</a> from mainscreenview.o(i._ZN14mainScreenView24manualOverrideBtnClickedEv) referenced from mainscreenview.o(.constdata__ZTV14mainScreenView)
 <LI><a href="#[eb]">mainScreenView::~mainScreenView()</a> from mainscreenview.o(i._ZN14mainScreenViewD1Ev) referenced from mainscreenview.o(.constdata__ZTV14mainScreenView)
 <LI><a href="#[f6]">Screen1ViewBase::homeBtnClicked()</a> from screen1view.o(i._ZN15Screen1ViewBase14homeBtnClickedEv) referenced from screen1view.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[a7]">Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</a> from screen1viewbase.o(i._ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE) referenced from screen1viewbase.o(.constdata)
 <LI><a href="#[f3]">Screen1ViewBase::~Screen1ViewBase()</a> from screen1viewbase.o(i._ZN15Screen1ViewBaseD1Ev) referenced from screen1view.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[e4]">FrontendHeapBase::gotoStartScreen(FrontendApplication&)</a> from boardconfiguration.o(i._ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication) referenced from boardconfiguration.o(.constdata__ZTV12FrontendHeap)
 <LI><a href="#[e4]">FrontendHeapBase::gotoStartScreen(FrontendApplication&)</a> from boardconfiguration.o(i._ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication) referenced from boardconfiguration.o(.constdata__ZTV16FrontendHeapBase)
 <LI><a href="#[f7]">FrontendHeapBase::~FrontendHeapBase()</a> from boardconfiguration.o(i._ZN16FrontendHeapBaseD1Ev) referenced from boardconfiguration.o(.constdata__ZTV16FrontendHeapBase)
 <LI><a href="#[f9]">Screen1Presenter::deactivate()</a> from screen1presenter.o(i._ZN16Screen1Presenter10deactivateEv) referenced from screen1presenter.o(.constdata__ZTV16Screen1Presenter)
 <LI><a href="#[f8]">Screen1Presenter::activate()</a> from screen1presenter.o(i._ZN16Screen1Presenter8activateEv) referenced from screen1presenter.o(.constdata__ZTV16Screen1Presenter)
 <LI><a href="#[fa]">Screen1Presenter::~Screen1Presenter()</a> from screen1presenter.o(i._ZN16Screen1PresenterD1Ev) referenced from screen1presenter.o(.constdata__ZTV16Screen1Presenter)
 <LI><a href="#[fe]">mainScreenViewBase::lightOpBtnClicked()</a> from mainscreenview.o(i._ZN18mainScreenViewBase17lightOpBtnClickedEv) referenced from mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
 <LI><a href="#[ff]">mainScreenViewBase::heaterOpBtnClicked()</a> from mainscreenview.o(i._ZN18mainScreenViewBase18heaterOpBtnClickedEv) referenced from mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
 <LI><a href="#[100]">mainScreenViewBase::mainPowerBtnClicked()</a> from mainscreenview.o(i._ZN18mainScreenViewBase19mainPowerBtnClickedEv) referenced from mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
 <LI><a href="#[a5]">mainScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</a> from mainscreenviewbase.o(i._ZN18mainScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE) referenced from mainscreenviewbase.o(.constdata)
 <LI><a href="#[fd]">mainScreenViewBase::humidifierOpBtnClicked()</a> from mainscreenview.o(i._ZN18mainScreenViewBase22humidifierOpBtnClickedEv) referenced from mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
 <LI><a href="#[fc]">mainScreenViewBase::manualOverrideBtnClicked()</a> from mainscreenview.o(i._ZN18mainScreenViewBase24manualOverrideBtnClickedEv) referenced from mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
 <LI><a href="#[fb]">mainScreenViewBase::~mainScreenViewBase()</a> from mainscreenviewbase.o(i._ZN18mainScreenViewBaseD1Ev) referenced from mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
 <LI><a href="#[102]">settingsScreenView::setupScreen()</a> from settingsscreenview.o(i._ZN18settingsScreenView11setupScreenEv) referenced from settingsscreenview.o(.constdata__ZTV18settingsScreenView)
 <LI><a href="#[103]">settingsScreenView::tearDownScreen()</a> from settingsscreenview.o(i._ZN18settingsScreenView14tearDownScreenEv) referenced from settingsscreenview.o(.constdata__ZTV18settingsScreenView)
 <LI><a href="#[101]">settingsScreenView::~settingsScreenView()</a> from settingsscreenview.o(i._ZN18settingsScreenViewD1Ev) referenced from settingsscreenview.o(.constdata__ZTV18settingsScreenView)
 <LI><a href="#[108]">FrontendApplication::handleTickEvent()</a> from frontendapplication.o(i._ZN19FrontendApplication15handleTickEventEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[10e]">mainScreenPresenter::deactivate()</a> from mainscreenpresenter.o(i._ZN19mainScreenPresenter10deactivateEv) referenced from mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
 <LI><a href="#[111]">mainScreenPresenter::humidityChanged(int)</a> from mainscreenpresenter.o(i._ZN19mainScreenPresenter15humidityChangedEi) referenced from mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
 <LI><a href="#[114]">mainScreenPresenter::heatOpStateChanged(bool)</a> from mainscreenpresenter.o(i._ZN19mainScreenPresenter18heatOpStateChangedEb) referenced from mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
 <LI><a href="#[113]">mainScreenPresenter::humiOpStateChanged(bool)</a> from mainscreenpresenter.o(i._ZN19mainScreenPresenter18humiOpStateChangedEb) referenced from mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
 <LI><a href="#[110]">mainScreenPresenter::temperatureChanged(int)</a> from mainscreenpresenter.o(i._ZN19mainScreenPresenter18temperatureChangedEi) referenced from mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
 <LI><a href="#[112]">mainScreenPresenter::lightOpStateChanged(bool)</a> from mainscreenpresenter.o(i._ZN19mainScreenPresenter19lightOpStateChangedEb) referenced from mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
 <LI><a href="#[10d]">mainScreenPresenter::activate()</a> from mainscreenpresenter.o(i._ZN19mainScreenPresenter8activateEv) referenced from mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
 <LI><a href="#[10f]">mainScreenPresenter::~mainScreenPresenter()</a> from mainscreenpresenter.o(i._ZN19mainScreenPresenterD1Ev) referenced from mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
 <LI><a href="#[a8]">settingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</a> from settingsscreenviewbase.o(i._ZN22settingsScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE) referenced from settingsscreenviewbase.o(.constdata)
 <LI><a href="#[11b]">settingsScreenViewBase::~settingsScreenViewBase()</a> from settingsscreenviewbase.o(i._ZN22settingsScreenViewBaseD1Ev) referenced from settingsscreenview.o(.constdata__ZTV22settingsScreenViewBase)
 <LI><a href="#[8c]">ApplicationFontProvider::~ApplicationFontProvider()</a> from applicationfontprovider.o(i._ZN23ApplicationFontProviderD1Ev) referenced from applicationfontprovider.o(.constdata__ZTV23ApplicationFontProvider)
 <LI><a href="#[8c]">ApplicationFontProvider::~ApplicationFontProvider()</a> from applicationfontprovider.o(i._ZN23ApplicationFontProviderD1Ev) referenced from boardconfiguration.o(i.__sti___22_BoardConfiguration_cpp_dceb80ee)
 <LI><a href="#[a4]">FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[9c]">FrontendApplicationBase::gotomainScreenScreenNoTransitionImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase36gotomainScreenScreenNoTransitionImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[9d]">FrontendApplicationBase::gotomainScreenScreenSlideTransitionWestImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase43gotomainScreenScreenSlideTransitionWestImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[9e]">FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionEastImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase47gotosettingsScreenScreenSlideTransitionEastImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[9f]">FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionWestImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase47gotosettingsScreenScreenSlideTransitionWestImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[a1]">FrontendApplicationBase::gotodateTimeSettingsScreenScreenSlideTransitionEastImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase55gotodateTimeSettingsScreenScreenSlideTransitionEastImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[a2]">FrontendApplicationBase::gotodayNightSettingsScreenScreenSlideTransitionEastImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase55gotodayNightSettingsScreenScreenSlideTransitionEastImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[a3]">FrontendApplicationBase::gotoopConfigSettingsScreenScreenSlideTransitionEastImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase55gotoopConfigSettingsScreenScreenSlideTransitionEastImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[a0]">FrontendApplicationBase::gototempHumiSettingsScreenScreenSlideTransitionEastImpl()</a> from frontendapplicationbase.o(i._ZN23FrontendApplicationBase55gototempHumiSettingsScreenScreenSlideTransitionEastImplEv) referenced from frontendapplicationbase.o(.constdata)
 <LI><a href="#[11d]">FrontendApplicationBase::~FrontendApplicationBase()</a> from frontendapplication.o(i._ZN23FrontendApplicationBaseD1Ev) referenced from frontendapplication.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[11f]">settingsScreenPresenter::deactivate()</a> from settingsscreenpresenter.o(i._ZN23settingsScreenPresenter10deactivateEv) referenced from settingsscreenpresenter.o(.constdata__ZTV23settingsScreenPresenter)
 <LI><a href="#[11e]">settingsScreenPresenter::activate()</a> from settingsscreenpresenter.o(i._ZN23settingsScreenPresenter8activateEv) referenced from settingsscreenpresenter.o(.constdata__ZTV23settingsScreenPresenter)
 <LI><a href="#[120]">settingsScreenPresenter::~settingsScreenPresenter()</a> from settingsscreenpresenter.o(i._ZN23settingsScreenPresenterD1Ev) referenced from settingsscreenpresenter.o(.constdata__ZTV23settingsScreenPresenter)
 <LI><a href="#[122]">dateTimeSettingsScreenView::setupScreen()</a> from datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView11setupScreenEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
 <LI><a href="#[123]">dateTimeSettingsScreenView::tearDownScreen()</a> from datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView14tearDownScreenEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
 <LI><a href="#[12c]">dateTimeSettingsScreenView::dayDecBtnClicked()</a> from datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView16dayDecBtnClickedEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
 <LI><a href="#[12d]">dateTimeSettingsScreenView::dayIncBtnClicked()</a> from datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView16dayIncBtnClickedEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
 <LI><a href="#[126]">dateTimeSettingsScreenView::minDecBtnClicked()</a> from datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView16minDecBtnClickedEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
 <LI><a href="#[127]">dateTimeSettingsScreenView::minIncBtnClicked()</a> from datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView16minIncBtnClickedEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
 <LI><a href="#[124]">dateTimeSettingsScreenView::hourDecBtnClicked()</a> from datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView17hourDecBtnClickedEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
 <LI><a href="#[125]">dateTimeSettingsScreenView::hourIncBtnClicked()</a> from datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView17hourIncBtnClickedEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
 <LI><a href="#[128]">dateTimeSettingsScreenView::yearDecBtnClicked()</a> from datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView17yearDecBtnClickedEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
 <LI><a href="#[129]">dateTimeSettingsScreenView::yearIncBtnClicked()</a> from datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView17yearIncBtnClickedEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
 <LI><a href="#[12a]">dateTimeSettingsScreenView::monthDecBtnClicked()</a> from datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView18monthDecBtnClickedEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
 <LI><a href="#[12b]">dateTimeSettingsScreenView::monthIncBtnClicked()</a> from datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView18monthIncBtnClickedEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
 <LI><a href="#[121]">dateTimeSettingsScreenView::~dateTimeSettingsScreenView()</a> from datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenViewD1Ev) referenced from datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
 <LI><a href="#[12f]">dayNightSettingsScreenView::setupScreen()</a> from daynightsettingsscreenview.o(i._ZN26dayNightSettingsScreenView11setupScreenEv) referenced from daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
 <LI><a href="#[130]">dayNightSettingsScreenView::tearDownScreen()</a> from daynightsettingsscreenview.o(i._ZN26dayNightSettingsScreenView14tearDownScreenEv) referenced from daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
 <LI><a href="#[137]">dayNightSettingsScreenView::dayEndMinDecBtnClicked()</a> from daynightsettingsscreenview.o(i._ZN26dayNightSettingsScreenView22dayEndMinDecBtnClickedEv) referenced from daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
 <LI><a href="#[138]">dayNightSettingsScreenView::dayEndMinIncBtnClicked()</a> from daynightsettingsscreenview.o(i._ZN26dayNightSettingsScreenView22dayEndMinIncBtnClickedEv) referenced from daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
 <LI><a href="#[135]">dayNightSettingsScreenView::dayEndHourDecBtnClicked()</a> from daynightsettingsscreenview.o(i._ZN26dayNightSettingsScreenView23dayEndHourDecBtnClickedEv) referenced from daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
 <LI><a href="#[136]">dayNightSettingsScreenView::dayEndHourIncBtnClicked()</a> from daynightsettingsscreenview.o(i._ZN26dayNightSettingsScreenView23dayEndHourIncBtnClickedEv) referenced from daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
 <LI><a href="#[133]">dayNightSettingsScreenView::dayBeginMinDecBtnClicked()</a> from daynightsettingsscreenview.o(i._ZN26dayNightSettingsScreenView24dayBeginMinDecBtnClickedEv) referenced from daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
 <LI><a href="#[134]">dayNightSettingsScreenView::dayBeginMinIncBtnClicked()</a> from daynightsettingsscreenview.o(i._ZN26dayNightSettingsScreenView24dayBeginMinIncBtnClickedEv) referenced from daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
 <LI><a href="#[131]">dayNightSettingsScreenView::dayBeginHourDecBtnClicked()</a> from daynightsettingsscreenview.o(i._ZN26dayNightSettingsScreenView25dayBeginHourDecBtnClickedEv) referenced from daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
 <LI><a href="#[132]">dayNightSettingsScreenView::dayBeginHourIncBtnClicked()</a> from daynightsettingsscreenview.o(i._ZN26dayNightSettingsScreenView25dayBeginHourIncBtnClickedEv) referenced from daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
 <LI><a href="#[12e]">dayNightSettingsScreenView::~dayNightSettingsScreenView()</a> from daynightsettingsscreenview.o(i._ZN26dayNightSettingsScreenViewD1Ev) referenced from daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
 <LI><a href="#[13a]">opConfigSettingsScreenView::setupScreen()</a> from opconfigsettingsscreenview.o(i._ZN26opConfigSettingsScreenView11setupScreenEv) referenced from opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
 <LI><a href="#[13b]">opConfigSettingsScreenView::tearDownScreen()</a> from opconfigsettingsscreenview.o(i._ZN26opConfigSettingsScreenView14tearDownScreenEv) referenced from opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
 <LI><a href="#[13d]">opConfigSettingsScreenView::op1HumiBtnClicked()</a> from opconfigsettingsscreenview.o(i._ZN26opConfigSettingsScreenView17op1HumiBtnClickedEv) referenced from opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
 <LI><a href="#[140]">opConfigSettingsScreenView::op2HumiBtnClicked()</a> from opconfigsettingsscreenview.o(i._ZN26opConfigSettingsScreenView17op2HumiBtnClickedEv) referenced from opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
 <LI><a href="#[143]">opConfigSettingsScreenView::op3HumiBtnClicked()</a> from opconfigsettingsscreenview.o(i._ZN26opConfigSettingsScreenView17op3HumiBtnClickedEv) referenced from opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
 <LI><a href="#[13e]">opConfigSettingsScreenView::op1LightBtnClicked()</a> from opconfigsettingsscreenview.o(i._ZN26opConfigSettingsScreenView18op1LightBtnClickedEv) referenced from opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
 <LI><a href="#[141]">opConfigSettingsScreenView::op2LightBtnClicked()</a> from opconfigsettingsscreenview.o(i._ZN26opConfigSettingsScreenView18op2LightBtnClickedEv) referenced from opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
 <LI><a href="#[144]">opConfigSettingsScreenView::op3LightBtnClicked()</a> from opconfigsettingsscreenview.o(i._ZN26opConfigSettingsScreenView18op3LightBtnClickedEv) referenced from opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
 <LI><a href="#[13c]">opConfigSettingsScreenView::op1HeaterBtnClicked()</a> from opconfigsettingsscreenview.o(i._ZN26opConfigSettingsScreenView19op1HeaterBtnClickedEv) referenced from opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
 <LI><a href="#[13f]">opConfigSettingsScreenView::op2HeaterBtnClicked()</a> from opconfigsettingsscreenview.o(i._ZN26opConfigSettingsScreenView19op2HeaterBtnClickedEv) referenced from opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
 <LI><a href="#[142]">opConfigSettingsScreenView::op3HeaterBtnClicked()</a> from opconfigsettingsscreenview.o(i._ZN26opConfigSettingsScreenView19op3HeaterBtnClickedEv) referenced from opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
 <LI><a href="#[139]">opConfigSettingsScreenView::~opConfigSettingsScreenView()</a> from opconfigsettingsscreenview.o(i._ZN26opConfigSettingsScreenViewD1Ev) referenced from opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
 <LI><a href="#[146]">tempHumiSettingsScreenView::setupScreen()</a> from temphumisettingsscreenview.o(i._ZN26tempHumiSettingsScreenView11setupScreenEv) referenced from temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
 <LI><a href="#[147]">tempHumiSettingsScreenView::tearDownScreen()</a> from temphumisettingsscreenview.o(i._ZN26tempHumiSettingsScreenView14tearDownScreenEv) referenced from temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
 <LI><a href="#[14a]">tempHumiSettingsScreenView::dayHumiSliderValueChanged(int)</a> from temphumisettingsscreenview.o(i._ZN26tempHumiSettingsScreenView25dayHumiSliderValueChangedEi) referenced from temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
 <LI><a href="#[148]">tempHumiSettingsScreenView::dayTempSliderValueChanged(int)</a> from temphumisettingsscreenview.o(i._ZN26tempHumiSettingsScreenView25dayTempSliderValueChangedEi) referenced from temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
 <LI><a href="#[14b]">tempHumiSettingsScreenView::nightHumiSliderValueChanged(int)</a> from temphumisettingsscreenview.o(i._ZN26tempHumiSettingsScreenView27nightHumiSliderValueChangedEi) referenced from temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
 <LI><a href="#[149]">tempHumiSettingsScreenView::nightTempSliderValueChanged(int)</a> from temphumisettingsscreenview.o(i._ZN26tempHumiSettingsScreenView27nightTempSliderValueChangedEi) referenced from temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
 <LI><a href="#[145]">tempHumiSettingsScreenView::~tempHumiSettingsScreenView()</a> from temphumisettingsscreenview.o(i._ZN26tempHumiSettingsScreenViewD1Ev) referenced from temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
 <LI><a href="#[155]">dateTimeSettingsScreenViewBase::dayDecBtnClicked()</a> from datetimesettingsscreenview.o(i._ZN30dateTimeSettingsScreenViewBase16dayDecBtnClickedEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
 <LI><a href="#[156]">dateTimeSettingsScreenViewBase::dayIncBtnClicked()</a> from datetimesettingsscreenview.o(i._ZN30dateTimeSettingsScreenViewBase16dayIncBtnClickedEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
 <LI><a href="#[14f]">dateTimeSettingsScreenViewBase::minDecBtnClicked()</a> from datetimesettingsscreenview.o(i._ZN30dateTimeSettingsScreenViewBase16minDecBtnClickedEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
 <LI><a href="#[150]">dateTimeSettingsScreenViewBase::minIncBtnClicked()</a> from datetimesettingsscreenview.o(i._ZN30dateTimeSettingsScreenViewBase16minIncBtnClickedEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
 <LI><a href="#[14d]">dateTimeSettingsScreenViewBase::hourDecBtnClicked()</a> from datetimesettingsscreenview.o(i._ZN30dateTimeSettingsScreenViewBase17hourDecBtnClickedEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
 <LI><a href="#[14e]">dateTimeSettingsScreenViewBase::hourIncBtnClicked()</a> from datetimesettingsscreenview.o(i._ZN30dateTimeSettingsScreenViewBase17hourIncBtnClickedEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
 <LI><a href="#[151]">dateTimeSettingsScreenViewBase::yearDecBtnClicked()</a> from datetimesettingsscreenview.o(i._ZN30dateTimeSettingsScreenViewBase17yearDecBtnClickedEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
 <LI><a href="#[152]">dateTimeSettingsScreenViewBase::yearIncBtnClicked()</a> from datetimesettingsscreenview.o(i._ZN30dateTimeSettingsScreenViewBase17yearIncBtnClickedEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
 <LI><a href="#[153]">dateTimeSettingsScreenViewBase::monthDecBtnClicked()</a> from datetimesettingsscreenview.o(i._ZN30dateTimeSettingsScreenViewBase18monthDecBtnClickedEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
 <LI><a href="#[154]">dateTimeSettingsScreenViewBase::monthIncBtnClicked()</a> from datetimesettingsscreenview.o(i._ZN30dateTimeSettingsScreenViewBase18monthIncBtnClickedEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
 <LI><a href="#[9a]">dateTimeSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</a> from datetimesettingsscreenviewbase.o(i._ZN30dateTimeSettingsScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE) referenced from datetimesettingsscreenviewbase.o(.constdata)
 <LI><a href="#[14c]">dateTimeSettingsScreenViewBase::~dateTimeSettingsScreenViewBase()</a> from datetimesettingsscreenviewbase.o(i._ZN30dateTimeSettingsScreenViewBaseD1Ev) referenced from datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
 <LI><a href="#[9b]">dayNightSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</a> from daynightsettingsscreenviewbase.o(i._ZN30dayNightSettingsScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE) referenced from daynightsettingsscreenviewbase.o(.constdata)
 <LI><a href="#[15e]">dayNightSettingsScreenViewBase::dayEndMinDecBtnClicked()</a> from daynightsettingsscreenview.o(i._ZN30dayNightSettingsScreenViewBase22dayEndMinDecBtnClickedEv) referenced from daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
 <LI><a href="#[15f]">dayNightSettingsScreenViewBase::dayEndMinIncBtnClicked()</a> from daynightsettingsscreenview.o(i._ZN30dayNightSettingsScreenViewBase22dayEndMinIncBtnClickedEv) referenced from daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
 <LI><a href="#[15c]">dayNightSettingsScreenViewBase::dayEndHourDecBtnClicked()</a> from daynightsettingsscreenview.o(i._ZN30dayNightSettingsScreenViewBase23dayEndHourDecBtnClickedEv) referenced from daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
 <LI><a href="#[15d]">dayNightSettingsScreenViewBase::dayEndHourIncBtnClicked()</a> from daynightsettingsscreenview.o(i._ZN30dayNightSettingsScreenViewBase23dayEndHourIncBtnClickedEv) referenced from daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
 <LI><a href="#[15a]">dayNightSettingsScreenViewBase::dayBeginMinDecBtnClicked()</a> from daynightsettingsscreenview.o(i._ZN30dayNightSettingsScreenViewBase24dayBeginMinDecBtnClickedEv) referenced from daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
 <LI><a href="#[15b]">dayNightSettingsScreenViewBase::dayBeginMinIncBtnClicked()</a> from daynightsettingsscreenview.o(i._ZN30dayNightSettingsScreenViewBase24dayBeginMinIncBtnClickedEv) referenced from daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
 <LI><a href="#[158]">dayNightSettingsScreenViewBase::dayBeginHourDecBtnClicked()</a> from daynightsettingsscreenview.o(i._ZN30dayNightSettingsScreenViewBase25dayBeginHourDecBtnClickedEv) referenced from daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
 <LI><a href="#[159]">dayNightSettingsScreenViewBase::dayBeginHourIncBtnClicked()</a> from daynightsettingsscreenview.o(i._ZN30dayNightSettingsScreenViewBase25dayBeginHourIncBtnClickedEv) referenced from daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
 <LI><a href="#[157]">dayNightSettingsScreenViewBase::~dayNightSettingsScreenViewBase()</a> from daynightsettingsscreenviewbase.o(i._ZN30dayNightSettingsScreenViewBaseD1Ev) referenced from daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
 <LI><a href="#[162]">opConfigSettingsScreenViewBase::op1HumiBtnClicked()</a> from opconfigsettingsscreenview.o(i._ZN30opConfigSettingsScreenViewBase17op1HumiBtnClickedEv) referenced from opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
 <LI><a href="#[165]">opConfigSettingsScreenViewBase::op2HumiBtnClicked()</a> from opconfigsettingsscreenview.o(i._ZN30opConfigSettingsScreenViewBase17op2HumiBtnClickedEv) referenced from opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
 <LI><a href="#[168]">opConfigSettingsScreenViewBase::op3HumiBtnClicked()</a> from opconfigsettingsscreenview.o(i._ZN30opConfigSettingsScreenViewBase17op3HumiBtnClickedEv) referenced from opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
 <LI><a href="#[163]">opConfigSettingsScreenViewBase::op1LightBtnClicked()</a> from opconfigsettingsscreenview.o(i._ZN30opConfigSettingsScreenViewBase18op1LightBtnClickedEv) referenced from opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
 <LI><a href="#[166]">opConfigSettingsScreenViewBase::op2LightBtnClicked()</a> from opconfigsettingsscreenview.o(i._ZN30opConfigSettingsScreenViewBase18op2LightBtnClickedEv) referenced from opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
 <LI><a href="#[169]">opConfigSettingsScreenViewBase::op3LightBtnClicked()</a> from opconfigsettingsscreenview.o(i._ZN30opConfigSettingsScreenViewBase18op3LightBtnClickedEv) referenced from opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
 <LI><a href="#[161]">opConfigSettingsScreenViewBase::op1HeaterBtnClicked()</a> from opconfigsettingsscreenview.o(i._ZN30opConfigSettingsScreenViewBase19op1HeaterBtnClickedEv) referenced from opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
 <LI><a href="#[164]">opConfigSettingsScreenViewBase::op2HeaterBtnClicked()</a> from opconfigsettingsscreenview.o(i._ZN30opConfigSettingsScreenViewBase19op2HeaterBtnClickedEv) referenced from opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
 <LI><a href="#[167]">opConfigSettingsScreenViewBase::op3HeaterBtnClicked()</a> from opconfigsettingsscreenview.o(i._ZN30opConfigSettingsScreenViewBase19op3HeaterBtnClickedEv) referenced from opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
 <LI><a href="#[a6]">opConfigSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</a> from opconfigsettingsscreenviewbase.o(i._ZN30opConfigSettingsScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE) referenced from opconfigsettingsscreenviewbase.o(.constdata)
 <LI><a href="#[160]">opConfigSettingsScreenViewBase::~opConfigSettingsScreenViewBase()</a> from opconfigsettingsscreenviewbase.o(i._ZN30opConfigSettingsScreenViewBaseD1Ev) referenced from opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
 <LI><a href="#[a9]">tempHumiSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</a> from temphumisettingsscreenviewbase.o(i._ZN30tempHumiSettingsScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE) referenced from temphumisettingsscreenviewbase.o(.constdata)
 <LI><a href="#[16d]">tempHumiSettingsScreenViewBase::dayHumiSliderValueChanged(int)</a> from temphumisettingsscreenview.o(i._ZN30tempHumiSettingsScreenViewBase25dayHumiSliderValueChangedEi) referenced from temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
 <LI><a href="#[16b]">tempHumiSettingsScreenViewBase::dayTempSliderValueChanged(int)</a> from temphumisettingsscreenview.o(i._ZN30tempHumiSettingsScreenViewBase25dayTempSliderValueChangedEi) referenced from temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
 <LI><a href="#[16e]">tempHumiSettingsScreenViewBase::nightHumiSliderValueChanged(int)</a> from temphumisettingsscreenview.o(i._ZN30tempHumiSettingsScreenViewBase27nightHumiSliderValueChangedEi) referenced from temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
 <LI><a href="#[16c]">tempHumiSettingsScreenViewBase::nightTempSliderValueChanged(int)</a> from temphumisettingsscreenview.o(i._ZN30tempHumiSettingsScreenViewBase27nightTempSliderValueChangedEi) referenced from temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
 <LI><a href="#[aa]">tempHumiSettingsScreenViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider&, int)</a> from temphumisettingsscreenviewbase.o(i._ZN30tempHumiSettingsScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi) referenced from temphumisettingsscreenviewbase.o(.constdata)
 <LI><a href="#[16a]">tempHumiSettingsScreenViewBase::~tempHumiSettingsScreenViewBase()</a> from temphumisettingsscreenviewbase.o(i._ZN30tempHumiSettingsScreenViewBaseD1Ev) referenced from temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
 <LI><a href="#[170]">dateTimeSettingsScreenPresenter::deactivate()</a> from datetimesettingsscreenpresenter.o(i._ZN31dateTimeSettingsScreenPresenter10deactivateEv) referenced from datetimesettingsscreenpresenter.o(.constdata__ZTV31dateTimeSettingsScreenPresenter)
 <LI><a href="#[16f]">dateTimeSettingsScreenPresenter::activate()</a> from datetimesettingsscreenpresenter.o(i._ZN31dateTimeSettingsScreenPresenter8activateEv) referenced from datetimesettingsscreenpresenter.o(.constdata__ZTV31dateTimeSettingsScreenPresenter)
 <LI><a href="#[171]">dateTimeSettingsScreenPresenter::~dateTimeSettingsScreenPresenter()</a> from datetimesettingsscreenpresenter.o(i._ZN31dateTimeSettingsScreenPresenterD1Ev) referenced from datetimesettingsscreenpresenter.o(.constdata__ZTV31dateTimeSettingsScreenPresenter)
 <LI><a href="#[173]">dayNightSettingsScreenPresenter::deactivate()</a> from daynightsettingsscreenpresenter.o(i._ZN31dayNightSettingsScreenPresenter10deactivateEv) referenced from daynightsettingsscreenpresenter.o(.constdata__ZTV31dayNightSettingsScreenPresenter)
 <LI><a href="#[172]">dayNightSettingsScreenPresenter::activate()</a> from daynightsettingsscreenpresenter.o(i._ZN31dayNightSettingsScreenPresenter8activateEv) referenced from daynightsettingsscreenpresenter.o(.constdata__ZTV31dayNightSettingsScreenPresenter)
 <LI><a href="#[174]">dayNightSettingsScreenPresenter::~dayNightSettingsScreenPresenter()</a> from daynightsettingsscreenpresenter.o(i._ZN31dayNightSettingsScreenPresenterD1Ev) referenced from daynightsettingsscreenpresenter.o(.constdata__ZTV31dayNightSettingsScreenPresenter)
 <LI><a href="#[176]">opConfigSettingsScreenPresenter::deactivate()</a> from opconfigsettingsscreenpresenter.o(i._ZN31opConfigSettingsScreenPresenter10deactivateEv) referenced from opconfigsettingsscreenpresenter.o(.constdata__ZTV31opConfigSettingsScreenPresenter)
 <LI><a href="#[175]">opConfigSettingsScreenPresenter::activate()</a> from opconfigsettingsscreenpresenter.o(i._ZN31opConfigSettingsScreenPresenter8activateEv) referenced from opconfigsettingsscreenpresenter.o(.constdata__ZTV31opConfigSettingsScreenPresenter)
 <LI><a href="#[177]">opConfigSettingsScreenPresenter::~opConfigSettingsScreenPresenter()</a> from opconfigsettingsscreenpresenter.o(i._ZN31opConfigSettingsScreenPresenterD1Ev) referenced from opconfigsettingsscreenpresenter.o(.constdata__ZTV31opConfigSettingsScreenPresenter)
 <LI><a href="#[179]">tempHumiSettingsScreenPresenter::deactivate()</a> from temphumisettingsscreenpresenter.o(i._ZN31tempHumiSettingsScreenPresenter10deactivateEv) referenced from temphumisettingsscreenpresenter.o(.constdata__ZTV31tempHumiSettingsScreenPresenter)
 <LI><a href="#[178]">tempHumiSettingsScreenPresenter::activate()</a> from temphumisettingsscreenpresenter.o(i._ZN31tempHumiSettingsScreenPresenter8activateEv) referenced from temphumisettingsscreenpresenter.o(.constdata__ZTV31tempHumiSettingsScreenPresenter)
 <LI><a href="#[17a]">tempHumiSettingsScreenPresenter::~tempHumiSettingsScreenPresenter()</a> from temphumisettingsscreenpresenter.o(i._ZN31tempHumiSettingsScreenPresenterD1Ev) referenced from temphumisettingsscreenpresenter.o(.constdata__ZTV31tempHumiSettingsScreenPresenter)
 <LI><a href="#[92]">actuator::~actuator()</a> from model.o(i._ZN8actuatorD1Ev) referenced from model.o(i.__sti___9_Model_cpp_measTemp)
 <LI><a href="#[91]">opSocket::~opSocket()</a> from model.o(i._ZN8opSocketD1Ev) referenced from model.o(i.__sti___9_Model_cpp_measTemp)
 <LI><a href="#[17c]">touchgfx::Transition::handleTickEvent()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition15handleTickEventEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
 <LI><a href="#[17f]">touchgfx::Transition::setScreenContainer(touchgfx::Container&)</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
 <LI><a href="#[17f]">touchgfx::Transition::setScreenContainer(touchgfx::Container&)</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[17f]">touchgfx::Transition::setScreenContainer(touchgfx::Container&)</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
 <LI><a href="#[17f]">touchgfx::Transition::setScreenContainer(touchgfx::Container&)</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE3EEE)
 <LI><a href="#[17e]">touchgfx::Transition::init()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition4initEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
 <LI><a href="#[17e]">touchgfx::Transition::init()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition4initEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[17d]">touchgfx::Transition::tearDown()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition8tearDownEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
 <LI><a href="#[17d]">touchgfx::Transition::tearDown()</a> from frontendapplicationbase.o(i._ZN8touchgfx10Transition8tearDownEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[17b]">touchgfx::Transition::~Transition()</a> from frontendapplicationbase.o(i._ZN8touchgfx10TransitionD1Ev) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
 <LI><a href="#[107]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[107]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from frontendapplication.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[107]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[107]">touchgfx::Application::handleKeyEvent(unsigned char)</a> from application.o(i._ZN8touchgfx11Application14handleKeyEventEh) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[105]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[105]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from frontendapplication.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[105]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[105]">touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</a> from application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[11c]">touchgfx::Application::handleTickEvent()</a> from application.o(i._ZN8touchgfx11Application15handleTickEventEv) referenced from frontendapplication.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[11c]">touchgfx::Application::handleTickEvent()</a> from application.o(i._ZN8touchgfx11Application15handleTickEventEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[11c]">touchgfx::Application::handleTickEvent()</a> from application.o(i._ZN8touchgfx11Application15handleTickEventEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[104]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[104]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from frontendapplication.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[104]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[104]">touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</a> from application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[106]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[106]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplication.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[106]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[106]">touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</a> from application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[10c]">touchgfx::Application::cacheDrawOperations(bool)</a> from application.o(i._ZN8touchgfx11Application19cacheDrawOperationsEb) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[10c]">touchgfx::Application::cacheDrawOperations(bool)</a> from application.o(i._ZN8touchgfx11Application19cacheDrawOperationsEb) referenced from frontendapplication.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[10c]">touchgfx::Application::cacheDrawOperations(bool)</a> from application.o(i._ZN8touchgfx11Application19cacheDrawOperationsEb) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[10c]">touchgfx::Application::cacheDrawOperations(bool)</a> from application.o(i._ZN8touchgfx11Application19cacheDrawOperationsEb) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[180]">touchgfx::Application::handlePendingScreenTransition()</a> from application.o(i._ZN8touchgfx11Application29handlePendingScreenTransitionEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[10b]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[10b]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from frontendapplication.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[10b]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[10b]">touchgfx::Application::draw(touchgfx::Rect&)</a> from application.o(i._ZN8touchgfx11Application4drawERNS_4RectE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[10a]">touchgfx::Application::draw()</a> from application.o(i._ZN8touchgfx11Application4drawEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[10a]">touchgfx::Application::draw()</a> from application.o(i._ZN8touchgfx11Application4drawEv) referenced from frontendapplication.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[10a]">touchgfx::Application::draw()</a> from application.o(i._ZN8touchgfx11Application4drawEv) referenced from application.o(.constdata__ZTVN8touchgfx11ApplicationE)
 <LI><a href="#[10a]">touchgfx::Application::draw()</a> from application.o(i._ZN8touchgfx11Application4drawEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[183]">touchgfx::NoTransition::handleTickEvent()</a> from frontendapplicationbase.o(i._ZN8touchgfx12NoTransition15handleTickEventEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[182]">touchgfx::NoTransition::~NoTransition()</a> from frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionD1Ev) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
 <LI><a href="#[199]">touchgfx::ToggleButton::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)</a> from mainscreenviewbase.o(i._ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_) referenced from togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[192]">touchgfx::ToggleButton::handleClickEvent(const touchgfx::ClickEvent&)</a> from togglebutton.o(i._ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE) referenced from togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[184]">touchgfx::ToggleButton::~ToggleButton()</a> from mainscreenview.o(i._ZN8touchgfx12ToggleButtonD1Ev) referenced from togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[ac]">touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)</a> from dma.o(i._ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[ac]">touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)</a> from dma.o(i._ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[19a]">touchgfx::DMA_Interface::initialize()</a> from dma.o(i._ZN8touchgfx13DMA_Interface10initializeEv) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[b6]">touchgfx::DMA_Interface::enableAlpha(unsigned char)</a> from dma.o(i._ZN8touchgfx13DMA_Interface11enableAlphaEh) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[b6]">touchgfx::DMA_Interface::enableAlpha(unsigned char)</a> from dma.o(i._ZN8touchgfx13DMA_Interface11enableAlphaEh) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[b7]">touchgfx::DMA_Interface::disableAlpha()</a> from dma.o(i._ZN8touchgfx13DMA_Interface12disableAlphaEv) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[b7]">touchgfx::DMA_Interface::disableAlpha()</a> from dma.o(i._ZN8touchgfx13DMA_Interface12disableAlphaEv) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[b3]">touchgfx::DMA_Interface::seedExecution()</a> from dma.o(i._ZN8touchgfx13DMA_Interface13seedExecutionEv) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[b3]">touchgfx::DMA_Interface::seedExecution()</a> from dma.o(i._ZN8touchgfx13DMA_Interface13seedExecutionEv) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[b2]">touchgfx::DMA_Interface::executeCompleted()</a> from dma.o(i._ZN8touchgfx13DMA_Interface16executeCompletedEv) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[b2]">touchgfx::DMA_Interface::executeCompleted()</a> from dma.o(i._ZN8touchgfx13DMA_Interface16executeCompletedEv) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[b8]">touchgfx::DMA_Interface::waitForFrameBufferSemaphore()</a> from dma.o(i._ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[b8]">touchgfx::DMA_Interface::waitForFrameBufferSemaphore()</a> from dma.o(i._ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[ad]">touchgfx::DMA_Interface::flush()</a> from stm32f7dma.o(i._ZN8touchgfx13DMA_Interface5flushEv) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[ad]">touchgfx::DMA_Interface::flush()</a> from stm32f7dma.o(i._ZN8touchgfx13DMA_Interface5flushEv) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[af]">touchgfx::DMA_Interface::start()</a> from dma.o(i._ZN8touchgfx13DMA_Interface5startEv) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[af]">touchgfx::DMA_Interface::start()</a> from dma.o(i._ZN8touchgfx13DMA_Interface5startEv) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[b1]">touchgfx::DMA_Interface::execute()</a> from dma.o(i._ZN8touchgfx13DMA_Interface7executeEv) referenced from stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
 <LI><a href="#[b1]">touchgfx::DMA_Interface::execute()</a> from dma.o(i._ZN8touchgfx13DMA_Interface7executeEv) referenced from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[19b]">touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractbutton.o(i._ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[19b]">touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractbutton.o(i._ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE) referenced from buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
 <LI><a href="#[19b]">touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractbutton.o(i._ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[19b]">touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)</a> from abstractbutton.o(i._ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[19f]">touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&)</a> from buttonwithicon.o(i._ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_) referenced from buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
 <LI><a href="#[19c]">touchgfx::ButtonWithIcon::~ButtonWithIcon()</a> from mainscreenview.o(i._ZN8touchgfx14ButtonWithIconD1Ev) referenced from buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
 <LI><a href="#[109]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from frontendapplication.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from frontendapplication.o(.constdata__ZTV19FrontendApplication)
 <LI><a href="#[109]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from frontendapplication.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from frontendapplication.o(.constdata__ZTV23FrontendApplicationBase)
 <LI><a href="#[109]">touchgfx::MVPApplication::handlePendingScreenTransition()</a> from frontendapplication.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
 <LI><a href="#[1a4]">touchgfx::SnapshotWidget::makeSnapshot()</a> from snapshotwidget.o(i._ZN8touchgfx14SnapshotWidget12makeSnapshotEv) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[1a0]">touchgfx::SnapshotWidget::~SnapshotWidget()</a> from snapshotwidget.o(i._ZN8touchgfx14SnapshotWidgetD1Ev) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[1a5]">touchgfx::ButtonWithLabel::~ButtonWithLabel()</a> from settingsscreenview.o(i._ZN8touchgfx15ButtonWithLabelD1Ev) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[1a9]">touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::handleTickEvent()</a> from frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
 <LI><a href="#[1ac]">touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::initMoveDrawable(touchgfx::Drawable&)</a> from frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
 <LI><a href="#[1ad]">touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::tickMoveDrawable(touchgfx::Drawable&)</a> from frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16tickMoveDrawableERNS_8DrawableE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
 <LI><a href="#[1ab]">touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::init()</a> from frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
 <LI><a href="#[1aa]">touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::tearDown()</a> from frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
 <LI><a href="#[1a8]">touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::~SlideTransition()</a> from frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
 <LI><a href="#[1af]">touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::handleTickEvent()</a> from frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE3EEE)
 <LI><a href="#[1b2]">touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::initMoveDrawable(touchgfx::Drawable&)</a> from frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16initMoveDrawableERNS_8DrawableE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE3EEE)
 <LI><a href="#[1b3]">touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::tickMoveDrawable(touchgfx::Drawable&)</a> from frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16tickMoveDrawableERNS_8DrawableE) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE3EEE)
 <LI><a href="#[1b1]">touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::init()</a> from frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE3EEE)
 <LI><a href="#[1b0]">touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::tearDown()</a> from frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE3EEE)
 <LI><a href="#[1ae]">touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::~SlideTransition()</a> from frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED1Ev) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE3EEE)
 <LI><a href="#[1b4]">touchgfx::AbstractPartition::~AbstractPartition__sub_object()</a> from abstractpartition.o(i._ZN8touchgfx17AbstractPartitionD2Ev) referenced from abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[8a]">touchgfx::InternalFlashFont::~InternalFlashFont()</a> from fontgetters.o(i._ZN8touchgfx17InternalFlashFontD1Ev) referenced from internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
 <LI><a href="#[8a]">touchgfx::InternalFlashFont::~InternalFlashFont()</a> from fontgetters.o(i._ZN8touchgfx17InternalFlashFontD1Ev) referenced from fontgetters.o(i._Z23getFont_segoeui_17_8bppv)
 <LI><a href="#[8a]">touchgfx::InternalFlashFont::~InternalFlashFont()</a> from fontgetters.o(i._ZN8touchgfx17InternalFlashFontD1Ev) referenced from fontgetters.o(i._Z23getFont_segoeui_18_8bppv)
 <LI><a href="#[8a]">touchgfx::InternalFlashFont::~InternalFlashFont()</a> from fontgetters.o(i._ZN8touchgfx17InternalFlashFontD1Ev) referenced from fontgetters.o(i._Z23getFont_segoeui_28_8bppv)
 <LI><a href="#[8a]">touchgfx::InternalFlashFont::~InternalFlashFont()</a> from fontgetters.o(i._ZN8touchgfx17InternalFlashFontD1Ev) referenced from fontgetters.o(i._Z23getFont_segoeui_40_8bppv)
 <LI><a href="#[8a]">touchgfx::InternalFlashFont::~InternalFlashFont()</a> from fontgetters.o(i._ZN8touchgfx17InternalFlashFontD1Ev) referenced from fontgetters.o(i._Z23getFont_segoeui_67_4bppv)
 <LI><a href="#[8a]">touchgfx::InternalFlashFont::~InternalFlashFont()</a> from fontgetters.o(i._ZN8touchgfx17InternalFlashFontD1Ev) referenced from fontgetters.o(i._Z23getFont_verdana_12_4bppv)
 <LI><a href="#[8a]">touchgfx::InternalFlashFont::~InternalFlashFont()</a> from fontgetters.o(i._ZN8touchgfx17InternalFlashFontD1Ev) referenced from fontgetters.o(i._Z23getFont_verdana_17_8bppv)
 <LI><a href="#[8a]">touchgfx::InternalFlashFont::~InternalFlashFont()</a> from fontgetters.o(i._ZN8touchgfx17InternalFlashFontD1Ev) referenced from fontgetters.o(i._Z23getFont_verdana_34_4bppv)
 <LI><a href="#[8a]">touchgfx::InternalFlashFont::~InternalFlashFont()</a> from fontgetters.o(i._ZN8touchgfx17InternalFlashFontD1Ev) referenced from fontgetters.o(i._Z23getFont_verdana_46_4bppv)
 <LI><a href="#[1c4]">touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[1c5]">touchgfx::LockFreeDMA_Queue::pop()</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue3popEv) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[1c6]">touchgfx::LockFreeDMA_Queue::first()</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue5firstEv) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[1c3]">touchgfx::LockFreeDMA_Queue::isFull()</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue6isFullEv) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[1c2]">touchgfx::LockFreeDMA_Queue::isEmpty()</a> from dma.o(i._ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv) referenced from dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
 <LI><a href="#[1c7]">touchgfx::MCUInstrumentation::setMCUActive(bool)</a> from boardconfiguration.o(i._ZN8touchgfx18MCUInstrumentation12setMCUActiveEb) referenced from boardconfiguration.o(.constdata__ZTVN8touchgfx18MCUInstrumentationE)
 <LI><a href="#[1c8]">touchgfx::MCUInstrumentation::getCCConsumed()</a> from boardconfiguration.o(i._ZN8touchgfx18MCUInstrumentation13getCCConsumedEv) referenced from boardconfiguration.o(.constdata__ZTVN8touchgfx18MCUInstrumentationE)
 <LI><a href="#[1c8]">touchgfx::MCUInstrumentation::getCCConsumed()</a> from boardconfiguration.o(i._ZN8touchgfx18MCUInstrumentation13getCCConsumedEv) referenced from stm32f7instrumentation.o(.constdata__ZTVN8touchgfx22STM32F7InstrumentationE)
 <LI><a href="#[1c9]">touchgfx::MCUInstrumentation::setCCConsumed(unsigned)</a> from boardconfiguration.o(i._ZN8touchgfx18MCUInstrumentation13setCCConsumedEj) referenced from boardconfiguration.o(.constdata__ZTVN8touchgfx18MCUInstrumentationE)
 <LI><a href="#[1c9]">touchgfx::MCUInstrumentation::setCCConsumed(unsigned)</a> from boardconfiguration.o(i._ZN8touchgfx18MCUInstrumentation13setCCConsumedEj) referenced from stm32f7instrumentation.o(.constdata__ZTVN8touchgfx22STM32F7InstrumentationE)
 <LI><a href="#[1cb]">touchgfx::STM32F7Instrumentation::getCPUCycles()</a> from stm32f7instrumentation.o(i._ZN8touchgfx22STM32F7Instrumentation12getCPUCyclesEv) referenced from stm32f7instrumentation.o(.constdata__ZTVN8touchgfx22STM32F7InstrumentationE)
 <LI><a href="#[1cc]">touchgfx::STM32F7Instrumentation::setMCUActive(bool)</a> from stm32f7instrumentation.o(i._ZN8touchgfx22STM32F7Instrumentation12setMCUActiveEb) referenced from stm32f7instrumentation.o(.constdata__ZTVN8touchgfx22STM32F7InstrumentationE)
 <LI><a href="#[1ca]">touchgfx::STM32F7Instrumentation::init()</a> from stm32f7instrumentation.o(i._ZN8touchgfx22STM32F7Instrumentation4initEv) referenced from stm32f7instrumentation.o(.constdata__ZTVN8touchgfx22STM32F7InstrumentationE)
 <LI><a href="#[8f]">touchgfx::STM32F7Instrumentation::~STM32F7Instrumentation()</a> from boardconfiguration.o(i._ZN8touchgfx22STM32F7InstrumentationD1Ev) referenced from stm32f7instrumentation.o(.constdata__ZTVN8touchgfx22STM32F7InstrumentationE)
 <LI><a href="#[8f]">touchgfx::STM32F7Instrumentation::~STM32F7Instrumentation()</a> from boardconfiguration.o(i._ZN8touchgfx22STM32F7InstrumentationD1Ev) referenced from boardconfiguration.o(i.__sti___22_BoardConfiguration_cpp_dceb80ee)
 <LI><a href="#[1d0]">touchgfx::TextAreaWithOneWildcard::getTextHeight()</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1cd]">touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard()</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx23TextAreaWithOneWildcardD1Ev) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1d2]">touchgfx::TextAreaWithWildcardBase::~TextAreaWithWildcardBase()</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx24TextAreaWithWildcardBaseD1Ev) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1d7]">touchgfx::STM32F746GTouchController::sampleTouch(int&, int&)</a> from stm32f746gtouchcontroller.o(i._ZN8touchgfx25STM32F746GTouchController11sampleTouchERiS1_) referenced from stm32f746gtouchcontroller.o(.constdata__ZTVN8touchgfx25STM32F746GTouchControllerE)
 <LI><a href="#[1d6]">touchgfx::STM32F746GTouchController::init()</a> from stm32f746gtouchcontroller.o(i._ZN8touchgfx25STM32F746GTouchController4initEv) referenced from stm32f746gtouchcontroller.o(.constdata__ZTVN8touchgfx25STM32F746GTouchControllerE)
 <LI><a href="#[8e]">touchgfx::STM32F746GTouchController::~STM32F746GTouchController()</a> from boardconfiguration.o(i._ZN8touchgfx25STM32F746GTouchControllerD1Ev) referenced from stm32f746gtouchcontroller.o(.constdata__ZTVN8touchgfx25STM32F746GTouchControllerE)
 <LI><a href="#[8e]">touchgfx::STM32F746GTouchController::~STM32F746GTouchController()</a> from boardconfiguration.o(i._ZN8touchgfx25STM32F746GTouchControllerD1Ev) referenced from boardconfiguration.o(i.__sti___22_BoardConfiguration_cpp_dceb80ee)
 <LI><a href="#[1d8]">touchgfx::Box::~Box()</a> from temphumisettingsscreenview.o(i._ZN8touchgfx3BoxD1Ev) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[d2]">touchgfx::HAL::beginFrame()</a> from hal.o(i._ZN8touchgfx3HAL10beginFrameEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[d2]">touchgfx::HAL::beginFrame()</a> from hal.o(i._ZN8touchgfx3HAL10beginFrameEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[c2]">touchgfx::HAL::getBlitCaps()</a> from stm32f7hal.o(i._ZN8touchgfx3HAL11getBlitCapsEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[c2]">touchgfx::HAL::getBlitCaps()</a> from stm32f7hal.o(i._ZN8touchgfx3HAL11getBlitCapsEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[c5]">touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations)</a> from hal.o(i._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[c5]">touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations)</a> from hal.o(i._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[c9]">touchgfx::HAL::backPorchExited()</a> from stm32f7hal.o(i._ZN8touchgfx3HAL15backPorchExitedEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[c9]">touchgfx::HAL::backPorchExited()</a> from stm32f7hal.o(i._ZN8touchgfx3HAL15backPorchExitedEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[c0]">touchgfx::HAL::cacheTextString(const unsigned short*)</a> from hal.o(i._ZN8touchgfx3HAL15cacheTextStringEPKt) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[c0]">touchgfx::HAL::cacheTextString(const unsigned short*)</a> from hal.o(i._ZN8touchgfx3HAL15cacheTextStringEPKt) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[be]">touchgfx::HAL::lockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL15lockFrameBufferEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[be]">touchgfx::HAL::lockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL15lockFrameBufferEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[c4]">touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)</a> from hal.o(i._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[c4]">touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)</a> from hal.o(i._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[1db]">touchgfx::HAL::flushFrameBuffer(const touchgfx::Rect&)</a> from hal.o(i._ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[bc]">touchgfx::HAL::allowDMATransfers()</a> from hal.o(i._ZN8touchgfx3HAL17allowDMATransfersEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[bc]">touchgfx::HAL::allowDMATransfers()</a> from hal.o(i._ZN8touchgfx3HAL17allowDMATransfersEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[1dc]">touchgfx::HAL::getTFTCurrentLine()</a> from hal.o(i._ZN8touchgfx3HAL17getTFTCurrentLineEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[bf]">touchgfx::HAL::unlockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL17unlockFrameBufferEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[bf]">touchgfx::HAL::unlockFrameBuffer()</a> from hal.o(i._ZN8touchgfx3HAL17unlockFrameBufferEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[c8]">touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)</a> from hal.o(i._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[c8]">touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)</a> from hal.o(i._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[c7]">touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</a> from hal.o(i._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[c7]">touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</a> from hal.o(i._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[ce]">touchgfx::HAL::setFrameBufferStartAddress(void*, unsigned short, bool, bool)</a> from stm32f7hal.o(i._ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[ce]">touchgfx::HAL::setFrameBufferStartAddress(void*, unsigned short, bool, bool)</a> from stm32f7hal.o(i._ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[d8]">touchgfx::HAL::performDisplayOrientationChange()</a> from stm32f7hal.o(i._ZN8touchgfx3HAL31performDisplayOrientationChangeEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[d8]">touchgfx::HAL::performDisplayOrientationChange()</a> from stm32f7hal.o(i._ZN8touchgfx3HAL31performDisplayOrientationChangeEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[d1]">touchgfx::HAL::tick()</a> from hal.o(i._ZN8touchgfx3HAL4tickEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[d1]">touchgfx::HAL::tick()</a> from hal.o(i._ZN8touchgfx3HAL4tickEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[d6]">touchgfx::HAL::touch(int, int)</a> from hal.o(i._ZN8touchgfx3HAL5touchEii) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[d6]">touchgfx::HAL::touch(int, int)</a> from hal.o(i._ZN8touchgfx3HAL5touchEii) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[d7]">touchgfx::HAL::noTouch()</a> from hal.o(i._ZN8touchgfx3HAL7noTouchEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[d7]">touchgfx::HAL::noTouch()</a> from hal.o(i._ZN8touchgfx3HAL7noTouchEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[c3]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthb) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[c3]">touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</a> from hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthb) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[c6]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[c6]">touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)</a> from hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[d3]">touchgfx::HAL::endFrame()</a> from hal.o(i._ZN8touchgfx3HAL8endFrameEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[d3]">touchgfx::HAL::endFrame()</a> from hal.o(i._ZN8touchgfx3HAL8endFrameEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[bd]">touchgfx::HAL::flushDMA()</a> from hal.o(i._ZN8touchgfx3HAL8flushDMAEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[bd]">touchgfx::HAL::flushDMA()</a> from hal.o(i._ZN8touchgfx3HAL8flushDMAEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[c1]">touchgfx::HAL::blockCopy(void*, const void*, unsigned)</a> from hal.o(i._ZN8touchgfx3HAL9blockCopyEPvPKvj) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[c1]">touchgfx::HAL::blockCopy(void*, const void*, unsigned)</a> from hal.o(i._ZN8touchgfx3HAL9blockCopyEPvPKvj) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[cf]">touchgfx::HAL::taskDelay(unsigned short)</a> from stm32f7hal.o(i._ZN8touchgfx3HAL9taskDelayEt) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[cf]">touchgfx::HAL::taskDelay(unsigned short)</a> from stm32f7hal.o(i._ZN8touchgfx3HAL9taskDelayEt) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[ba]">touchgfx::HAL::taskEntry()</a> from hal.o(i._ZN8touchgfx3HAL9taskEntryEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[ba]">touchgfx::HAL::taskEntry()</a> from hal.o(i._ZN8touchgfx3HAL9taskEntryEv) referenced from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[12]">touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)</a> from lcd.o(i._ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list) referenced 2 times from texts.o(.data)
 <LI><a href="#[98]">touchgfx::Rect::Rect()</a> from application.o(i._ZN8touchgfx4RectC1Ev) referenced from application.o(t._ZN8touchgfx6VectorINS_4RectELt8EEC1Ev)
 <LI><a href="#[1dd]">touchgfx::View&lang;Screen1Presenter&rang;::~View()</a> from screen1viewbase.o(i._ZN8touchgfx4ViewI16Screen1PresenterED1Ev) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[1de]">touchgfx::View&lang;mainScreenPresenter&rang;::~View()</a> from mainscreenviewbase.o(i._ZN8touchgfx4ViewI19mainScreenPresenterED1Ev) referenced from mainscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI19mainScreenPresenterEE)
 <LI><a href="#[1df]">touchgfx::View&lang;settingsScreenPresenter&rang;::~View()</a> from settingsscreenviewbase.o(i._ZN8touchgfx4ViewI23settingsScreenPresenterED1Ev) referenced from settingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI23settingsScreenPresenterEE)
 <LI><a href="#[1e0]">touchgfx::View&lang;dateTimeSettingsScreenPresenter&rang;::~View()</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx4ViewI31dateTimeSettingsScreenPresenterED1Ev) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dateTimeSettingsScreenPresenterEE)
 <LI><a href="#[1e1]">touchgfx::View&lang;dayNightSettingsScreenPresenter&rang;::~View()</a> from daynightsettingsscreenviewbase.o(i._ZN8touchgfx4ViewI31dayNightSettingsScreenPresenterED1Ev) referenced from daynightsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dayNightSettingsScreenPresenterEE)
 <LI><a href="#[1e2]">touchgfx::View&lang;opConfigSettingsScreenPresenter&rang;::~View()</a> from opconfigsettingsscreenviewbase.o(i._ZN8touchgfx4ViewI31opConfigSettingsScreenPresenterED1Ev) referenced from opconfigsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31opConfigSettingsScreenPresenterEE)
 <LI><a href="#[1e3]">touchgfx::View&lang;tempHumiSettingsScreenPresenter&rang;::~View()</a> from temphumisettingsscreenviewbase.o(i._ZN8touchgfx4ViewI31tempHumiSettingsScreenPresenterED1Ev) referenced from temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31tempHumiSettingsScreenPresenterEE)
 <LI><a href="#[1e6]">touchgfx::Image::setBitmap(const touchgfx::Bitmap&)</a> from image.o(i._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[8b]">touchgfx::BlitOp::BlitOp()</a> from stm32f7dma.o(i._ZN8touchgfx6BlitOpC1Ev) referenced from stm32f7dma.o(i._ZN10STM32F7DMAC1Ev)
 <LI><a href="#[19e]">touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)</a> from button.o(i._ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_) referenced from buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
 <LI><a href="#[19e]">touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)</a> from button.o(i._ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[19e]">touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)</a> from button.o(i._ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[1e7]">touchgfx::Button::~Button()</a> from mainscreenview.o(i._ZN8touchgfx6ButtonD1Ev) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[f4]">touchgfx::Screen::setupScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from screen1view.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[f4]">touchgfx::Screen::setupScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
 <LI><a href="#[f4]">touchgfx::Screen::setupScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from settingsscreenview.o(.constdata__ZTV22settingsScreenViewBase)
 <LI><a href="#[f4]">touchgfx::Screen::setupScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
 <LI><a href="#[f4]">touchgfx::Screen::setupScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
 <LI><a href="#[f4]">touchgfx::Screen::setupScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
 <LI><a href="#[f4]">touchgfx::Screen::setupScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
 <LI><a href="#[f4]">touchgfx::Screen::setupScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[f4]">touchgfx::Screen::setupScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from mainscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI19mainScreenPresenterEE)
 <LI><a href="#[f4]">touchgfx::Screen::setupScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from settingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI23settingsScreenPresenterEE)
 <LI><a href="#[f4]">touchgfx::Screen::setupScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dateTimeSettingsScreenPresenterEE)
 <LI><a href="#[f4]">touchgfx::Screen::setupScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from daynightsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dayNightSettingsScreenPresenterEE)
 <LI><a href="#[f4]">touchgfx::Screen::setupScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from opconfigsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31opConfigSettingsScreenPresenterEE)
 <LI><a href="#[f4]">touchgfx::Screen::setupScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31tempHumiSettingsScreenPresenterEE)
 <LI><a href="#[f4]">touchgfx::Screen::setupScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen11setupScreenEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[e2]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[e2]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from mainscreenview.o(.constdata__ZTV14mainScreenView)
 <LI><a href="#[e2]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screen1view.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[e2]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
 <LI><a href="#[e2]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from settingsscreenview.o(.constdata__ZTV18settingsScreenView)
 <LI><a href="#[e2]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from settingsscreenview.o(.constdata__ZTV22settingsScreenViewBase)
 <LI><a href="#[e2]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
 <LI><a href="#[e2]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
 <LI><a href="#[e2]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
 <LI><a href="#[e2]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
 <LI><a href="#[e2]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
 <LI><a href="#[e2]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
 <LI><a href="#[e2]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
 <LI><a href="#[e2]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
 <LI><a href="#[e2]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[e2]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from mainscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI19mainScreenPresenterEE)
 <LI><a href="#[e2]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from settingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI23settingsScreenPresenterEE)
 <LI><a href="#[e2]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dateTimeSettingsScreenPresenterEE)
 <LI><a href="#[e2]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from daynightsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dayNightSettingsScreenPresenterEE)
 <LI><a href="#[e2]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from opconfigsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31opConfigSettingsScreenPresenterEE)
 <LI><a href="#[e2]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31tempHumiSettingsScreenPresenterEE)
 <LI><a href="#[e2]">touchgfx::Screen::handleKeyEvent(unsigned char)</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[f5]">touchgfx::Screen::tearDownScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from screen1view.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[f5]">touchgfx::Screen::tearDownScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
 <LI><a href="#[f5]">touchgfx::Screen::tearDownScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from settingsscreenview.o(.constdata__ZTV22settingsScreenViewBase)
 <LI><a href="#[f5]">touchgfx::Screen::tearDownScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
 <LI><a href="#[f5]">touchgfx::Screen::tearDownScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
 <LI><a href="#[f5]">touchgfx::Screen::tearDownScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
 <LI><a href="#[f5]">touchgfx::Screen::tearDownScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
 <LI><a href="#[f5]">touchgfx::Screen::tearDownScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[f5]">touchgfx::Screen::tearDownScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from mainscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI19mainScreenPresenterEE)
 <LI><a href="#[f5]">touchgfx::Screen::tearDownScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from settingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI23settingsScreenPresenterEE)
 <LI><a href="#[f5]">touchgfx::Screen::tearDownScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dateTimeSettingsScreenPresenterEE)
 <LI><a href="#[f5]">touchgfx::Screen::tearDownScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from daynightsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dayNightSettingsScreenPresenterEE)
 <LI><a href="#[f5]">touchgfx::Screen::tearDownScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from opconfigsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31opConfigSettingsScreenPresenterEE)
 <LI><a href="#[f5]">touchgfx::Screen::tearDownScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31tempHumiSettingsScreenPresenterEE)
 <LI><a href="#[f5]">touchgfx::Screen::tearDownScreen()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14tearDownScreenEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[dc]">touchgfx::Screen::afterTransition()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[dc]">touchgfx::Screen::afterTransition()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from mainscreenview.o(.constdata__ZTV14mainScreenView)
 <LI><a href="#[dc]">touchgfx::Screen::afterTransition()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen1view.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[dc]">touchgfx::Screen::afterTransition()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
 <LI><a href="#[dc]">touchgfx::Screen::afterTransition()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from settingsscreenview.o(.constdata__ZTV18settingsScreenView)
 <LI><a href="#[dc]">touchgfx::Screen::afterTransition()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from settingsscreenview.o(.constdata__ZTV22settingsScreenViewBase)
 <LI><a href="#[dc]">touchgfx::Screen::afterTransition()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
 <LI><a href="#[dc]">touchgfx::Screen::afterTransition()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
 <LI><a href="#[dc]">touchgfx::Screen::afterTransition()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
 <LI><a href="#[dc]">touchgfx::Screen::afterTransition()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
 <LI><a href="#[dc]">touchgfx::Screen::afterTransition()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
 <LI><a href="#[dc]">touchgfx::Screen::afterTransition()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
 <LI><a href="#[dc]">touchgfx::Screen::afterTransition()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
 <LI><a href="#[dc]">touchgfx::Screen::afterTransition()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
 <LI><a href="#[dc]">touchgfx::Screen::afterTransition()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[dc]">touchgfx::Screen::afterTransition()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from mainscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI19mainScreenPresenterEE)
 <LI><a href="#[dc]">touchgfx::Screen::afterTransition()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from settingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI23settingsScreenPresenterEE)
 <LI><a href="#[dc]">touchgfx::Screen::afterTransition()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dateTimeSettingsScreenPresenterEE)
 <LI><a href="#[dc]">touchgfx::Screen::afterTransition()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from daynightsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dayNightSettingsScreenPresenterEE)
 <LI><a href="#[dc]">touchgfx::Screen::afterTransition()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from opconfigsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31opConfigSettingsScreenPresenterEE)
 <LI><a href="#[dc]">touchgfx::Screen::afterTransition()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31tempHumiSettingsScreenPresenterEE)
 <LI><a href="#[dc]">touchgfx::Screen::afterTransition()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15afterTransitionEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[df]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[df]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from mainscreenview.o(.constdata__ZTV14mainScreenView)
 <LI><a href="#[df]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen1view.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[df]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
 <LI><a href="#[df]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from settingsscreenview.o(.constdata__ZTV18settingsScreenView)
 <LI><a href="#[df]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from settingsscreenview.o(.constdata__ZTV22settingsScreenViewBase)
 <LI><a href="#[df]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
 <LI><a href="#[df]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
 <LI><a href="#[df]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
 <LI><a href="#[df]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
 <LI><a href="#[df]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
 <LI><a href="#[df]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
 <LI><a href="#[df]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
 <LI><a href="#[df]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
 <LI><a href="#[df]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[df]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from mainscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI19mainScreenPresenterEE)
 <LI><a href="#[df]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from settingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI23settingsScreenPresenterEE)
 <LI><a href="#[df]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dateTimeSettingsScreenPresenterEE)
 <LI><a href="#[df]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from daynightsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dayNightSettingsScreenPresenterEE)
 <LI><a href="#[df]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from opconfigsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31opConfigSettingsScreenPresenterEE)
 <LI><a href="#[df]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31tempHumiSettingsScreenPresenterEE)
 <LI><a href="#[df]">touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</a> from screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[e1]">touchgfx::Screen::handleTickEvent()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[e1]">touchgfx::Screen::handleTickEvent()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from mainscreenview.o(.constdata__ZTV14mainScreenView)
 <LI><a href="#[e1]">touchgfx::Screen::handleTickEvent()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from screen1view.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[e1]">touchgfx::Screen::handleTickEvent()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
 <LI><a href="#[e1]">touchgfx::Screen::handleTickEvent()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from settingsscreenview.o(.constdata__ZTV18settingsScreenView)
 <LI><a href="#[e1]">touchgfx::Screen::handleTickEvent()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from settingsscreenview.o(.constdata__ZTV22settingsScreenViewBase)
 <LI><a href="#[e1]">touchgfx::Screen::handleTickEvent()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
 <LI><a href="#[e1]">touchgfx::Screen::handleTickEvent()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
 <LI><a href="#[e1]">touchgfx::Screen::handleTickEvent()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
 <LI><a href="#[e1]">touchgfx::Screen::handleTickEvent()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
 <LI><a href="#[e1]">touchgfx::Screen::handleTickEvent()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
 <LI><a href="#[e1]">touchgfx::Screen::handleTickEvent()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
 <LI><a href="#[e1]">touchgfx::Screen::handleTickEvent()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
 <LI><a href="#[e1]">touchgfx::Screen::handleTickEvent()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
 <LI><a href="#[e1]">touchgfx::Screen::handleTickEvent()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[e1]">touchgfx::Screen::handleTickEvent()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from mainscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI19mainScreenPresenterEE)
 <LI><a href="#[e1]">touchgfx::Screen::handleTickEvent()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from settingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI23settingsScreenPresenterEE)
 <LI><a href="#[e1]">touchgfx::Screen::handleTickEvent()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dateTimeSettingsScreenPresenterEE)
 <LI><a href="#[e1]">touchgfx::Screen::handleTickEvent()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from daynightsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dayNightSettingsScreenPresenterEE)
 <LI><a href="#[e1]">touchgfx::Screen::handleTickEvent()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from opconfigsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31opConfigSettingsScreenPresenterEE)
 <LI><a href="#[e1]">touchgfx::Screen::handleTickEvent()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31tempHumiSettingsScreenPresenterEE)
 <LI><a href="#[e1]">touchgfx::Screen::handleTickEvent()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[de]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[de]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from mainscreenview.o(.constdata__ZTV14mainScreenView)
 <LI><a href="#[de]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen1view.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[de]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
 <LI><a href="#[de]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from settingsscreenview.o(.constdata__ZTV18settingsScreenView)
 <LI><a href="#[de]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from settingsscreenview.o(.constdata__ZTV22settingsScreenViewBase)
 <LI><a href="#[de]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
 <LI><a href="#[de]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
 <LI><a href="#[de]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
 <LI><a href="#[de]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
 <LI><a href="#[de]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
 <LI><a href="#[de]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
 <LI><a href="#[de]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
 <LI><a href="#[de]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
 <LI><a href="#[de]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[de]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from mainscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI19mainScreenPresenterEE)
 <LI><a href="#[de]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from settingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI23settingsScreenPresenterEE)
 <LI><a href="#[de]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dateTimeSettingsScreenPresenterEE)
 <LI><a href="#[de]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from daynightsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dayNightSettingsScreenPresenterEE)
 <LI><a href="#[de]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from opconfigsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31opConfigSettingsScreenPresenterEE)
 <LI><a href="#[de]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31tempHumiSettingsScreenPresenterEE)
 <LI><a href="#[de]">touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</a> from screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[e0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[e0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from mainscreenview.o(.constdata__ZTV14mainScreenView)
 <LI><a href="#[e0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen1view.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[e0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
 <LI><a href="#[e0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from settingsscreenview.o(.constdata__ZTV18settingsScreenView)
 <LI><a href="#[e0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from settingsscreenview.o(.constdata__ZTV22settingsScreenViewBase)
 <LI><a href="#[e0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
 <LI><a href="#[e0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
 <LI><a href="#[e0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
 <LI><a href="#[e0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
 <LI><a href="#[e0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
 <LI><a href="#[e0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
 <LI><a href="#[e0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
 <LI><a href="#[e0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
 <LI><a href="#[e0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[e0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from mainscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI19mainScreenPresenterEE)
 <LI><a href="#[e0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from settingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI23settingsScreenPresenterEE)
 <LI><a href="#[e0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dateTimeSettingsScreenPresenterEE)
 <LI><a href="#[e0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from daynightsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dayNightSettingsScreenPresenterEE)
 <LI><a href="#[e0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from opconfigsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31opConfigSettingsScreenPresenterEE)
 <LI><a href="#[e0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31tempHumiSettingsScreenPresenterEE)
 <LI><a href="#[e0]">touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</a> from screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[da]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen1view.o(.constdata__ZTV11Screen1View)
 <LI><a href="#[da]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from mainscreenview.o(.constdata__ZTV14mainScreenView)
 <LI><a href="#[da]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen1view.o(.constdata__ZTV15Screen1ViewBase)
 <LI><a href="#[da]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
 <LI><a href="#[da]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from settingsscreenview.o(.constdata__ZTV18settingsScreenView)
 <LI><a href="#[da]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from settingsscreenview.o(.constdata__ZTV22settingsScreenViewBase)
 <LI><a href="#[da]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
 <LI><a href="#[da]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
 <LI><a href="#[da]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
 <LI><a href="#[da]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
 <LI><a href="#[da]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
 <LI><a href="#[da]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
 <LI><a href="#[da]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
 <LI><a href="#[da]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
 <LI><a href="#[da]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
 <LI><a href="#[da]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from mainscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI19mainScreenPresenterEE)
 <LI><a href="#[da]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from settingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI23settingsScreenPresenterEE)
 <LI><a href="#[da]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dateTimeSettingsScreenPresenterEE)
 <LI><a href="#[da]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from daynightsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dayNightSettingsScreenPresenterEE)
 <LI><a href="#[da]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from opconfigsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31opConfigSettingsScreenPresenterEE)
 <LI><a href="#[da]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31tempHumiSettingsScreenPresenterEE)
 <LI><a href="#[da]">touchgfx::Screen::draw(touchgfx::Rect&)</a> from screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[1e8]">touchgfx::Screen::~Screen()</a> from screen.o(i._ZN8touchgfx6ScreenD1Ev) referenced from screen.o(.constdata__ZTVN8touchgfx6ScreenE)
 <LI><a href="#[1f5]">touchgfx::Slider::setValueRange(int, int)</a> from slider.o(i._ZN8touchgfx6Slider13setValueRangeEii) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[1f4]">touchgfx::Slider::setValueRange(int, int, int)</a> from slider.o(i._ZN8touchgfx6Slider13setValueRangeEiii) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[1ee]">touchgfx::Slider::handleDragEvent(const touchgfx::DragEvent&)</a> from slider.o(i._ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[1ed]">touchgfx::Slider::handleClickEvent(const touchgfx::ClickEvent&)</a> from slider.o(i._ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[1f3]">touchgfx::Slider::setupVerticalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</a> from slider.o(i._ZN8touchgfx6Slider19setupVerticalSliderEttttt) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[1f7]">touchgfx::Slider::updateIndicatorPosition(short)</a> from slider.o(i._ZN8touchgfx6Slider23updateIndicatorPositionEs) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[1f6]">touchgfx::Slider::setValue(int)</a> from slider.o(i._ZN8touchgfx6Slider8setValueEi) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[1e9]">touchgfx::Slider::~Slider()</a> from slider.o(i._ZN8touchgfx6SliderD1Ev) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[189]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[189]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[189]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
 <LI><a href="#[189]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[189]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[189]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[189]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[189]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[189]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[189]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[189]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[189]">touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1fd]">touchgfx::Widget::~Widget__sub_object()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx6WidgetD2Ev) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1ff]">touchgfx::Callback&lang;Screen1ViewBase, const touchgfx::AbstractButton&, void&rang;::execute(const touchgfx::AbstractButton&)</a> from screen1viewbase.o(t._ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvE7executeES4_) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvEE)
 <LI><a href="#[1fe]">touchgfx::Callback&lang;Screen1ViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback()</a> from screen1viewbase.o(i._ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvED1Ev) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvEE)
 <LI><a href="#[202]">touchgfx::Callback&lang;mainScreenViewBase, const touchgfx::AbstractButton&, void&rang;::execute(const touchgfx::AbstractButton&)</a> from mainscreenviewbase.o(t._ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvE7executeES4_) referenced from mainscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvEE)
 <LI><a href="#[201]">touchgfx::Callback&lang;mainScreenViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback()</a> from mainscreenviewbase.o(i._ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvED1Ev) referenced from mainscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvEE)
 <LI><a href="#[205]">touchgfx::Callback&lang;settingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::execute(const touchgfx::AbstractButton&)</a> from settingsscreenviewbase.o(t._ZN8touchgfx8CallbackI22settingsScreenViewBaseRKNS_14AbstractButtonEvE7executeES4_) referenced from settingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI22settingsScreenViewBaseRKNS_14AbstractButtonEvEE)
 <LI><a href="#[204]">touchgfx::Callback&lang;settingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback()</a> from settingsscreenviewbase.o(i._ZN8touchgfx8CallbackI22settingsScreenViewBaseRKNS_14AbstractButtonEvED1Ev) referenced from settingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI22settingsScreenViewBaseRKNS_14AbstractButtonEvEE)
 <LI><a href="#[208]">touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::execute()</a> from frontendapplicationbase.o(t._ZN8touchgfx8CallbackI23FrontendApplicationBasevvE7executeEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvEE)
 <LI><a href="#[207]">touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::~Callback()</a> from frontendapplicationbase.o(i._ZN8touchgfx8CallbackI23FrontendApplicationBasevvED1Ev) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvEE)
 <LI><a href="#[20b]">touchgfx::Callback&lang;dateTimeSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::execute(const touchgfx::AbstractButton&)</a> from datetimesettingsscreenviewbase.o(t._ZN8touchgfx8CallbackI30dateTimeSettingsScreenViewBaseRKNS_14AbstractButtonEvE7executeES4_) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30dateTimeSettingsScreenViewBaseRKNS_14AbstractButtonEvEE)
 <LI><a href="#[20a]">touchgfx::Callback&lang;dateTimeSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback()</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8CallbackI30dateTimeSettingsScreenViewBaseRKNS_14AbstractButtonEvED1Ev) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30dateTimeSettingsScreenViewBaseRKNS_14AbstractButtonEvEE)
 <LI><a href="#[20e]">touchgfx::Callback&lang;dayNightSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::execute(const touchgfx::AbstractButton&)</a> from daynightsettingsscreenviewbase.o(t._ZN8touchgfx8CallbackI30dayNightSettingsScreenViewBaseRKNS_14AbstractButtonEvE7executeES4_) referenced from daynightsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30dayNightSettingsScreenViewBaseRKNS_14AbstractButtonEvEE)
 <LI><a href="#[20d]">touchgfx::Callback&lang;dayNightSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback()</a> from daynightsettingsscreenviewbase.o(i._ZN8touchgfx8CallbackI30dayNightSettingsScreenViewBaseRKNS_14AbstractButtonEvED1Ev) referenced from daynightsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30dayNightSettingsScreenViewBaseRKNS_14AbstractButtonEvEE)
 <LI><a href="#[211]">touchgfx::Callback&lang;opConfigSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::execute(const touchgfx::AbstractButton&)</a> from opconfigsettingsscreenviewbase.o(t._ZN8touchgfx8CallbackI30opConfigSettingsScreenViewBaseRKNS_14AbstractButtonEvE7executeES4_) referenced from opconfigsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30opConfigSettingsScreenViewBaseRKNS_14AbstractButtonEvEE)
 <LI><a href="#[210]">touchgfx::Callback&lang;opConfigSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback()</a> from opconfigsettingsscreenviewbase.o(i._ZN8touchgfx8CallbackI30opConfigSettingsScreenViewBaseRKNS_14AbstractButtonEvED1Ev) referenced from opconfigsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30opConfigSettingsScreenViewBaseRKNS_14AbstractButtonEvEE)
 <LI><a href="#[214]">touchgfx::Callback&lang;tempHumiSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::execute(const touchgfx::AbstractButton&)</a> from temphumisettingsscreenviewbase.o(t._ZN8touchgfx8CallbackI30tempHumiSettingsScreenViewBaseRKNS_14AbstractButtonEvE7executeES4_) referenced from temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30tempHumiSettingsScreenViewBaseRKNS_14AbstractButtonEvEE)
 <LI><a href="#[213]">touchgfx::Callback&lang;tempHumiSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback()</a> from temphumisettingsscreenviewbase.o(i._ZN8touchgfx8CallbackI30tempHumiSettingsScreenViewBaseRKNS_14AbstractButtonEvED1Ev) referenced from temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30tempHumiSettingsScreenViewBaseRKNS_14AbstractButtonEvEE)
 <LI><a href="#[217]">touchgfx::Callback&lang;tempHumiSettingsScreenViewBase, const touchgfx::Slider&, int&rang;::execute(const touchgfx::Slider&, int)</a> from temphumisettingsscreenviewbase.o(t._ZN8touchgfx8CallbackI30tempHumiSettingsScreenViewBaseRKNS_6SliderEiE7executeES4_i) referenced from temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30tempHumiSettingsScreenViewBaseRKNS_6SliderEiEE)
 <LI><a href="#[216]">touchgfx::Callback&lang;tempHumiSettingsScreenViewBase, const touchgfx::Slider&, int&rang;::~Callback()</a> from temphumisettingsscreenviewbase.o(i._ZN8touchgfx8CallbackI30tempHumiSettingsScreenViewBaseRKNS_6SliderEiED1Ev) referenced from temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30tempHumiSettingsScreenViewBaseRKNS_6SliderEiEE)
 <LI><a href="#[21a]">touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::Drawable&, void&rang;::execute(touchgfx::Drawable&)</a> from frontendapplicationbase.o(t._ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvE7executeES5_) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvEE)
 <LI><a href="#[219]">touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::Drawable&, void&rang;::~Callback()</a> from frontendapplicationbase.o(i._ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvED1Ev) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvEE)
 <LI><a href="#[21c]">touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, touchgfx::Drawable&, void&rang;::execute(touchgfx::Drawable&)</a> from frontendapplicationbase.o(t._ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvE7executeES5_) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvEE)
 <LI><a href="#[21b]">touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, touchgfx::Drawable&, void&rang;::~Callback()</a> from frontendapplicationbase.o(i._ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvED1Ev) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvEE)
 <LI><a href="#[18c]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[18c]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[18c]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
 <LI><a href="#[18c]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[18c]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[18c]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[18c]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[18c]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[18c]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[18c]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[18c]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[18c]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[18c]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[18c]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[18c]">touchgfx::Drawable::setPosition(short, short, short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable11setPositionEssss) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[196]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[196]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[196]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
 <LI><a href="#[196]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[196]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[196]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[196]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[196]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[196]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[196]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[196]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[196]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[196]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[196]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[196]">touchgfx::Drawable::moveRelative(short, short)</a> from drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[198]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[198]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[198]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
 <LI><a href="#[198]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[198]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[198]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[198]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[198]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[198]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[198]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[198]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[198]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[198]">touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[194]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[194]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[194]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
 <LI><a href="#[194]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[194]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[194]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[194]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[194]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[194]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[194]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[194]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[194]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[194]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[194]">touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[195]">touchgfx::Drawable::handleTickEvent()</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[195]">touchgfx::Drawable::handleTickEvent()</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[195]">touchgfx::Drawable::handleTickEvent()</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
 <LI><a href="#[195]">touchgfx::Drawable::handleTickEvent()</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[195]">touchgfx::Drawable::handleTickEvent()</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[195]">touchgfx::Drawable::handleTickEvent()</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[195]">touchgfx::Drawable::handleTickEvent()</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[195]">touchgfx::Drawable::handleTickEvent()</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[195]">touchgfx::Drawable::handleTickEvent()</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[195]">touchgfx::Drawable::handleTickEvent()</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[195]">touchgfx::Drawable::handleTickEvent()</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[195]">touchgfx::Drawable::handleTickEvent()</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[195]">touchgfx::Drawable::handleTickEvent()</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[195]">touchgfx::Drawable::handleTickEvent()</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[195]">touchgfx::Drawable::handleTickEvent()</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1a3]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[1a3]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1a3]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1a3]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[1a3]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[1a3]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[1a3]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[1a3]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1a3]">touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[193]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[193]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[193]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
 <LI><a href="#[193]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[193]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[193]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[193]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[193]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[193]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[193]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[193]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[193]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[193]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[193]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[193]">touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[18d]">touchgfx::Drawable::setX(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[18d]">touchgfx::Drawable::setX(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[18d]">touchgfx::Drawable::setX(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
 <LI><a href="#[18d]">touchgfx::Drawable::setX(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[18d]">touchgfx::Drawable::setX(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[18d]">touchgfx::Drawable::setX(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[18d]">touchgfx::Drawable::setX(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[18d]">touchgfx::Drawable::setX(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[18d]">touchgfx::Drawable::setX(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[18d]">touchgfx::Drawable::setX(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[18d]">touchgfx::Drawable::setX(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[18d]">touchgfx::Drawable::setX(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[18d]">touchgfx::Drawable::setX(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[18d]">touchgfx::Drawable::setX(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[18d]">touchgfx::Drawable::setX(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setXEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[18e]">touchgfx::Drawable::setY(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[18e]">touchgfx::Drawable::setY(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[18e]">touchgfx::Drawable::setY(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
 <LI><a href="#[18e]">touchgfx::Drawable::setY(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[18e]">touchgfx::Drawable::setY(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[18e]">touchgfx::Drawable::setY(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[18e]">touchgfx::Drawable::setY(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[18e]">touchgfx::Drawable::setY(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[18e]">touchgfx::Drawable::setY(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[18e]">touchgfx::Drawable::setY(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[18e]">touchgfx::Drawable::setY(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[18e]">touchgfx::Drawable::setY(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[18e]">touchgfx::Drawable::setY(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[18e]">touchgfx::Drawable::setY(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[18e]">touchgfx::Drawable::setY(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setYEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[18f]">touchgfx::Drawable::setXY(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[18f]">touchgfx::Drawable::setXY(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[18f]">touchgfx::Drawable::setXY(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
 <LI><a href="#[18f]">touchgfx::Drawable::setXY(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[18f]">touchgfx::Drawable::setXY(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[18f]">touchgfx::Drawable::setXY(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[18f]">touchgfx::Drawable::setXY(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[18f]">touchgfx::Drawable::setXY(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[18f]">touchgfx::Drawable::setXY(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[18f]">touchgfx::Drawable::setXY(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[18f]">touchgfx::Drawable::setXY(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[18f]">touchgfx::Drawable::setXY(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[18f]">touchgfx::Drawable::setXY(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[18f]">touchgfx::Drawable::setXY(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[18f]">touchgfx::Drawable::setXY(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable5setXYEss) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[197]">touchgfx::Drawable::moveTo(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[197]">touchgfx::Drawable::moveTo(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[197]">touchgfx::Drawable::moveTo(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
 <LI><a href="#[197]">touchgfx::Drawable::moveTo(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[197]">touchgfx::Drawable::moveTo(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[197]">touchgfx::Drawable::moveTo(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[197]">touchgfx::Drawable::moveTo(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[197]">touchgfx::Drawable::moveTo(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[197]">touchgfx::Drawable::moveTo(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[197]">touchgfx::Drawable::moveTo(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[197]">touchgfx::Drawable::moveTo(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[197]">touchgfx::Drawable::moveTo(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[197]">touchgfx::Drawable::moveTo(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[197]">touchgfx::Drawable::moveTo(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[197]">touchgfx::Drawable::moveTo(short, short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable6moveToEss) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[190]">touchgfx::Drawable::setWidth(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[190]">touchgfx::Drawable::setWidth(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[190]">touchgfx::Drawable::setWidth(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
 <LI><a href="#[190]">touchgfx::Drawable::setWidth(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[190]">touchgfx::Drawable::setWidth(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[190]">touchgfx::Drawable::setWidth(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[190]">touchgfx::Drawable::setWidth(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[190]">touchgfx::Drawable::setWidth(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[190]">touchgfx::Drawable::setWidth(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[190]">touchgfx::Drawable::setWidth(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[190]">touchgfx::Drawable::setWidth(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[190]">touchgfx::Drawable::setWidth(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[190]">touchgfx::Drawable::setWidth(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[190]">touchgfx::Drawable::setWidth(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[190]">touchgfx::Drawable::setWidth(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[191]">touchgfx::Drawable::setHeight(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[191]">touchgfx::Drawable::setHeight(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[191]">touchgfx::Drawable::setHeight(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
 <LI><a href="#[191]">touchgfx::Drawable::setHeight(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[191]">touchgfx::Drawable::setHeight(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[191]">touchgfx::Drawable::setHeight(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[191]">touchgfx::Drawable::setHeight(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[191]">touchgfx::Drawable::setHeight(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[191]">touchgfx::Drawable::setHeight(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[191]">touchgfx::Drawable::setHeight(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[191]">touchgfx::Drawable::setHeight(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[191]">touchgfx::Drawable::setHeight(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[191]">touchgfx::Drawable::setHeight(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[191]">touchgfx::Drawable::setHeight(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[191]">touchgfx::Drawable::setHeight(short)</a> from datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[21d]">touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[21f]">touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectE) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[21e]">touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[220]">touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[222]">touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)</a> from lcd16bpp.o(i._ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhNS_9colortypeEhhNS_12TextRotationE) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[90]">touchgfx::LCD16bpp::~LCD16bpp()</a> from boardconfiguration.o(i._ZN8touchgfx8LCD16bppD1Ev) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[90]">touchgfx::LCD16bpp::~LCD16bpp()</a> from boardconfiguration.o(i._ZN8touchgfx8LCD16bppD1Ev) referenced from boardconfiguration.o(i.__sti___22_BoardConfiguration_cpp_dceb80ee)
 <LI><a href="#[1d4]">touchgfx::TextArea::getTextHeight()</a> from textarea.o(i._ZN8touchgfx8TextArea13getTextHeightEv) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1d4]">touchgfx::TextArea::getTextHeight()</a> from textarea.o(i._ZN8touchgfx8TextArea13getTextHeightEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[223]">touchgfx::TextArea::~TextArea()</a> from datetimesettingsscreenview.o(i._ZN8touchgfx8TextAreaD1Ev) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1f2]">touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void&rang;*)</a> from container.o(i._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvEE) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[1f2]">touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void&rang;*)</a> from container.o(i._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvEE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1ec]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[1ec]">touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1ef]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[1ef]">touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</a> from container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1f0]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[1f0]">touchgfx::Container::add(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1f1]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[1f1]">touchgfx::Container::remove(touchgfx::Drawable&)</a> from container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[225]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[226]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[224]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()</a> from boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev) referenced from boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[228]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;tempHumiSettingsScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI26tempHumiSettingsScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv) referenced from boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI26tempHumiSettingsScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[229]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;tempHumiSettingsScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI26tempHumiSettingsScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt) referenced from boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI26tempHumiSettingsScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[227]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;tempHumiSettingsScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()</a> from boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI26tempHumiSettingsScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev) referenced from boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI26tempHumiSettingsScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
 <LI><a href="#[22b]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</a> from boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv) referenced from boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EEE)
 <LI><a href="#[22c]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</a> from boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt) referenced from boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EEE)
 <LI><a href="#[22a]">touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()</a> from boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev) referenced from boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EEE)
 <LI><a href="#[22e]">touchgfx::Presenter::deactivate()</a> from datetimesettingsscreenpresenter.o(i._ZN8touchgfx9Presenter10deactivateEv) referenced from datetimesettingsscreenpresenter.o(.constdata__ZTVN8touchgfx9PresenterE)
 <LI><a href="#[22d]">touchgfx::Presenter::activate()</a> from datetimesettingsscreenpresenter.o(i._ZN8touchgfx9Presenter8activateEv) referenced from datetimesettingsscreenpresenter.o(.constdata__ZTVN8touchgfx9PresenterE)
 <LI><a href="#[22f]">touchgfx::Presenter::~Presenter()</a> from datetimesettingsscreenpresenter.o(i._ZN8touchgfx9PresenterD1Ev) referenced from datetimesettingsscreenpresenter.o(.constdata__ZTVN8touchgfx9PresenterE)
 <LI><a href="#[d4]">STM32F7HAL::getTFTFrameBuffer() const</a> from stm32f7hal.o(i._ZNK10STM32F7HAL17getTFTFrameBufferEv) referenced from stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
 <LI><a href="#[19d]">touchgfx::ButtonWithIcon::draw(const touchgfx::Rect&) const</a> from buttonwithicon.o(i._ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE) referenced from buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
 <LI><a href="#[1a2]">touchgfx::SnapshotWidget::getSolidRect() const</a> from snapshotwidget.o(i._ZNK8touchgfx14SnapshotWidget12getSolidRectEv) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[1a1]">touchgfx::SnapshotWidget::draw(const touchgfx::Rect&) const</a> from snapshotwidget.o(i._ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[1a7]">touchgfx::ButtonWithLabel::getSolidRect() const</a> from buttonwithlabel.o(i._ZNK8touchgfx15ButtonWithLabel12getSolidRectEv) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[1a6]">touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const</a> from buttonwithlabel.o(i._ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[1bf]">touchgfx::InternalFlashFont::getKerning(unsigned short, const touchgfx::GlyphNode*) const</a> from internalflashfont.o(i._ZNK8touchgfx17InternalFlashFont10getKerningEtPKNS_9GlyphNodeE) referenced from internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
 <LI><a href="#[1c1]">touchgfx::InternalFlashFont::getPixelData(const touchgfx::GlyphNode*) const</a> from internalflashfont.o(i._ZNK8touchgfx17InternalFlashFont12getPixelDataEPKNS_9GlyphNodeE) referenced from internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
 <LI><a href="#[1d1]">touchgfx::TextAreaWithOneWildcard::getTextWidth() const</a> from datetimesettingsscreenviewbase.o(i._ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1ce]">touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const</a> from datetimesettingsscreenviewbase.o(i._ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1da]">touchgfx::Box::getSolidRect() const</a> from box.o(i._ZNK8touchgfx3Box12getSolidRectEv) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[1d9]">touchgfx::Box::draw(const touchgfx::Rect&) const</a> from box.o(i._ZNK8touchgfx3Box4drawERKNS_4RectE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[1bc]">touchgfx::Font::getFontHeight() const</a> from font.o(i._ZNK8touchgfx4Font13getFontHeightEv) referenced from internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
 <LI><a href="#[1bc]">touchgfx::Font::getFontHeight() const</a> from font.o(i._ZNK8touchgfx4Font13getFontHeightEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1b9]">touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const</a> from font.o(i._ZNK8touchgfx4Font14getStringWidthEhPKtz) referenced from internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
 <LI><a href="#[1b9]">touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const</a> from font.o(i._ZNK8touchgfx4Font14getStringWidthEhPKtz) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1be]">touchgfx::Font::getBitsPerPixel() const</a> from font.o(i._ZNK8touchgfx4Font15getBitsPerPixelEv) referenced from internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
 <LI><a href="#[1be]">touchgfx::Font::getBitsPerPixel() const</a> from font.o(i._ZNK8touchgfx4Font15getBitsPerPixelEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1b8]">touchgfx::Font::getEllipsisChar() const</a> from font.o(i._ZNK8touchgfx4Font15getEllipsisCharEv) referenced from internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
 <LI><a href="#[1b8]">touchgfx::Font::getEllipsisChar() const</a> from font.o(i._ZNK8touchgfx4Font15getEllipsisCharEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1b7]">touchgfx::Font::getFallbackChar() const</a> from font.o(i._ZNK8touchgfx4Font15getFallbackCharEv) referenced from internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
 <LI><a href="#[1b7]">touchgfx::Font::getFallbackChar() const</a> from font.o(i._ZNK8touchgfx4Font15getFallbackCharEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1ba]">touchgfx::Font::getSpacingAbove(const unsigned short*, ...) const</a> from font.o(i._ZNK8touchgfx4Font15getSpacingAboveEPKtz) referenced from internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
 <LI><a href="#[1ba]">touchgfx::Font::getSpacingAbove(const unsigned short*, ...) const</a> from font.o(i._ZNK8touchgfx4Font15getSpacingAboveEPKtz) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1bb]">touchgfx::Font::getMaxTextHeight(const unsigned short*, ...) const</a> from font.o(i._ZNK8touchgfx4Font16getMaxTextHeightEPKtz) referenced from internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
 <LI><a href="#[1bb]">touchgfx::Font::getMaxTextHeight(const unsigned short*, ...) const</a> from font.o(i._ZNK8touchgfx4Font16getMaxTextHeightEPKtz) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1c0]">touchgfx::Font::getNumberOfLines(const unsigned short*, ...) const</a> from font.o(i._ZNK8touchgfx4Font16getNumberOfLinesEPKtz) referenced from internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
 <LI><a href="#[1c0]">touchgfx::Font::getNumberOfLines(const unsigned short*, ...) const</a> from font.o(i._ZNK8touchgfx4Font16getNumberOfLinesEPKtz) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[11]">touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const</a> from font.o(i._ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list) referenced 2 times from texts.o(.data)
 <LI><a href="#[1bd]">touchgfx::Font::getMinimumTextHeight() const</a> from font.o(i._ZNK8touchgfx4Font20getMinimumTextHeightEv) referenced from internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
 <LI><a href="#[1bd]">touchgfx::Font::getMinimumTextHeight() const</a> from font.o(i._ZNK8touchgfx4Font20getMinimumTextHeightEv) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1b6]">touchgfx::Font::getGlyph(unsigned short) const</a> from font.o(i._ZNK8touchgfx4Font8getGlyphEt) referenced from internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
 <LI><a href="#[1b6]">touchgfx::Font::getGlyph(unsigned short) const</a> from font.o(i._ZNK8touchgfx4Font8getGlyphEt) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1e5]">touchgfx::Image::getSolidRect() const</a> from image.o(i._ZNK8touchgfx5Image12getSolidRectEv) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[1e4]">touchgfx::Image::draw(const touchgfx::Rect&) const</a> from image.o(i._ZNK8touchgfx5Image4drawERKNS_4RectE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[186]">touchgfx::Button::getSolidRect() const</a> from button.o(i._ZNK8touchgfx6Button12getSolidRectEv) referenced from togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[186]">touchgfx::Button::getSolidRect() const</a> from button.o(i._ZNK8touchgfx6Button12getSolidRectEv) referenced from buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
 <LI><a href="#[186]">touchgfx::Button::getSolidRect() const</a> from button.o(i._ZNK8touchgfx6Button12getSolidRectEv) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[185]">touchgfx::Button::draw(const touchgfx::Rect&) const</a> from button.o(i._ZNK8touchgfx6Button4drawERKNS_4RectE) referenced from togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[185]">touchgfx::Button::draw(const touchgfx::Rect&) const</a> from button.o(i._ZNK8touchgfx6Button4drawERKNS_4RectE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[1f9]">touchgfx::Slider::positionToValue(short) const</a> from slider.o(i._ZNK8touchgfx6Slider15positionToValueEs) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[1f8]">touchgfx::Slider::valueToPosition(int) const</a> from slider.o(i._ZNK8touchgfx6Slider15valueToPositionEi) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[1fc]">touchgfx::Slider::getValueRangeSize() const</a> from slider.o(i._ZNK8touchgfx6Slider17getValueRangeSizeEv) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[1fa]">touchgfx::Slider::getIndicatorRadius() const</a> from slider.o(i._ZNK8touchgfx6Slider18getIndicatorRadiusEv) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[1fb]">touchgfx::Slider::getIndicatorPositionRangeSize() const</a> from slider.o(i._ZNK8touchgfx6Slider29getIndicatorPositionRangeSizeEv) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[200]">touchgfx::Callback&lang;Screen1ViewBase, const touchgfx::AbstractButton&, void&rang;::isValid() const</a> from screen1viewbase.o(t._ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvE7isValidEv) referenced from screen1viewbase.o(.constdata__ZTVN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvEE)
 <LI><a href="#[203]">touchgfx::Callback&lang;mainScreenViewBase, const touchgfx::AbstractButton&, void&rang;::isValid() const</a> from mainscreenviewbase.o(t._ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvE7isValidEv) referenced from mainscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvEE)
 <LI><a href="#[206]">touchgfx::Callback&lang;settingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::isValid() const</a> from settingsscreenviewbase.o(t._ZNK8touchgfx8CallbackI22settingsScreenViewBaseRKNS_14AbstractButtonEvE7isValidEv) referenced from settingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI22settingsScreenViewBaseRKNS_14AbstractButtonEvEE)
 <LI><a href="#[209]">touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::isValid() const</a> from frontendapplicationbase.o(t._ZNK8touchgfx8CallbackI23FrontendApplicationBasevvE7isValidEv) referenced from frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvEE)
 <LI><a href="#[20c]">touchgfx::Callback&lang;dateTimeSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::isValid() const</a> from datetimesettingsscreenviewbase.o(t._ZNK8touchgfx8CallbackI30dateTimeSettingsScreenViewBaseRKNS_14AbstractButtonEvE7isValidEv) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30dateTimeSettingsScreenViewBaseRKNS_14AbstractButtonEvEE)
 <LI><a href="#[20f]">touchgfx::Callback&lang;dayNightSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::isValid() const</a> from daynightsettingsscreenviewbase.o(t._ZNK8touchgfx8CallbackI30dayNightSettingsScreenViewBaseRKNS_14AbstractButtonEvE7isValidEv) referenced from daynightsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30dayNightSettingsScreenViewBaseRKNS_14AbstractButtonEvEE)
 <LI><a href="#[212]">touchgfx::Callback&lang;opConfigSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::isValid() const</a> from opconfigsettingsscreenviewbase.o(t._ZNK8touchgfx8CallbackI30opConfigSettingsScreenViewBaseRKNS_14AbstractButtonEvE7isValidEv) referenced from opconfigsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30opConfigSettingsScreenViewBaseRKNS_14AbstractButtonEvEE)
 <LI><a href="#[215]">touchgfx::Callback&lang;tempHumiSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::isValid() const</a> from temphumisettingsscreenviewbase.o(t._ZNK8touchgfx8CallbackI30tempHumiSettingsScreenViewBaseRKNS_14AbstractButtonEvE7isValidEv) referenced from temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30tempHumiSettingsScreenViewBaseRKNS_14AbstractButtonEvEE)
 <LI><a href="#[218]">touchgfx::Callback&lang;tempHumiSettingsScreenViewBase, const touchgfx::Slider&, int&rang;::isValid() const</a> from temphumisettingsscreenviewbase.o(t._ZNK8touchgfx8CallbackI30tempHumiSettingsScreenViewBaseRKNS_6SliderEiE7isValidEv) referenced from temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30tempHumiSettingsScreenViewBaseRKNS_6SliderEiEE)
 <LI><a href="#[188]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[188]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[188]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
 <LI><a href="#[188]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[188]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[188]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[188]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[188]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[188]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[188]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[188]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[188]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[188]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[188]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[188]">touchgfx::Drawable::invalidate() const</a> from drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[18a]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[18a]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[18a]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
 <LI><a href="#[18a]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[18a]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[18a]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[18a]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[18a]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[18a]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[18a]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[18a]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[18a]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[18a]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[18a]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[18a]">touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[187]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[187]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[187]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
 <LI><a href="#[187]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[187]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[187]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[187]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[187]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[187]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[187]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[187]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[187]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[187]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[187]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[187]">touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[18b]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
 <LI><a href="#[18b]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[18b]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
 <LI><a href="#[18b]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
 <LI><a href="#[18b]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
 <LI><a href="#[18b]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[18b]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[18b]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from box.o(.constdata__ZTVN8touchgfx3BoxE)
 <LI><a href="#[18b]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from image.o(.constdata__ZTVN8touchgfx5ImageE)
 <LI><a href="#[18b]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from button.o(.constdata__ZTVN8touchgfx6ButtonE)
 <LI><a href="#[18b]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[18b]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[18b]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[18b]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[18b]">touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</a> from drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[221]">touchgfx::LCD16bpp::bitDepth() const</a> from lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp8bitDepthEv) referenced from lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
 <LI><a href="#[1cf]">touchgfx::TextArea::getSolidRect() const</a> from datetimesettingsscreenviewbase.o(i._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
 <LI><a href="#[1cf]">touchgfx::TextArea::getSolidRect() const</a> from datetimesettingsscreenviewbase.o(i._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1cf]">touchgfx::TextArea::getSolidRect() const</a> from datetimesettingsscreenviewbase.o(i._ZNK8touchgfx8TextArea12getSolidRectEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1d5]">touchgfx::TextArea::getTextWidth() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getTextWidthEv) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1d5]">touchgfx::TextArea::getTextWidth() const</a> from textarea.o(i._ZNK8touchgfx8TextArea12getTextWidthEv) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1d3]">touchgfx::TextArea::draw(const touchgfx::Rect&) const</a> from textarea.o(i._ZNK8touchgfx8TextArea4drawERKNS_4RectE) referenced from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
 <LI><a href="#[1d3]">touchgfx::TextArea::draw(const touchgfx::Rect&) const</a> from textarea.o(i._ZNK8touchgfx8TextArea4drawERKNS_4RectE) referenced from textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
 <LI><a href="#[1b5]">touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const</a> from constfont.o(i._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh) referenced from internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
 <LI><a href="#[1b5]">touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const</a> from constfont.o(i._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh) referenced from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[1eb]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[1eb]">touchgfx::Container::getSolidRect() const</a> from container.o(i._ZNK8touchgfx9Container12getSolidRectEv) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[1ea]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from slider.o(.constdata__ZTVN8touchgfx6SliderE)
 <LI><a href="#[1ea]">touchgfx::Container::draw(const touchgfx::Rect&) const</a> from container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE) referenced from container.o(.constdata__ZTVN8touchgfx9ContainerE)
 <LI><a href="#[117]">thunk{-4} to mainScreenPresenter::dateChanged(int, int, int, int, int)</a> from mainscreenpresenter.o(i._ZThn4_N19mainScreenPresenter11dateChangedEiiiii) referenced from mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
 <LI><a href="#[116]">thunk{-4} to mainScreenPresenter::humidityChanged(int)</a> from mainscreenpresenter.o(i._ZThn4_N19mainScreenPresenter15humidityChangedEi) referenced from mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
 <LI><a href="#[11a]">thunk{-4} to mainScreenPresenter::heatOpStateChanged(bool)</a> from mainscreenpresenter.o(i._ZThn4_N19mainScreenPresenter18heatOpStateChangedEb) referenced from mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
 <LI><a href="#[119]">thunk{-4} to mainScreenPresenter::humiOpStateChanged(bool)</a> from mainscreenpresenter.o(i._ZThn4_N19mainScreenPresenter18humiOpStateChangedEb) referenced from mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
 <LI><a href="#[115]">thunk{-4} to mainScreenPresenter::temperatureChanged(int)</a> from mainscreenpresenter.o(i._ZThn4_N19mainScreenPresenter18temperatureChangedEi) referenced from mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
 <LI><a href="#[118]">thunk{-4} to mainScreenPresenter::lightOpStateChanged(bool)</a> from mainscreenpresenter.o(i._ZThn4_N19mainScreenPresenter19lightOpStateChangedEb) referenced from mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
 <LI><a href="#[181]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced from boardconfiguration.o(.constdata__ZTVN8touchgfx12FontProviderE)
 <LI><a href="#[181]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 4 times from dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
 <LI><a href="#[181]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
 <LI><a href="#[181]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvEE)
 <LI><a href="#[181]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx15GenericCallbackIRKNS_6SliderEiEE)
 <LI><a href="#[181]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from frontendapplicationbase.o(.constdata__ZTVN8touchgfx15GenericCallbackIRNS_8DrawableEvEE)
 <LI><a href="#[181]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from frontendapplicationbase.o(.constdata__ZTVN8touchgfx15GenericCallbackIvvEE)
 <LI><a href="#[181]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from boardconfiguration.o(.constdata__ZTVN8touchgfx15TouchControllerE)
 <LI><a href="#[181]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 4 times from abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
 <LI><a href="#[181]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 3 times from boardconfiguration.o(.constdata__ZTVN8touchgfx18MCUInstrumentationE)
 <LI><a href="#[181]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 6 times from hal.o(.constdata__ZTVN8touchgfx3HALE)
 <LI><a href="#[181]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 8 times from boardconfiguration.o(.constdata__ZTVN8touchgfx3LCDE)
 <LI><a href="#[181]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
 <LI><a href="#[181]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 3 times from drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
 <LI><a href="#[181]">__cxa_pure_virtual</a> from pure_virt.o(i.__cxa_pure_virtual) referenced 2 times from constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
 <LI><a href="#[235]">__main</a> from __main.o(!!!main) referenced from startup_stm32f746xx.o(.text)
 <LI><a href="#[234]">__sti___15_Application_cpp_63cd8d44</a> from application.o(i.__sti___15_Application_cpp_63cd8d44) referenced from application.o(.init_array)
 <LI><a href="#[232]">__sti___21_TypedTextDatabase_cpp_42ef4e5b</a> from typedtextdatabase.o(i.__sti___21_TypedTextDatabase_cpp_42ef4e5b) referenced from typedtextdatabase.o(.init_array)
 <LI><a href="#[233]">__sti___22_BoardConfiguration_cpp_dceb80ee</a> from boardconfiguration.o(i.__sti___22_BoardConfiguration_cpp_dceb80ee) referenced from boardconfiguration.o(.init_array)
 <LI><a href="#[230]">__sti___9_Model_cpp_measTemp</a> from model.o(i.__sti___9_Model_cpp_measTemp) referenced from model.o(.init_array)
 <LI><a href="#[231]">__sti___9_Texts_cpp_454ca793</a> from texts.o(i.__sti___9_Texts_cpp_454ca793) referenced from texts.o(.init_array)
 <LI><a href="#[13]">ft5336_Init</a> from ft5336.o(i.ft5336_Init) referenced 2 times from ft5336.o(.data)
 <LI><a href="#[14]">ft5336_ReadID</a> from ft5336.o(i.ft5336_ReadID) referenced 2 times from ft5336.o(.data)
 <LI><a href="#[15]">ft5336_Reset</a> from ft5336.o(i.ft5336_Reset) referenced 2 times from ft5336.o(.data)
 <LI><a href="#[1a]">ft5336_TS_ClearIT</a> from ft5336.o(i.ft5336_TS_ClearIT) referenced 2 times from ft5336.o(.data)
 <LI><a href="#[17]">ft5336_TS_DetectTouch</a> from ft5336.o(i.ft5336_TS_DetectTouch) referenced 2 times from ft5336.o(.data)
 <LI><a href="#[1c]">ft5336_TS_DisableIT</a> from ft5336.o(i.ft5336_TS_DisableIT) referenced 2 times from ft5336.o(.data)
 <LI><a href="#[19]">ft5336_TS_EnableIT</a> from ft5336.o(i.ft5336_TS_EnableIT) referenced 2 times from ft5336.o(.data)
 <LI><a href="#[18]">ft5336_TS_GetXY</a> from ft5336.o(i.ft5336_TS_GetXY) referenced 2 times from ft5336.o(.data)
 <LI><a href="#[1b]">ft5336_TS_ITStatus</a> from ft5336.o(i.ft5336_TS_ITStatus) referenced 2 times from ft5336.o(.data)
 <LI><a href="#[16]">ft5336_TS_Start</a> from ft5336.o(i.ft5336_TS_Start) referenced 2 times from ft5336.o(.data)
 <LI><a href="#[96]">prvIdleTask</a> from tasks.o(i.prvIdleTask) referenced from tasks.o(i.vTaskStartScheduler)
 <LI><a href="#[94]">prvTaskExitError</a> from port.o(i.prvTaskExitError) referenced from port.o(i.pxPortInitialiseStack)
</UL>
<P>
<H3>
Global Symbols
</H3>
<P><STRONG><a name="[235]"></a>__main</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, __main.o(!!!main))
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
<LI><a href="#[237]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload
</UL>

<P><STRONG><a name="[237]"></a>__scatterload</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter))
<BR><BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
</UL>

<P><STRONG><a name="[239]"></a>__scatterload_rt2</STRONG> (Thumb, 44 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[238]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry
</UL>

<P><STRONG><a name="[4c7]"></a>__scatterload_rt2_thumb_only</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[4c8]"></a>__scatterload_null</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __scatter.o(!!!scatter), UNUSED)

<P><STRONG><a name="[4c9]"></a>__decompress</STRONG> (Thumb, 90 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[4ca]"></a>__decompress1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __dczerorl2.o(!!dczerorl2), UNUSED)

<P><STRONG><a name="[4cb]"></a>__scatterload_zeroinit</STRONG> (Thumb, 28 bytes, Stack size unknown bytes, __scatter_zi.o(!!handler_zi), UNUSED)

<P><STRONG><a name="[244]"></a>__rt_lib_init</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit.o(.ARM.Collect$$libinit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[243]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_li
</UL>

<P><STRONG><a name="[23a]"></a>__rt_lib_init_fp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000001))
<BR><BR>[Calls]<UL><LI><a href="#[23b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_fp_init
</UL>

<P><STRONG><a name="[23c]"></a>__rt_lib_init_heap_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000005))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_heap_2 &rArr; _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[4cc]"></a>__rt_lib_init_preinit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000004))

<P><STRONG><a name="[4cd]"></a>__rt_lib_init_alloca_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002E))

<P><STRONG><a name="[4ce]"></a>__rt_lib_init_argv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000002C))

<P><STRONG><a name="[4cf]"></a>__rt_lib_init_atexit_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001B))

<P><STRONG><a name="[4d0]"></a>__rt_lib_init_clock_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000021))

<P><STRONG><a name="[23e]"></a>__rt_lib_init_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000031))
<BR><BR>[Stack]<UL><LI>Max Depth = 16 + Unknown Stack Size
<LI>Call Chain = __rt_lib_init_cpp_2 &rArr; __cpp_initialize__aeabi_
</UL>
<BR>[Calls]<UL><LI><a href="#[236]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cpp_initialize__aeabi_
</UL>

<P><STRONG><a name="[4d1]"></a>__rt_lib_init_exceptions_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000030))

<P><STRONG><a name="[4d2]"></a>__rt_lib_init_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001F))

<P><STRONG><a name="[4d3]"></a>__rt_lib_init_getenv_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000023))

<P><STRONG><a name="[4d4]"></a>__rt_lib_init_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000A))

<P><STRONG><a name="[4d5]"></a>__rt_lib_init_lc_collate_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000011))

<P><STRONG><a name="[4d6]"></a>__rt_lib_init_lc_ctype_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000013))

<P><STRONG><a name="[4d7]"></a>__rt_lib_init_lc_monetary_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000015))

<P><STRONG><a name="[4d8]"></a>__rt_lib_init_lc_numeric_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000017))

<P><STRONG><a name="[4d9]"></a>__rt_lib_init_lc_time_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000019))

<P><STRONG><a name="[4da]"></a>__rt_lib_init_rand_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000E))

<P><STRONG><a name="[4db]"></a>__rt_lib_init_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000001D))

<P><STRONG><a name="[4dc]"></a>__rt_lib_init_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000025))

<P><STRONG><a name="[4dd]"></a>__rt_lib_init_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$0000000C))

<P><STRONG><a name="[4de]"></a>__rt_lib_init_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000032))

<P><STRONG><a name="[4df]"></a>__rt_lib_init_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libinit2.o(.ARM.Collect$$libinit$$00000033))

<P><STRONG><a name="[249]"></a>__rt_lib_shutdown</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown.o(.ARM.Collect$$libshutdown$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[248]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_ls
</UL>

<P><STRONG><a name="[23f]"></a>__rt_lib_shutdown_cpp_2</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000001))
<BR><BR>[Stack]<UL><LI>Max Depth = 40 + Unknown Stack Size
<LI>Call Chain = __rt_lib_shutdown_cpp_2 &rArr; __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[4e0]"></a>__rt_lib_shutdown_cpp_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000002))

<P><STRONG><a name="[4e1]"></a>__rt_lib_shutdown_fp_trap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000007))

<P><STRONG><a name="[4e2]"></a>__rt_lib_shutdown_heap_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000F))

<P><STRONG><a name="[4e3]"></a>__rt_lib_shutdown_return</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000010))

<P><STRONG><a name="[4e4]"></a>__rt_lib_shutdown_signal_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000A))

<P><STRONG><a name="[4e5]"></a>__rt_lib_shutdown_stdio_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$00000004))

<P><STRONG><a name="[4e6]"></a>__rt_lib_shutdown_user_alloc_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, libshutdown2.o(.ARM.Collect$$libshutdown$$0000000C))

<P><STRONG><a name="[238]"></a>__rt_entry</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry.o(.ARM.Collect$$rtentry$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[235]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__main
<LI><a href="#[239]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__scatterload_rt2
</UL>

<P><STRONG><a name="[4e7]"></a>__rt_entry_presh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000002))

<P><STRONG><a name="[241]"></a>__rt_entry_sh</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry4.o(.ARM.Collect$$rtentry$$00000004))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __rt_entry_sh &rArr; __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[243]"></a>__rt_entry_li</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000A))
<BR><BR>[Calls]<UL><LI><a href="#[244]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init
</UL>

<P><STRONG><a name="[4e8]"></a>__rt_entry_postsh_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$00000009))

<P><STRONG><a name="[245]"></a>__rt_entry_main</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000D))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = __rt_entry_main &rArr; main &rArr; touchgfx::hw_init() &rArr; SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
<LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[4e9]"></a>__rt_entry_postli_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, __rtentry2.o(.ARM.Collect$$rtentry$$0000000C))

<P><STRONG><a name="[269]"></a>__rt_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit.o(.ARM.Collect$$rtexit$$00000000))
<BR><BR>[Called By]<UL><LI><a href="#[247]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;exit
</UL>

<P><STRONG><a name="[248]"></a>__rt_exit_ls</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000003))
<BR><BR>[Calls]<UL><LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
</UL>

<P><STRONG><a name="[4ea]"></a>__rt_exit_prels_1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000002))

<P><STRONG><a name="[24a]"></a>__rt_exit_exit</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rtexit2.o(.ARM.Collect$$rtexit$$00000004))
<BR><BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>

<P><STRONG><a name="[23]"></a>SVC_Handler</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[499]"></a>__asm___6_port_c_39a90d8d__prvStartFirstTask</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[498]"></a>__asm___6_port_c_39a90d8d__prvEnableVFP</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[25]"></a>PendSV_Handler</STRONG> (Thumb, 92 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = PendSV_Handler &rArr; vTaskSwitchContext &rArr; xTaskCallApplicationTaskHook
</UL>
<BR>[Calls]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[48f]"></a>vPortGetIPSR</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, port.o(.emb_text))
<BR><BR>[Called By]<UL><LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>

<P><STRONG><a name="[1d]"></a>Reset_Handler</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[4eb]"></a>_maybe_terminate_alloc</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, maybetermalloc1.o(.emb_text), UNUSED)

<P><STRONG><a name="[1e]"></a>NMI_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NMI_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[1f]"></a>HardFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[1f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HardFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[20]"></a>MemManage_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[20]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MemManage_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[21]"></a>BusFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[21]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BusFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[22]"></a>UsageFault_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[22]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;UsageFault_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[24]"></a>DebugMon_Handler</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Called By]<UL><LI><a href="#[24]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DebugMon_Handler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[39]"></a>ADC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Called By]<UL><LI><a href="#[39]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ADC_IRQHandler
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[3b]"></a>CAN1_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[3c]"></a>CAN1_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[3d]"></a>CAN1_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[3a]"></a>CAN1_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[67]"></a>CAN2_RX0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[68]"></a>CAN2_RX1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[69]"></a>CAN2_SCE_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[66]"></a>CAN2_TX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[84]"></a>CEC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[75]"></a>DCMI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[32]"></a>DMA1_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[33]"></a>DMA1_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[34]"></a>DMA1_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[35]"></a>DMA1_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[36]"></a>DMA1_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[37]"></a>DMA1_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[38]"></a>DMA1_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[56]"></a>DMA1_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[5f]"></a>DMA2_Stream0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[60]"></a>DMA2_Stream1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[61]"></a>DMA2_Stream2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[62]"></a>DMA2_Stream3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[63]"></a>DMA2_Stream4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[6b]"></a>DMA2_Stream5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[6c]"></a>DMA2_Stream6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[6d]"></a>DMA2_Stream7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[64]"></a>ETH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[65]"></a>ETH_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[2d]"></a>EXTI0_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[4f]"></a>EXTI15_10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[2e]"></a>EXTI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[2f]"></a>EXTI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[30]"></a>EXTI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[31]"></a>EXTI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[3e]"></a>EXTI9_5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[2b]"></a>FLASH_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[57]"></a>FMC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[77]"></a>FPU_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[47]"></a>I2C1_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[46]"></a>I2C1_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[49]"></a>I2C2_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[48]"></a>I2C2_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[70]"></a>I2C3_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[6f]"></a>I2C3_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[86]"></a>I2C4_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[85]"></a>I2C4_EV_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[83]"></a>LPTIM1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[7f]"></a>LTDC_ER_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[6a]"></a>OTG_FS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[51]"></a>OTG_FS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[72]"></a>OTG_HS_EP1_IN_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[71]"></a>OTG_HS_EP1_OUT_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[74]"></a>OTG_HS_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[73]"></a>OTG_HS_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[28]"></a>PVD_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[82]"></a>QUADSPI_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[2c]"></a>RCC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[76]"></a>RNG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[50]"></a>RTC_Alarm_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[2a]"></a>RTC_WKUP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[7d]"></a>SAI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[81]"></a>SAI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[58]"></a>SDMMC1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[87]"></a>SPDIF_RX_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[4a]"></a>SPI1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[4b]"></a>SPI2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[5a]"></a>SPI3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[7a]"></a>SPI4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[7b]"></a>SPI5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[7c]"></a>SPI6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[29]"></a>TAMP_STAMP_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[3f]"></a>TIM1_BRK_TIM9_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[42]"></a>TIM1_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[41]"></a>TIM1_TRG_COM_TIM11_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[40]"></a>TIM1_UP_TIM10_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[43]"></a>TIM2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[44]"></a>TIM3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[45]"></a>TIM4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[59]"></a>TIM5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[5d]"></a>TIM6_DAC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[5e]"></a>TIM7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[52]"></a>TIM8_BRK_TIM12_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[55]"></a>TIM8_CC_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[54]"></a>TIM8_TRG_COM_TIM14_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[53]"></a>TIM8_UP_TIM13_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[5b]"></a>UART4_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[5c]"></a>UART5_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[78]"></a>UART7_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[79]"></a>UART8_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[4c]"></a>USART1_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[4d]"></a>USART2_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[4e]"></a>USART3_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[6e]"></a>USART6_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[27]"></a>WWDG_IRQHandler</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, startup_stm32f746xx.o(.text))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[268]"></a>__user_initial_stackheap</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, startup_stm32f746xx.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[24d]"></a>abort</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, abort.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48 + Unknown Stack Size
<LI>Call Chain = abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
<LI><a href="#[249]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>
<BR>[Called By]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFrom24BitRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setupVerticalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations)
<LI><a href="#[b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::execute()
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&)
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::draw(const touchgfx::Rect&) const
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(const touchgfx::Rect&) const
<LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned)
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect)
<LI><a href="#[1c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::pop()
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)
<LI><a href="#[1f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setValueRange(int, int, int)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
<LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list)
</UL>

<P><STRONG><a name="[24f]"></a>__aeabi_atexit</STRONG> (Thumb, 46 bytes, Stack size 24 bytes, aeabi_atexit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___9_Model_cpp_measTemp
<LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_46_4bpp()
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_34_4bpp()
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_17_8bpp()
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_12_4bpp()
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_segoeui_67_4bpp()
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_segoeui_40_8bpp()
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_segoeui_28_8bpp()
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_segoeui_18_8bpp()
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_segoeui_17_8bpp()
<LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___22_BoardConfiguration_cpp_dceb80ee
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::getHAL&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short)
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[252]"></a>__aeabi_assert</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, assert.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__assert_puts
</UL>
<BR>[Called By]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::assertValid() const
<LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;tempHumiSettingsScreenView, tempHumiSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;opConfigSettingsScreenView, opConfigSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;dayNightSettingsScreenView, dayNightSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;dateTimeSettingsScreenView, dateTimeSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setFrameBufferStartAddress(void*, unsigned short, bool, bool)
</UL>

<P><STRONG><a name="[4ec]"></a>__assert</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, assert.o(.text), UNUSED)

<P><STRONG><a name="[496]"></a>memcmp</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, memcmp.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>

<P><STRONG><a name="[47e]"></a>__aeabi_memcpy</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
</UL>

<P><STRONG><a name="[254]"></a>__rt_memcpy</STRONG> (Thumb, 138 bytes, Stack size 0 bytes, rt_memcpy_v6.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>

<P><STRONG><a name="[4ed]"></a>_memcpy_lastbytes</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_v6.o(.text), UNUSED)

<P><STRONG><a name="[255]"></a>__aeabi_memcpy4</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = __aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataFill(const touchgfx::BlitOp&)
<LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
<LI><a href="#[1c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)
<LI><a href="#[254]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memcpy
</UL>

<P><STRONG><a name="[4ee]"></a>__aeabi_memcpy8</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[4ef]"></a>__rt_memcpy_w</STRONG> (Thumb, 100 bytes, Stack size 8 bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[4f0]"></a>_memcpy_lastbytes_aligned</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memcpy_w.o(.text), UNUSED)

<P><STRONG><a name="[256]"></a>__aeabi_memset</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, aeabi_memset.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[257]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAllocateTCBAndStack
</UL>

<P><STRONG><a name="[4f1]"></a>__aeabi_memclr4</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[4f2]"></a>__aeabi_memclr8</STRONG> (Thumb, 0 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[4f3]"></a>__rt_memclr_w</STRONG> (Thumb, 78 bytes, Stack size 4 bytes, rt_memclr_w.o(.text), UNUSED)

<P><STRONG><a name="[261]"></a>_memset_w</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr_w.o(.text), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[260]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_memclr
</UL>

<P><STRONG><a name="[4f4]"></a>__use_two_region_memory</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[9]"></a>__rt_heap_escrow</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[8]"></a>__rt_heap_expand</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, heapauxi.o(.text), UNUSED)

<P><STRONG><a name="[236]"></a>__cpp_initialize__aeabi_</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, init_aeabi.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __cpp_initialize__aeabi_
</UL>
<BR>[Called By]<UL><LI><a href="#[23e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_cpp_2
</UL>

<P><STRONG><a name="[24b]"></a>_sys_exit</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, sys_exit.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[24a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit_exit
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>

<P><STRONG><a name="[251]"></a>__rt_ddtor_pointer_addr</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_ddtor_pointer_addr_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[250]"></a>malloc</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, h1_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>

<P><STRONG><a name="[25a]"></a>free</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, h1_free.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = free
</UL>
<BR>[Calls]<UL><LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[240]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_finalize
</UL>

<P><STRONG><a name="[240]"></a>__cxa_finalize</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, cxa_finalize.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __cxa_finalize &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[251]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_ddtor_pointer_addr
</UL>
<BR>[Called By]<UL><LI><a href="#[23f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_shutdown_cpp_2
</UL>

<P><STRONG><a name="[24e]"></a>__rt_SIGABRT</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_abrt_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>

<P><STRONG><a name="[25d]"></a>__rt_SIGPVFN</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_pvfn_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGPVFN &rArr; __rt_SIGPVFN_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN_inner
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[181]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_pure_virtual
</UL>

<P><STRONG><a name="[253]"></a>__assert_puts</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, assert_puts.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __assert_puts &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>

<P><STRONG><a name="[4f5]"></a>__aeabi_memclr</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)

<P><STRONG><a name="[260]"></a>__rt_memclr</STRONG> (Thumb, 68 bytes, Stack size 0 bytes, rt_memclr.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[261]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_memset_w
</UL>

<P><STRONG><a name="[257]"></a>_memset</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, rt_memclr.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>

<P><STRONG><a name="[25f]"></a>_ttywrch</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, sys_wrch.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = _ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
<LI><a href="#[253]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__assert_puts
</UL>

<P><STRONG><a name="[4f6]"></a>__user_libspace</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[267]"></a>__user_perproc_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[242]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_setup_stackheap
</UL>

<P><STRONG><a name="[4f7]"></a>__user_perthread_libspace</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, libspace.o(.text), UNUSED)

<P><STRONG><a name="[4f8]"></a>__I$use$semihosting</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[4f9]"></a>__use_no_semihosting_swi</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, use_no_semi.o(.text), UNUSED)

<P><STRONG><a name="[4fa]"></a>__semihosting_library_function</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, indicate_semi.o(.text), UNUSED)

<P><STRONG><a name="[258]"></a>__rt_heap_descriptor</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, rt_heap_descriptor_intlibspace.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
<LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
<LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[4fb]"></a>__use_no_heap</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[4fc]"></a>__heap$guard</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, hguard.o(.text), UNUSED)

<P><STRONG><a name="[b]"></a>_terminate_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[5]"></a>_init_user_alloc</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)

<P><STRONG><a name="[259]"></a>__Heap_Full</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
</UL>
<BR>[Called By]<UL><LI><a href="#[250]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;malloc
</UL>

<P><STRONG><a name="[263]"></a>__Heap_Broken</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, init_alloc.o(.text), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[23d]"></a>_init_alloc</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, init_alloc.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = _init_alloc &rArr; __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[262]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_ProvideMemory
<LI><a href="#[265]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Initialize
<LI><a href="#[258]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_heap_descriptor
</UL>
<BR>[Called By]<UL><LI><a href="#[23c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_heap_2
</UL>

<P><STRONG><a name="[265]"></a>__Heap_Initialize</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, h1_init.o(.text))
<BR><BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
</UL>

<P><STRONG><a name="[a]"></a>__Heap_DescSize</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, h1_init.o(.text), UNUSED)

<P><STRONG><a name="[25c]"></a>__sig_exit</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, defsig_exit.o(.text))
<BR><BR>[Calls]<UL><LI><a href="#[24b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_sys_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
<LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
<LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>

<P><STRONG><a name="[25b]"></a>__rt_SIGABRT_inner</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_abrt_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[24e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT
</UL>

<P><STRONG><a name="[25e]"></a>__rt_SIGPVFN_inner</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_pvfn_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGPVFN_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
</UL>

<P><STRONG><a name="[242]"></a>__user_setup_stackheap</STRONG> (Thumb, 74 bytes, Stack size 8 bytes, sys_stackheap_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = __user_setup_stackheap
</UL>
<BR>[Calls]<UL><LI><a href="#[268]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_initial_stackheap
<LI><a href="#[267]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__user_perproc_libspace
</UL>
<BR>[Called By]<UL><LI><a href="#[241]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_sh
</UL>

<P><STRONG><a name="[262]"></a>__Heap_ProvideMemory</STRONG> (Thumb, 52 bytes, Stack size 0 bytes, h1_extend.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[25a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;free
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[259]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Full
</UL>

<P><STRONG><a name="[247]"></a>exit</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, exit.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 8 + Unknown Stack Size
<LI>Call Chain = exit
</UL>
<BR>[Calls]<UL><LI><a href="#[269]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[266]"></a>__default_signal_display</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, defsig_general.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[25f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_ttywrch
</UL>
<BR>[Called By]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[25e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN_inner
<LI><a href="#[25b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGABRT_inner
</UL>

<P><STRONG><a name="[264]"></a>__rt_SIGRTMEM</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, defsig_rtmem_outer.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __rt_SIGRTMEM &rArr; __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[26a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM_inner
<LI><a href="#[25c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sig_exit
</UL>
<BR>[Called By]<UL><LI><a href="#[23d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_init_alloc
<LI><a href="#[263]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__Heap_Broken
</UL>

<P><STRONG><a name="[26a]"></a>__rt_SIGRTMEM_inner</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, defsig_rtmem_inner.o(.text))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __rt_SIGRTMEM_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[266]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__default_signal_display
</UL>
<BR>[Called By]<UL><LI><a href="#[264]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGRTMEM
</UL>

<P><STRONG><a name="[26b]"></a>BSP_LCD_ClockConfig</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, stm32746g_discovery_lcd.o(i.BSP_LCD_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = BSP_LCD_ClockConfig &rArr; HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_Init
</UL>

<P><STRONG><a name="[26d]"></a>BSP_LCD_DisplayOn</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, stm32746g_discovery_lcd.o(i.BSP_LCD_DisplayOn))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = BSP_LCD_DisplayOn
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
</UL>

<P><STRONG><a name="[2f0]"></a>BSP_LCD_GetXSize</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32746g_discovery_lcd.o(i.BSP_LCD_GetXSize))
<BR><BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_LayerInit(unsigned short, unsigned)
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::STM32F746GTouchController::init()
</UL>

<P><STRONG><a name="[2f1]"></a>BSP_LCD_GetYSize</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32746g_discovery_lcd.o(i.BSP_LCD_GetYSize))
<BR><BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_LayerInit(unsigned short, unsigned)
<LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::STM32F746GTouchController::init()
</UL>

<P><STRONG><a name="[26f]"></a>BSP_LCD_Init</STRONG> (Thumb, 150 bytes, Stack size 8 bytes, stm32746g_discovery_lcd.o(i.BSP_LCD_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = BSP_LCD_Init &rArr; BSP_SDRAM_Init &rArr; BSP_SDRAM_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_MspInit
<LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_ClockConfig
<LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_Init
<LI><a href="#[270]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_GetState
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
</UL>

<P><STRONG><a name="[271]"></a>BSP_LCD_MspInit</STRONG> (Thumb, 402 bytes, Stack size 40 bytes, stm32746g_discovery_lcd.o(i.BSP_LCD_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BSP_LCD_MspInit &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_Init
</UL>

<P><STRONG><a name="[275]"></a>BSP_LED_Init</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, stm32746g_discovery.o(i.BSP_LED_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = BSP_LED_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::init()
</UL>

<P><STRONG><a name="[276]"></a>BSP_LED_Off</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, stm32746g_discovery.o(i.BSP_LED_Off))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BSP_LED_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
</UL>

<P><STRONG><a name="[277]"></a>BSP_LED_On</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, stm32746g_discovery.o(i.BSP_LED_On))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BSP_LED_On
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
</UL>

<P><STRONG><a name="[278]"></a>BSP_LED_Toggle</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, stm32746g_discovery.o(i.BSP_LED_Toggle))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BSP_LED_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[279]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_TogglePin
</UL>
<BR>[Called By]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)
</UL>

<P><STRONG><a name="[27a]"></a>BSP_QSPI_EnableMemoryMappedMode</STRONG> (Thumb, 74 bytes, Stack size 72 bytes, stm32746g_discovery_qspi.o(i.BSP_QSPI_EnableMemoryMappedMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = BSP_QSPI_EnableMemoryMappedMode &rArr; HAL_QSPI_MemoryMapped &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MemoryMapped
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
</UL>

<P><STRONG><a name="[27c]"></a>BSP_QSPI_Init</STRONG> (Thumb, 114 bytes, Stack size 8 bytes, stm32746g_discovery_qspi.o(i.BSP_QSPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = BSP_QSPI_Init &rArr; QSPI_ResetMemory &rArr; QSPI_AutoPollingMemReady &rArr; HAL_QSPI_AutoPolling &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_QSPI_MspInit
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Init
<LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_DeInit
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_ResetMemory
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_DummyCyclesCfg
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
</UL>

<P><STRONG><a name="[27e]"></a>BSP_QSPI_MspInit</STRONG> (Thumb, 362 bytes, Stack size 40 bytes, stm32746g_discovery_qspi.o(i.BSP_QSPI_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = BSP_QSPI_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_QSPI_Init
</UL>

<P><STRONG><a name="[273]"></a>BSP_SDRAM_Init</STRONG> (Thumb, 122 bytes, Stack size 8 bytes, stm32746g_discovery_sdram.o(i.BSP_SDRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = BSP_SDRAM_Init &rArr; BSP_SDRAM_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_MspInit
<LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Initialization_sequence
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_Init
</UL>

<P><STRONG><a name="[286]"></a>BSP_SDRAM_Initialization_sequence</STRONG> (Thumb, 142 bytes, Stack size 16 bytes, stm32746g_discovery_sdram.o(i.BSP_SDRAM_Initialization_sequence))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = BSP_SDRAM_Initialization_sequence &rArr; HAL_SDRAM_SendCommand &rArr; FMC_SDRAM_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_SendCommand
<LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_ProgramRefreshRate
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Init
</UL>

<P><STRONG><a name="[284]"></a>BSP_SDRAM_MspInit</STRONG> (Thumb, 418 bytes, Stack size 40 bytes, stm32746g_discovery_sdram.o(i.BSP_SDRAM_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = BSP_SDRAM_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_DeInit
<LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Init
</UL>

<P><STRONG><a name="[28c]"></a>BSP_TS_GetState</STRONG> (Thumb, 526 bytes, Stack size 88 bytes, stm32746g_discovery_ts.o(i.BSP_TS_GetState))
<BR><BR>[Stack]<UL><LI>Max Depth = 312<LI>Call Chain = BSP_TS_GetState &rArr; ft5336_TS_GetTouchInfo &rArr; TS_IO_Read &rArr; I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_TS_GetTouchInfo
<LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TS_Get_GestureId
</UL>
<BR>[Called By]<UL><LI><a href="#[1d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::STM32F746GTouchController::sampleTouch(int&, int&)
</UL>

<P><STRONG><a name="[28e]"></a>BSP_TS_Get_GestureId</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, stm32746g_discovery_ts.o(i.BSP_TS_Get_GestureId))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = BSP_TS_Get_GestureId &rArr; ft5336_TS_GetGestureID &rArr; TS_IO_Read &rArr; I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_TS_GetGestureID
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TS_GetState
</UL>

<P><STRONG><a name="[41a]"></a>BSP_TS_Init</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, stm32746g_discovery_ts.o(i.BSP_TS_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = BSP_TS_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[1d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::STM32F746GTouchController::init()
</UL>

<P><STRONG><a name="[80]"></a>DMA2D_IRQHandler</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, stm32f7hal.o(i.DMA2D_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = DMA2D_IRQHandler &rArr; SCB_CleanInvalidateDCache()
</UL>
<BR>[Calls]<UL><LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCB_CleanInvalidateDCache()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[2ce]"></a>FMC_SDRAM_Init</STRONG> (Thumb, 116 bytes, Stack size 12 bytes, stm32f7xx_ll_fmc.o(i.FMC_SDRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = FMC_SDRAM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
</UL>

<P><STRONG><a name="[2d0]"></a>FMC_SDRAM_ProgramRefreshRate</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f7xx_ll_fmc.o(i.FMC_SDRAM_ProgramRefreshRate))
<BR><BR>[Called By]<UL><LI><a href="#[289]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_ProgramRefreshRate
</UL>

<P><STRONG><a name="[291]"></a>FMC_SDRAM_SendCommand</STRONG> (Thumb, 82 bytes, Stack size 24 bytes, stm32f7xx_ll_fmc.o(i.FMC_SDRAM_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FMC_SDRAM_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[287]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_SendCommand
</UL>

<P><STRONG><a name="[2cf]"></a>FMC_SDRAM_Timing_Init</STRONG> (Thumb, 152 bytes, Stack size 16 bytes, stm32f7xx_ll_fmc.o(i.FMC_SDRAM_Timing_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = FMC_SDRAM_Timing_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
</UL>

<P><STRONG><a name="[293]"></a>HAL_DMA2D_Abort</STRONG> (Thumb, 112 bytes, Stack size 16 bytes, stm32f7xx_hal_dma2d.o(i.HAL_DMA2D_Abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA2D_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_DeInit
</UL>

<P><STRONG><a name="[294]"></a>HAL_DMA2D_BlendingStart_IT</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, stm32f7xx_hal_dma2d.o(i.HAL_DMA2D_BlendingStart_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_DMA2D_BlendingStart_IT &rArr; DMA2D_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataCopy(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[296]"></a>HAL_DMA2D_CLUTLoading_Abort</STRONG> (Thumb, 130 bytes, Stack size 24 bytes, stm32f7xx_hal_dma2d.o(i.HAL_DMA2D_CLUTLoading_Abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_DMA2D_CLUTLoading_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_DeInit
</UL>

<P><STRONG><a name="[303]"></a>HAL_DMA2D_ConfigLayer</STRONG> (Thumb, 228 bytes, Stack size 20 bytes, stm32f7xx_hal_dma2d.o(i.HAL_DMA2D_ConfigLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = HAL_DMA2D_ConfigLayer
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataFill(const touchgfx::BlitOp&)
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataCopy(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[297]"></a>HAL_DMA2D_DeInit</STRONG> (Thumb, 144 bytes, Stack size 8 bytes, stm32f7xx_hal_dma2d.o(i.HAL_DMA2D_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_DMA2D_DeInit &rArr; HAL_DMA2D_CLUTLoading_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[298]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspDeInit
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_CLUTLoading_Abort
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Abort
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataFill(const touchgfx::BlitOp&)
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataCopy(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[299]"></a>HAL_DMA2D_Init</STRONG> (Thumb, 96 bytes, Stack size 8 bytes, stm32f7xx_hal_dma2d.o(i.HAL_DMA2D_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_DMA2D_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[29a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataFill(const touchgfx::BlitOp&)
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataCopy(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[298]"></a>HAL_DMA2D_MspDeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f7xx_hal_dma2d.o(i.HAL_DMA2D_MspDeInit))
<BR><BR>[Called By]<UL><LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_DeInit
</UL>

<P><STRONG><a name="[29a]"></a>HAL_DMA2D_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f7xx_hal_dma2d.o(i.HAL_DMA2D_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
</UL>

<P><STRONG><a name="[29b]"></a>HAL_DMA2D_Start_IT</STRONG> (Thumb, 90 bytes, Stack size 32 bytes, stm32f7xx_hal_dma2d.o(i.HAL_DMA2D_Start_IT))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_DMA2D_Start_IT &rArr; DMA2D_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[295]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataFill(const touchgfx::BlitOp&)
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataCopy(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[29c]"></a>HAL_DMA_Abort</STRONG> (Thumb, 170 bytes, Stack size 16 bytes, stm32f7xx_hal_dma.o(i.HAL_DMA_Abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA_Abort
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Abort
</UL>

<P><STRONG><a name="[28a]"></a>HAL_DMA_DeInit</STRONG> (Thumb, 98 bytes, Stack size 16 bytes, stm32f7xx_hal_dma.o(i.HAL_DMA_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_DMA_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CalcBaseAndBitshift
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_MspInit
</UL>

<P><STRONG><a name="[28b]"></a>HAL_DMA_Init</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, stm32f7xx_hal_dma.o(i.HAL_DMA_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_DMA_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[29e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CheckFifoParam
<LI><a href="#[29d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA_CalcBaseAndBitshift
</UL>
<BR>[Called By]<UL><LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_MspInit
</UL>

<P><STRONG><a name="[288]"></a>HAL_Delay</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, stm32f7xx_hal.o(i.HAL_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Delay
<LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Initialization_sequence
</UL>

<P><STRONG><a name="[274]"></a>HAL_GPIO_Init</STRONG> (Thumb, 484 bytes, Stack size 24 bytes, stm32f7xx_hal_gpio.o(i.HAL_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[271]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_MspInit
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_MspInit
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_QSPI_MspInit
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_MspInit
</UL>

<P><STRONG><a name="[2fe]"></a>HAL_GPIO_ReadPin</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, stm32f7xx_hal_gpio.o(i.HAL_GPIO_ReadPin))
<BR><BR>[Called By]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opSocket::getOpState()
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readData(unsigned char*, int)
</UL>

<P><STRONG><a name="[279]"></a>HAL_GPIO_TogglePin</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f7xx_hal_gpio.o(i.HAL_GPIO_TogglePin))
<BR><BR>[Called By]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Toggle
</UL>

<P><STRONG><a name="[26e]"></a>HAL_GPIO_WritePin</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f7xx_hal_gpio.o(i.HAL_GPIO_WritePin))
<BR><BR>[Called By]<UL><LI><a href="#[e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::homeBtnClicked()
<LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opSocket::setOpState(bool)
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor::reset()
<LI><a href="#[f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::mainPowerBtnClicked()
<LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_On
<LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Off
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_Init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_DisplayOn
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeData(unsigned char)
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readData(unsigned char*, int)
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startTransmit()
</UL>

<P><STRONG><a name="[292]"></a>HAL_GetTick</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, stm32f7xx_hal.o(i.HAL_GetTick))
<BR><BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
<LI><a href="#[296]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_CLUTLoading_Abort
<LI><a href="#[293]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Abort
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
<LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableOverDrive
<LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Transmit
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Receive
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MemoryMapped
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Init
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AutoPolling
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
<LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Abort
<LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_SendCommand
</UL>

<P><STRONG><a name="[29f]"></a>HAL_I2C_DeInit</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, stm32f7xx_hal_i2c.o(i.HAL_I2C_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_I2C_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Error
</UL>

<P><STRONG><a name="[2d8]"></a>HAL_I2C_GetState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f7xx_hal_i2c.o(i.HAL_I2C_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
</UL>

<P><STRONG><a name="[2a1]"></a>HAL_I2C_Init</STRONG> (Thumb, 184 bytes, Stack size 8 bytes, stm32f7xx_hal_i2c.o(i.HAL_I2C_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_I2C_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
</UL>

<P><STRONG><a name="[2a3]"></a>HAL_I2C_Mem_Read</STRONG> (Thumb, 438 bytes, Stack size 48 bytes, stm32f7xx_hal_i2c.o(i.HAL_I2C_Mem_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>
<BR>[Called By]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_ReadMultiple
</UL>

<P><STRONG><a name="[2a8]"></a>HAL_I2C_Mem_Write</STRONG> (Thumb, 436 bytes, Stack size 48 bytes, stm32f7xx_hal_i2c.o(i.HAL_I2C_Mem_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_WriteMultiple
</UL>

<P><STRONG><a name="[2a0]"></a>HAL_I2C_MspDeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f7xx_hal_i2c.o(i.HAL_I2C_MspDeInit))
<BR><BR>[Called By]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
</UL>

<P><STRONG><a name="[2a2]"></a>HAL_I2C_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f7xx_hal_i2c.o(i.HAL_I2C_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
</UL>

<P><STRONG><a name="[2e6]"></a>HAL_IncTick</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, stm32f7xx_hal.o(i.HAL_IncTick))
<BR><BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[2ab]"></a>HAL_Init</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, stm32f7xx_hal.o(i.HAL_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = HAL_Init &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[2ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriorityGrouping
<LI><a href="#[2ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
</UL>

<P><STRONG><a name="[2ad]"></a>HAL_InitTick</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, stm32f7xx_hal.o(i.HAL_InitTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[2b0]"></a>HAL_LTDC_ConfigLayer</STRONG> (Thumb, 94 bytes, Stack size 16 bytes, stm32f7xx_hal_ltdc.o(i.HAL_LTDC_ConfigLayer))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_SetConfig
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Called By]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_LayerInit(unsigned short, unsigned)
</UL>

<P><STRONG><a name="[270]"></a>HAL_LTDC_GetState</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f7xx_hal_ltdc.o(i.HAL_LTDC_GetState))
<BR><BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_Init
</UL>

<P><STRONG><a name="[272]"></a>HAL_LTDC_Init</STRONG> (Thumb, 290 bytes, Stack size 16 bytes, stm32f7xx_hal_ltdc.o(i.HAL_LTDC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_LTDC_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_Init
</UL>

<P><STRONG><a name="[2b2]"></a>HAL_LTDC_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f7xx_hal_ltdc.o(i.HAL_LTDC_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[272]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_Init
</UL>

<P><STRONG><a name="[453]"></a>HAL_MPU_ConfigRegion</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, stm32f7xx_hal_cortex.o(i.HAL_MPU_ConfigRegion))
<BR><BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
</UL>

<P><STRONG><a name="[2ae]"></a>HAL_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f7xx_hal_msp_template.o(i.HAL_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[451]"></a>HAL_NVIC_DisableIRQ</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f7xx_hal_cortex.o(i.HAL_NVIC_DisableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
</UL>

<P><STRONG><a name="[283]"></a>HAL_NVIC_EnableIRQ</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f7xx_hal_cortex.o(i.HAL_NVIC_EnableIRQ))
<BR><BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_MspInit
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_QSPI_MspInit
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_MspInit
</UL>

<P><STRONG><a name="[282]"></a>HAL_NVIC_SetPriority</STRONG> (Thumb, 124 bytes, Stack size 40 bytes, stm32f7xx_hal_cortex.o(i.HAL_NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
<LI><a href="#[2b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_GetPriorityGrouping
</UL>
<BR>[Called By]<UL><LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_MspInit
<LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[27e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_QSPI_MspInit
<LI><a href="#[284]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_MspInit
</UL>

<P><STRONG><a name="[2ac]"></a>HAL_NVIC_SetPriorityGrouping</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, stm32f7xx_hal_cortex.o(i.HAL_NVIC_SetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
</UL>

<P><STRONG><a name="[2b5]"></a>HAL_PWREx_EnableOverDrive</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, stm32f7xx_hal_pwr_ex.o(i.HAL_PWREx_EnableOverDrive))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_PWREx_EnableOverDrive
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[2b6]"></a>HAL_QSPI_Abort</STRONG> (Thumb, 142 bytes, Stack size 24 bytes, stm32f7xx_hal_qspi.o(i.HAL_QSPI_Abort))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_QSPI_Abort &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[29c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Abort
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Transmit
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Receive
</UL>

<P><STRONG><a name="[2b8]"></a>HAL_QSPI_AutoPolling</STRONG> (Thumb, 212 bytes, Stack size 32 bytes, stm32f7xx_hal_qspi.o(i.HAL_QSPI_AutoPolling))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_QSPI_AutoPolling &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WriteEnable
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_AutoPollingMemReady
</UL>

<P><STRONG><a name="[2ba]"></a>HAL_QSPI_Command</STRONG> (Thumb, 166 bytes, Stack size 32 bytes, stm32f7xx_hal_qspi.o(i.HAL_QSPI_Command))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_QSPI_Command &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WriteEnable
<LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_ResetMemory
<LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_DummyCyclesCfg
</UL>

<P><STRONG><a name="[27d]"></a>HAL_QSPI_DeInit</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, stm32f7xx_hal_qspi.o(i.HAL_QSPI_DeInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_QSPI_DeInit
</UL>
<BR>[Calls]<UL><LI><a href="#[2bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MspDeInit
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_QSPI_Init
</UL>

<P><STRONG><a name="[27f]"></a>HAL_QSPI_Init</STRONG> (Thumb, 208 bytes, Stack size 24 bytes, stm32f7xx_hal_qspi.o(i.HAL_QSPI_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = HAL_QSPI_Init &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
<LI><a href="#[2bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MspInit
<LI><a href="#[2bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_SetTimeout
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_QSPI_Init
</UL>

<P><STRONG><a name="[27b]"></a>HAL_QSPI_MemoryMapped</STRONG> (Thumb, 174 bytes, Stack size 32 bytes, stm32f7xx_hal_qspi.o(i.HAL_QSPI_MemoryMapped))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = HAL_QSPI_MemoryMapped &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
<LI><a href="#[2b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_QSPI_EnableMemoryMappedMode
</UL>

<P><STRONG><a name="[2bb]"></a>HAL_QSPI_MspDeInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f7xx_hal_qspi.o(i.HAL_QSPI_MspDeInit))
<BR><BR>[Called By]<UL><LI><a href="#[27d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_DeInit
</UL>

<P><STRONG><a name="[2bc]"></a>HAL_QSPI_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f7xx_hal_qspi.o(i.HAL_QSPI_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Init
</UL>

<P><STRONG><a name="[2be]"></a>HAL_QSPI_Receive</STRONG> (Thumb, 234 bytes, Stack size 40 bytes, stm32f7xx_hal_qspi.o(i.HAL_QSPI_Receive))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = HAL_QSPI_Receive &rArr; HAL_QSPI_Abort &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Abort
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_DummyCyclesCfg
</UL>

<P><STRONG><a name="[2bd]"></a>HAL_QSPI_SetTimeout</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f7xx_hal_qspi.o(i.HAL_QSPI_SetTimeout))
<BR><BR>[Called By]<UL><LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Init
</UL>

<P><STRONG><a name="[2bf]"></a>HAL_QSPI_Transmit</STRONG> (Thumb, 218 bytes, Stack size 32 bytes, stm32f7xx_hal_qspi.o(i.HAL_QSPI_Transmit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_QSPI_Transmit &rArr; HAL_QSPI_Abort &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WaitFlagStateUntilTimeout
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Abort
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_DummyCyclesCfg
</UL>

<P><STRONG><a name="[26c]"></a>HAL_RCCEx_PeriphCLKConfig</STRONG> (Thumb, 2322 bytes, Stack size 32 bytes, stm32f7xx_hal_rcc_ex.o(i.HAL_RCCEx_PeriphCLKConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_RCCEx_PeriphCLKConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[26b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_ClockConfig
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[2c0]"></a>HAL_RCC_ClockConfig</STRONG> (Thumb, 420 bytes, Stack size 16 bytes, stm32f7xx_hal_rcc.o(i.HAL_RCC_ClockConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
<LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[2c1]"></a>HAL_RCC_GetSysClockFreq</STRONG> (Thumb, 168 bytes, Stack size 16 bytes, stm32f7xx_hal_rcc.o(i.HAL_RCC_GetSysClockFreq))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RCC_GetSysClockFreq
</UL>
<BR>[Called By]<UL><LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
</UL>

<P><STRONG><a name="[2c2]"></a>HAL_RCC_OscConfig</STRONG> (Thumb, 1210 bytes, Stack size 16 bytes, stm32f7xx_hal_rcc.o(i.HAL_RCC_OscConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RCC_OscConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>

<P><STRONG><a name="[2c3]"></a>HAL_RTC_GetDate</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, stm32f7xx_hal_rtc.o(i.HAL_RTC_GetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RTC_GetDate
</UL>
<BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::tick()
</UL>

<P><STRONG><a name="[2c5]"></a>HAL_RTC_GetTime</STRONG> (Thumb, 92 bytes, Stack size 16 bytes, stm32f7xx_hal_rtc.o(i.HAL_RTC_GetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RTC_GetTime
</UL>
<BR>[Calls]<UL><LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::tick()
</UL>

<P><STRONG><a name="[2c6]"></a>HAL_RTC_Init</STRONG> (Thumb, 176 bytes, Stack size 8 bytes, stm32f7xx_hal_rtc.o(i.HAL_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_RTC_Init &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[2c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>

<P><STRONG><a name="[2c7]"></a>HAL_RTC_MspInit</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, rtc.o(i.HAL_RTC_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[2c9]"></a>HAL_RTC_SetDate</STRONG> (Thumb, 270 bytes, Stack size 24 bytes, stm32f7xx_hal_rtc.o(i.HAL_RTC_SetDate))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RTC_SetDate &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeDay(int)
<LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeMonth(int)
<LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeYear(int)
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>

<P><STRONG><a name="[2cc]"></a>HAL_RTC_SetTime</STRONG> (Thumb, 304 bytes, Stack size 24 bytes, stm32f7xx_hal_rtc.o(i.HAL_RTC_SetTime))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_RTC_SetTime &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[2c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_EnterInitMode
<LI><a href="#[2ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_ByteToBcd2
<LI><a href="#[2c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;RTC_Bcd2ToByte
<LI><a href="#[2cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_WaitForSynchro
</UL>
<BR>[Called By]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeMin(int)
<LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeHour(int)
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
</UL>

<P><STRONG><a name="[2cb]"></a>HAL_RTC_WaitForSynchro</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32f7xx_hal_rtc.o(i.HAL_RTC_WaitForSynchro))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_RTC_WaitForSynchro
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
</UL>

<P><STRONG><a name="[285]"></a>HAL_SDRAM_Init</STRONG> (Thumb, 64 bytes, Stack size 16 bytes, stm32f7xx_hal_sdram.o(i.HAL_SDRAM_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = HAL_SDRAM_Init &rArr; FMC_SDRAM_Timing_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_MspInit
<LI><a href="#[2cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_Timing_Init
<LI><a href="#[2ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Init
</UL>

<P><STRONG><a name="[2cd]"></a>HAL_SDRAM_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f7xx_hal_sdram.o(i.HAL_SDRAM_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[285]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SDRAM_Init
</UL>

<P><STRONG><a name="[289]"></a>HAL_SDRAM_ProgramRefreshRate</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32f7xx_hal_sdram.o(i.HAL_SDRAM_ProgramRefreshRate))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = HAL_SDRAM_ProgramRefreshRate
</UL>
<BR>[Calls]<UL><LI><a href="#[2d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_ProgramRefreshRate
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Initialization_sequence
</UL>

<P><STRONG><a name="[287]"></a>HAL_SDRAM_SendCommand</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, stm32f7xx_hal_sdram.o(i.HAL_SDRAM_SendCommand))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = HAL_SDRAM_SendCommand &rArr; FMC_SDRAM_SendCommand
</UL>
<BR>[Calls]<UL><LI><a href="#[291]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FMC_SDRAM_SendCommand
</UL>
<BR>[Called By]<UL><LI><a href="#[286]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Initialization_sequence
</UL>

<P><STRONG><a name="[2af]"></a>HAL_SYSTICK_Config</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, stm32f7xx_hal_cortex.o(i.HAL_SYSTICK_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = HAL_SYSTICK_Config &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[2ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_InitTick
</UL>

<P><STRONG><a name="[2d1]"></a>HAL_TIM_Base_Init</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, stm32f7xx_hal_tim.o(i.HAL_TIM_Base_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = HAL_TIM_Base_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_MspInit
<LI><a href="#[2d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TIM_Base_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::STM32F7Instrumentation::init()
</UL>

<P><STRONG><a name="[2d2]"></a>HAL_TIM_Base_MspInit</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, stm32f7xx_hal_tim.o(i.HAL_TIM_Base_MspInit))
<BR><BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[416]"></a>HAL_TIM_Base_Start</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, stm32f7xx_hal_tim.o(i.HAL_TIM_Base_Start))
<BR><BR>[Called By]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::STM32F7Instrumentation::init()
</UL>

<P><STRONG><a name="[7e]"></a>LTDC_IRQHandler</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, stm32f7hal.o(i.LTDC_IRQHandler))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = LTDC_IRQHandler &rArr; touchgfx::OSWrappers::signalVSync() &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
<LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::signalVSync()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[2e0]"></a>MX_GPIO_Init</STRONG> (Thumb, 462 bytes, Stack size 32 bytes, gpio_1.o(i.MX_GPIO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = MX_GPIO_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
</UL>

<P><STRONG><a name="[2e1]"></a>MX_RTC_Init</STRONG> (Thumb, 128 bytes, Stack size 32 bytes, rtc.o(i.MX_RTC_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = MX_RTC_Init &rArr; HAL_RTC_SetTime &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
</UL>

<P><STRONG><a name="[2e2]"></a>OS_SysTick</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, port.o(i.OS_SysTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = OS_SysTick &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>
<BR>[Called By]<UL><LI><a href="#[26]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SysTick_Handler
</UL>

<P><STRONG><a name="[2c4]"></a>RTC_Bcd2ToByte</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f7xx_hal_rtc.o(i.RTC_Bcd2ToByte))
<BR><BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
</UL>

<P><STRONG><a name="[2ca]"></a>RTC_ByteToBcd2</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f7xx_hal_rtc.o(i.RTC_ByteToBcd2))
<BR><BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
</UL>

<P><STRONG><a name="[2c8]"></a>RTC_EnterInitMode</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, stm32f7xx_hal_rtc.o(i.RTC_EnterInitMode))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
<LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
<LI><a href="#[2c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_Init
</UL>

<P><STRONG><a name="[26]"></a>SysTick_Handler</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, boardconfiguration.o(i.SysTick_Handler))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = SysTick_Handler &rArr; OS_SysTick &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SysTick
<LI><a href="#[2e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_IncTick
</UL>
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(RESET)
</UL>
<P><STRONG><a name="[2e7]"></a>SystemClock_Config</STRONG> (Thumb, 180 bytes, Stack size 216 bytes, boardconfiguration.o(i.SystemClock_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 296<LI>Call Chain = SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_OscConfig
<LI><a href="#[2c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCC_ClockConfig
<LI><a href="#[26c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RCCEx_PeriphCLKConfig
<LI><a href="#[2b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_PWREx_EnableOverDrive
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
</UL>

<P><STRONG><a name="[88]"></a>SystemInit</STRONG> (Thumb, 82 bytes, Stack size 0 bytes, system_stm32f7xx.o(i.SystemInit))
<BR>[Address Reference Count : 1]<UL><LI> startup_stm32f746xx.o(.text)
</UL>
<P><STRONG><a name="[2d3]"></a>TIM_Base_SetConfig</STRONG> (Thumb, 184 bytes, Stack size 0 bytes, stm32f7xx_hal_tim.o(i.TIM_Base_SetConfig))
<BR><BR>[Called By]<UL><LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>

<P><STRONG><a name="[2e8]"></a>TS_IO_Delay</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, stm32746g_discovery.o(i.TS_IO_Delay))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = TS_IO_Delay &rArr; HAL_Delay
</UL>
<BR>[Calls]<UL><LI><a href="#[288]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Delay
</UL>
<BR>[Called By]<UL><LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_Init
</UL>

<P><STRONG><a name="[2e9]"></a>TS_IO_Init</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, stm32746g_discovery.o(i.TS_IO_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = TS_IO_Init &rArr; I2Cx_Init &rArr; I2Cx_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_I2C_InitializeIfRequired
</UL>

<P><STRONG><a name="[2ea]"></a>TS_IO_Read</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, stm32746g_discovery.o(i.TS_IO_Read))
<BR><BR>[Stack]<UL><LI>Max Depth = 184<LI>Call Chain = TS_IO_Read &rArr; I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_ReadMultiple
</UL>
<BR>[Called By]<UL><LI><a href="#[18]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_TS_GetXY
<LI><a href="#[17]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_TS_DetectTouch
<LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_ReadID
<LI><a href="#[28d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_TS_GetTouchInfo
<LI><a href="#[28f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_TS_GetGestureID
</UL>

<P><STRONG><a name="[2eb]"></a>TS_IO_Write</STRONG> (Thumb, 32 bytes, Stack size 32 bytes, stm32746g_discovery.o(i.TS_IO_Write))
<BR><BR>[Stack]<UL><LI>Max Depth = 192<LI>Call Chain = TS_IO_Write &rArr; I2Cx_WriteMultiple &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_WriteMultiple
</UL>
<BR>[Called By]<UL><LI><a href="#[19]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_TS_EnableIT
<LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_TS_DisableIT
</UL>

<P><STRONG><a name="[2ed]"></a>startTransmit()</STRONG> (Thumb, 136 bytes, Stack size 8 bytes, sensor.o(i._Z13startTransmitv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = startTransmit() &rArr; delay(unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeCmd(unsigned char)
</UL>

<P><STRONG><a name="[2f2]"></a>getFont_segoeui_17_8bpp()</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, fontgetters.o(i._Z23getFont_segoeui_17_8bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = getFont_segoeui_17_8bpp() &rArr; touchgfx::InternalFlashFont::InternalFlashFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*, const touchgfx::KerningNode*, unsigned short, unsigned short) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::InternalFlashFont::InternalFlashFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*, const touchgfx::KerningNode*, unsigned short, unsigned short)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_TypedTextDatabase_cpp_42ef4e5b
</UL>

<P><STRONG><a name="[2f5]"></a>getFont_segoeui_18_8bpp()</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, fontgetters.o(i._Z23getFont_segoeui_18_8bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = getFont_segoeui_18_8bpp() &rArr; touchgfx::InternalFlashFont::InternalFlashFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*, const touchgfx::KerningNode*, unsigned short, unsigned short) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::InternalFlashFont::InternalFlashFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*, const touchgfx::KerningNode*, unsigned short, unsigned short)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_TypedTextDatabase_cpp_42ef4e5b
</UL>

<P><STRONG><a name="[2f6]"></a>getFont_segoeui_28_8bpp()</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, fontgetters.o(i._Z23getFont_segoeui_28_8bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = getFont_segoeui_28_8bpp() &rArr; touchgfx::InternalFlashFont::InternalFlashFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*, const touchgfx::KerningNode*, unsigned short, unsigned short) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::InternalFlashFont::InternalFlashFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*, const touchgfx::KerningNode*, unsigned short, unsigned short)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_TypedTextDatabase_cpp_42ef4e5b
</UL>

<P><STRONG><a name="[2f7]"></a>getFont_segoeui_40_8bpp()</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, fontgetters.o(i._Z23getFont_segoeui_40_8bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = getFont_segoeui_40_8bpp() &rArr; touchgfx::InternalFlashFont::InternalFlashFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*, const touchgfx::KerningNode*, unsigned short, unsigned short) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::InternalFlashFont::InternalFlashFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*, const touchgfx::KerningNode*, unsigned short, unsigned short)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_TypedTextDatabase_cpp_42ef4e5b
</UL>

<P><STRONG><a name="[2f8]"></a>getFont_segoeui_67_4bpp()</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, fontgetters.o(i._Z23getFont_segoeui_67_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = getFont_segoeui_67_4bpp() &rArr; touchgfx::InternalFlashFont::InternalFlashFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*, const touchgfx::KerningNode*, unsigned short, unsigned short) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::InternalFlashFont::InternalFlashFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*, const touchgfx::KerningNode*, unsigned short, unsigned short)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_TypedTextDatabase_cpp_42ef4e5b
</UL>

<P><STRONG><a name="[2f9]"></a>getFont_verdana_12_4bpp()</STRONG> (Thumb, 86 bytes, Stack size 40 bytes, fontgetters.o(i._Z23getFont_verdana_12_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = getFont_verdana_12_4bpp() &rArr; touchgfx::InternalFlashFont::InternalFlashFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*, const touchgfx::KerningNode*, unsigned short, unsigned short) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::InternalFlashFont::InternalFlashFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*, const touchgfx::KerningNode*, unsigned short, unsigned short)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_TypedTextDatabase_cpp_42ef4e5b
</UL>

<P><STRONG><a name="[2fa]"></a>getFont_verdana_17_8bpp()</STRONG> (Thumb, 84 bytes, Stack size 40 bytes, fontgetters.o(i._Z23getFont_verdana_17_8bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = getFont_verdana_17_8bpp() &rArr; touchgfx::InternalFlashFont::InternalFlashFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*, const touchgfx::KerningNode*, unsigned short, unsigned short) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::InternalFlashFont::InternalFlashFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*, const touchgfx::KerningNode*, unsigned short, unsigned short)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_TypedTextDatabase_cpp_42ef4e5b
</UL>

<P><STRONG><a name="[2fb]"></a>getFont_verdana_34_4bpp()</STRONG> (Thumb, 80 bytes, Stack size 40 bytes, fontgetters.o(i._Z23getFont_verdana_34_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = getFont_verdana_34_4bpp() &rArr; touchgfx::InternalFlashFont::InternalFlashFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*, const touchgfx::KerningNode*, unsigned short, unsigned short) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::InternalFlashFont::InternalFlashFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*, const touchgfx::KerningNode*, unsigned short, unsigned short)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_TypedTextDatabase_cpp_42ef4e5b
</UL>

<P><STRONG><a name="[2fc]"></a>getFont_verdana_46_4bpp()</STRONG> (Thumb, 82 bytes, Stack size 40 bytes, fontgetters.o(i._Z23getFont_verdana_46_4bppv))
<BR><BR>[Stack]<UL><LI>Max Depth = 116<LI>Call Chain = getFont_verdana_46_4bpp() &rArr; touchgfx::InternalFlashFont::InternalFlashFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*, const touchgfx::KerningNode*, unsigned short, unsigned short) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::InternalFlashFont::InternalFlashFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*, const touchgfx::KerningNode*, unsigned short, unsigned short)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[232]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___21_TypedTextDatabase_cpp_42ef4e5b
</UL>

<P><STRONG><a name="[2ee]"></a>delay(unsigned)</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, sensor.o(i._Z5delayj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = delay(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor::reset()
<LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeData(unsigned char)
<LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readData(unsigned char*, int)
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startTransmit()
</UL>

<P><STRONG><a name="[2fd]"></a>readData(unsigned char*, int)</STRONG> (Thumb, 214 bytes, Stack size 24 bytes, sensor.o(i._Z8readDataPhi))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = readData(unsigned char*, int) &rArr; delay(unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor::getTemp()
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor::getHumi()
</UL>

<P><STRONG><a name="[2ff]"></a>writeCmd(unsigned char)</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, sensor.o(i._Z8writeCmdh))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = writeCmd(unsigned char) &rArr; writeData(unsigned char) &rArr; delay(unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[300]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeData(unsigned char)
<LI><a href="#[2ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;startTransmit()
</UL>
<BR>[Called By]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor::trigTemp()
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor::trigHumi()
</UL>

<P><STRONG><a name="[300]"></a>writeData(unsigned char)</STRONG> (Thumb, 148 bytes, Stack size 24 bytes, sensor.o(i._Z9writeDatah))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = writeData(unsigned char) &rArr; delay(unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeCmd(unsigned char)
</UL>

<P><STRONG><a name="[ae]"></a>STM32F7DMA::initialize()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f7dma.o(i._ZN10STM32F7DMA10initializeEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
</UL>
<P><STRONG><a name="[ab]"></a>STM32F7DMA::getBlitCaps()</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f7dma.o(i._ZN10STM32F7DMA11getBlitCapsEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
</UL>
<P><STRONG><a name="[b4]"></a>STM32F7DMA::setupDataCopy(const touchgfx::BlitOp&)</STRONG> (Thumb, 494 bytes, Stack size 56 bytes, stm32f7dma.o(i._ZN10STM32F7DMA13setupDataCopyERKN8touchgfx6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = STM32F7DMA::setupDataCopy(const touchgfx::BlitOp&) &rArr; HAL_DMA2D_Start_IT &rArr; DMA2D_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Start_IT
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_DeInit
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_ConfigLayer
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_BlendingStart_IT
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::operator unsigned short() const
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCB_CleanInvalidateDCache()
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ(IRQn_Type)
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ(IRQn_Type)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
</UL>
<P><STRONG><a name="[b5]"></a>STM32F7DMA::setupDataFill(const touchgfx::BlitOp&)</STRONG> (Thumb, 312 bytes, Stack size 72 bytes, stm32f7dma.o(i._ZN10STM32F7DMA13setupDataFillERKN8touchgfx6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 136<LI>Call Chain = STM32F7DMA::setupDataFill(const touchgfx::BlitOp&) &rArr; HAL_DMA2D_Start_IT &rArr; DMA2D_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Start_IT
<LI><a href="#[299]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Init
<LI><a href="#[297]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_DeInit
<LI><a href="#[303]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_ConfigLayer
<LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::operator unsigned short() const
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCB_CleanInvalidateDCache()
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ(IRQn_Type)
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ(IRQn_Type)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
</UL>
<P><STRONG><a name="[b9]"></a>STM32F7DMA::setupFillWithAlpha(const touchgfx::BlitOp&)</STRONG> (Thumb, 400 bytes, Stack size 64 bytes, stm32f7dma.o(i._ZN10STM32F7DMA18setupFillWithAlphaERKN8touchgfx6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = STM32F7DMA::setupFillWithAlpha(const touchgfx::BlitOp&) &rArr; SCB_CleanInvalidateDCache()
</UL>
<BR>[Calls]<UL><LI><a href="#[302]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::operator unsigned short() const
<LI><a href="#[305]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCB_CleanInvalidateDCache()
<LI><a href="#[301]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ(IRQn_Type)
<LI><a href="#[304]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ(IRQn_Type)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
</UL>
<P><STRONG><a name="[b0]"></a>STM32F7DMA::signalDMAInterrupt()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, stm32f7dma.o(i._ZN10STM32F7DMA18signalDMAInterruptEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = STM32F7DMA::signalDMAInterrupt()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
</UL>
<P><STRONG><a name="[306]"></a>STM32F7DMA::STM32F7DMA()</STRONG> (Thumb, 88 bytes, Stack size 8 bytes, stm32f7dma.o(i._ZN10STM32F7DMAC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = STM32F7DMA::STM32F7DMA() &rArr; __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Calls]<UL><LI><a href="#[307]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue(touchgfx::BlitOp*, unsigned long)
<LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[233]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___22_BoardConfiguration_cpp_dceb80ee
</UL>

<P><STRONG><a name="[4fd]"></a>STM32F7DMA::STM32F7DMA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, stm32f7dma.o(i._ZN10STM32F7DMAC1Ev), UNUSED)

<P><STRONG><a name="[8d]"></a>STM32F7DMA::~STM32F7DMA()</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, stm32f7dma.o(i._ZN10STM32F7DMAD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> boardconfiguration.o(i.__sti___22_BoardConfiguration_cpp_dceb80ee)
<LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
</UL>
<P><STRONG><a name="[4fe]"></a>STM32F7DMA::~STM32F7DMA__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f7dma.o(i._ZN10STM32F7DMAD1Ev), UNUSED)

<P><STRONG><a name="[cb]"></a>STM32F7HAL::enableInterrupts()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f7hal.o(i._ZN10STM32F7HAL16enableInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = STM32F7HAL::enableInterrupts()
</UL>
<BR>[Calls]<UL><LI><a href="#[309]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_EnableIRQ(IRQn_Type)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
</UL>
<P><STRONG><a name="[bb]"></a>STM32F7HAL::flushFrameBuffer(const touchgfx::Rect&)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, stm32f7hal.o(i._ZN10STM32F7HAL16flushFrameBufferERKN8touchgfx4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = STM32F7HAL::flushFrameBuffer(const touchgfx::Rect&) &rArr; SCB_CleanInvalidateDCache()
</UL>
<BR>[Calls]<UL><LI><a href="#[1db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::flushFrameBuffer(const touchgfx::Rect&)
<LI><a href="#[290]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCB_CleanInvalidateDCache()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
</UL>
<P><STRONG><a name="[cc]"></a>STM32F7HAL::disableInterrupts()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, stm32f7hal.o(i._ZN10STM32F7HAL17disableInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = STM32F7HAL::disableInterrupts()
</UL>
<BR>[Calls]<UL><LI><a href="#[30a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_DisableIRQ(IRQn_Type)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
</UL>
<P><STRONG><a name="[d0]"></a>STM32F7HAL::getTFTCurrentLine()</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, stm32f7hal.o(i._ZN10STM32F7HAL17getTFTCurrentLineEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
</UL>
<P><STRONG><a name="[d5]"></a>STM32F7HAL::setTFTFrameBuffer(unsigned short*)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f7hal.o(i._ZN10STM32F7HAL17setTFTFrameBufferEPt))
<BR>[Address Reference Count : 1]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
</UL>
<P><STRONG><a name="[ca]"></a>STM32F7HAL::configureInterrupts()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, stm32f7hal.o(i._ZN10STM32F7HAL19configureInterruptsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = STM32F7HAL::configureInterrupts() &rArr; NVIC_SetPriority(IRQn_Type, unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[30b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;NVIC_SetPriority(IRQn_Type, unsigned)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
</UL>
<P><STRONG><a name="[cd]"></a>STM32F7HAL::enableLCDControllerInterrupt()</STRONG> (Thumb, 50 bytes, Stack size 0 bytes, stm32f7hal.o(i._ZN10STM32F7HAL28enableLCDControllerInterruptEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
</UL>
<P><STRONG><a name="[99]"></a>STM32F7HAL::~STM32F7HAL()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, stm32f7hal.o(i._ZN10STM32F7HALD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> boardconfiguration.o(t._ZN8touchgfx6getHALI10STM32F7HALEERNS_3HALERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEss)
</UL>
<P><STRONG><a name="[4ff]"></a>STM32F7HAL::~STM32F7HAL__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f7hal.o(i._ZN10STM32F7HALD1Ev), UNUSED)

<P><STRONG><a name="[db]"></a>Screen1View::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1view.o(i._ZN11Screen1View11setupScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
</UL>
<P><STRONG><a name="[e3]"></a>Screen1View::homeBtnClicked()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, screen1view.o(i._ZN11Screen1View14homeBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Screen1View::homeBtnClicked()
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
</UL>
<P><STRONG><a name="[dd]"></a>Screen1View::tearDownScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1view.o(i._ZN11Screen1View14tearDownScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
</UL>
<P><STRONG><a name="[30c]"></a>Screen1View::Screen1View()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, screen1view.o(i._ZN11Screen1ViewC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = Screen1View::Screen1View() &rArr; Screen1ViewBase::Screen1ViewBase() &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[500]"></a>Screen1View::Screen1View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screen1view.o(i._ZN11Screen1ViewC1Ev), UNUSED)

<P><STRONG><a name="[d9]"></a>Screen1View::~Screen1View()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, screen1view.o(i._ZN11Screen1ViewD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Screen1View::~Screen1View() &rArr; Screen1ViewBase::~Screen1ViewBase()
</UL>
<BR>[Calls]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.constdata__ZTV11Screen1View)
</UL>
<P><STRONG><a name="[501]"></a>Screen1View::~Screen1View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, screen1view.o(i._ZN11Screen1ViewD1Ev), UNUSED)

<P><STRONG><a name="[30e]"></a>FrontendHeap::FrontendHeap()</STRONG> (Thumb, 160 bytes, Stack size 16 bytes, boardconfiguration.o(i._ZN12FrontendHeapC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = FrontendHeap::FrontendHeap() &rArr; FrontendApplication::FrontendApplication(Model&, FrontendHeap&) &rArr; FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&) &rArr; touchgfx::Application::Application() &rArr; touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector() &rArr; __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Calls]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::FrontendApplication(Model&, FrontendHeap&)
<LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::Model()
<LI><a href="#[30f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::AbstractPartition__sub_object()
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeapBase::gotoStartScreen(FrontendApplication&)
</UL>
<BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[502]"></a>FrontendHeap::FrontendHeap__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, boardconfiguration.o(i._ZN12FrontendHeapC1Ev), UNUSED)

<P><STRONG><a name="[97]"></a>FrontendHeap::~FrontendHeap()</STRONG> (Thumb, 110 bytes, Stack size 16 bytes, boardconfiguration.o(i._ZN12FrontendHeapD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = FrontendHeap::~FrontendHeap() &rArr; touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
</UL>
<BR>[Calls]<UL><LI><a href="#[11d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::~FrontendApplicationBase()
<LI><a href="#[312]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor::~sensor()
<LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;tempHumiSettingsScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
<LI><a href="#[f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeapBase::~FrontendHeapBase()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> boardconfiguration.o(t._ZN8touchgfx21touchgfx_generic_initI10STM32F7HALEERNS_3HALERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEssPtjj)
<LI> boardconfiguration.o(.constdata__ZTV12FrontendHeap)
</UL>
<P><STRONG><a name="[503]"></a>FrontendHeap::~FrontendHeap__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, boardconfiguration.o(i._ZN12FrontendHeapD1Ev), UNUSED)

<P><STRONG><a name="[e7]"></a>ModelListener::dateChanged(int, int, int, int, int)</STRONG> (Thumb, 8 bytes, Stack size 12 bytes, datetimesettingsscreenpresenter.o(i._ZN13ModelListener11dateChangedEiiiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = ModelListener::dateChanged(int, int, int, int, int)
</UL>
<BR>[Address Reference Count : 7]<UL><LI> datetimesettingsscreenpresenter.o(.constdata__ZTV31dateTimeSettingsScreenPresenter)
<LI> daynightsettingsscreenpresenter.o(.constdata__ZTV31dayNightSettingsScreenPresenter)
<LI> opconfigsettingsscreenpresenter.o(.constdata__ZTV31opConfigSettingsScreenPresenter)
<LI> screen1presenter.o(.constdata__ZTV16Screen1Presenter)
<LI> settingsscreenpresenter.o(.constdata__ZTV23settingsScreenPresenter)
<LI> datetimesettingsscreenpresenter.o(.constdata__ZTV13ModelListener)
<LI> temphumisettingsscreenpresenter.o(.constdata__ZTV31tempHumiSettingsScreenPresenter)
</UL>
<P><STRONG><a name="[e6]"></a>ModelListener::humidityChanged(int)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenpresenter.o(i._ZN13ModelListener15humidityChangedEi))
<BR>[Address Reference Count : 7]<UL><LI> datetimesettingsscreenpresenter.o(.constdata__ZTV31dateTimeSettingsScreenPresenter)
<LI> daynightsettingsscreenpresenter.o(.constdata__ZTV31dayNightSettingsScreenPresenter)
<LI> opconfigsettingsscreenpresenter.o(.constdata__ZTV31opConfigSettingsScreenPresenter)
<LI> screen1presenter.o(.constdata__ZTV16Screen1Presenter)
<LI> settingsscreenpresenter.o(.constdata__ZTV23settingsScreenPresenter)
<LI> datetimesettingsscreenpresenter.o(.constdata__ZTV13ModelListener)
<LI> temphumisettingsscreenpresenter.o(.constdata__ZTV31tempHumiSettingsScreenPresenter)
</UL>
<P><STRONG><a name="[ea]"></a>ModelListener::heatOpStateChanged(bool)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenpresenter.o(i._ZN13ModelListener18heatOpStateChangedEb))
<BR>[Address Reference Count : 7]<UL><LI> datetimesettingsscreenpresenter.o(.constdata__ZTV31dateTimeSettingsScreenPresenter)
<LI> daynightsettingsscreenpresenter.o(.constdata__ZTV31dayNightSettingsScreenPresenter)
<LI> opconfigsettingsscreenpresenter.o(.constdata__ZTV31opConfigSettingsScreenPresenter)
<LI> screen1presenter.o(.constdata__ZTV16Screen1Presenter)
<LI> settingsscreenpresenter.o(.constdata__ZTV23settingsScreenPresenter)
<LI> datetimesettingsscreenpresenter.o(.constdata__ZTV13ModelListener)
<LI> temphumisettingsscreenpresenter.o(.constdata__ZTV31tempHumiSettingsScreenPresenter)
</UL>
<P><STRONG><a name="[e9]"></a>ModelListener::humiOpStateChanged(bool)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenpresenter.o(i._ZN13ModelListener18humiOpStateChangedEb))
<BR>[Address Reference Count : 7]<UL><LI> datetimesettingsscreenpresenter.o(.constdata__ZTV31dateTimeSettingsScreenPresenter)
<LI> daynightsettingsscreenpresenter.o(.constdata__ZTV31dayNightSettingsScreenPresenter)
<LI> opconfigsettingsscreenpresenter.o(.constdata__ZTV31opConfigSettingsScreenPresenter)
<LI> screen1presenter.o(.constdata__ZTV16Screen1Presenter)
<LI> settingsscreenpresenter.o(.constdata__ZTV23settingsScreenPresenter)
<LI> datetimesettingsscreenpresenter.o(.constdata__ZTV13ModelListener)
<LI> temphumisettingsscreenpresenter.o(.constdata__ZTV31tempHumiSettingsScreenPresenter)
</UL>
<P><STRONG><a name="[e5]"></a>ModelListener::temperatureChanged(int)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenpresenter.o(i._ZN13ModelListener18temperatureChangedEi))
<BR>[Address Reference Count : 7]<UL><LI> datetimesettingsscreenpresenter.o(.constdata__ZTV31dateTimeSettingsScreenPresenter)
<LI> daynightsettingsscreenpresenter.o(.constdata__ZTV31dayNightSettingsScreenPresenter)
<LI> opconfigsettingsscreenpresenter.o(.constdata__ZTV31opConfigSettingsScreenPresenter)
<LI> screen1presenter.o(.constdata__ZTV16Screen1Presenter)
<LI> settingsscreenpresenter.o(.constdata__ZTV23settingsScreenPresenter)
<LI> datetimesettingsscreenpresenter.o(.constdata__ZTV13ModelListener)
<LI> temphumisettingsscreenpresenter.o(.constdata__ZTV31tempHumiSettingsScreenPresenter)
</UL>
<P><STRONG><a name="[e8]"></a>ModelListener::lightOpStateChanged(bool)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenpresenter.o(i._ZN13ModelListener19lightOpStateChangedEb))
<BR>[Address Reference Count : 7]<UL><LI> datetimesettingsscreenpresenter.o(.constdata__ZTV31dateTimeSettingsScreenPresenter)
<LI> daynightsettingsscreenpresenter.o(.constdata__ZTV31dayNightSettingsScreenPresenter)
<LI> opconfigsettingsscreenpresenter.o(.constdata__ZTV31opConfigSettingsScreenPresenter)
<LI> screen1presenter.o(.constdata__ZTV16Screen1Presenter)
<LI> settingsscreenpresenter.o(.constdata__ZTV23settingsScreenPresenter)
<LI> datetimesettingsscreenpresenter.o(.constdata__ZTV13ModelListener)
<LI> temphumisettingsscreenpresenter.o(.constdata__ZTV31tempHumiSettingsScreenPresenter)
</UL>
<P><STRONG><a name="[4a3]"></a>ModelListener::bind(Model*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN13ModelListener4bindEP5Model))
<BR><BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;tempHumiSettingsScreenView, tempHumiSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;opConfigSettingsScreenView, opConfigSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;dayNightSettingsScreenView, dayNightSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;dateTimeSettingsScreenView, dateTimeSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[4b9]"></a>BitmapDatabase::getInstance()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bitmapdatabase.o(i._ZN14BitmapDatabase11getInstanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[4b8]"></a>BitmapDatabase::getInstanceSize()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, bitmapdatabase.o(i._ZN14BitmapDatabase15getInstanceSizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[313]"></a>mainScreenView::setHumidity(int)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, mainscreenview.o(i._ZN14mainScreenView11setHumidityEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = mainScreenView::setHumidity(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::humidityChanged(int)
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setupScreen()
</UL>

<P><STRONG><a name="[ec]"></a>mainScreenView::setupScreen()</STRONG> (Thumb, 188 bytes, Stack size 40 bytes, mainscreenview.o(i._ZN14mainScreenView11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = mainScreenView::setupScreen() &rArr; mainScreenView::setDate(int, int, int, int, int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setDate(int, int, int, int, int)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setTemperature(int)
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setHumidity(int)
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::getMonth()
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::getYear()
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::getHour()
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::getMin()
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::getDay()
<LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::getManualOverrideState()
<LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::getLightOpState()
<LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::getTemperature()
<LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::getHumiOpState()
<LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::getHeatOpState()
<LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::getHumidity()
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::forceState(bool)
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::getState() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenview.o(.constdata__ZTV14mainScreenView)
</UL>
<P><STRONG><a name="[322]"></a>mainScreenView::setTemperature(int)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, mainscreenview.o(i._ZN14mainScreenView14setTemperatureEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = mainScreenView::setTemperature(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::temperatureChanged(int)
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setupScreen()
</UL>

<P><STRONG><a name="[ed]"></a>mainScreenView::tearDownScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mainscreenview.o(i._ZN14mainScreenView14tearDownScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> mainscreenview.o(.constdata__ZTV14mainScreenView)
</UL>
<P><STRONG><a name="[f0]"></a>mainScreenView::lightOpBtnClicked()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, mainscreenview.o(i._ZN14mainScreenView17lightOpBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = mainScreenView::lightOpBtnClicked() &rArr; mainScreenPresenter::changeLightOpState(bool) &rArr; Model::changeLightOpState(bool) &rArr; actuator::setState(bool) &rArr; opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::changeLightOpState(bool)
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::getState() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenview.o(.constdata__ZTV14mainScreenView)
</UL>
<P><STRONG><a name="[325]"></a>mainScreenView::setHumiOpBtnState(bool)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, mainscreenview.o(i._ZN14mainScreenView17setHumiOpBtnStateEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mainScreenView::setHumiOpBtnState(bool) &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::forceState(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::humiOpStateChanged(bool)
</UL>

<P><STRONG><a name="[f1]"></a>mainScreenView::heaterOpBtnClicked()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, mainscreenview.o(i._ZN14mainScreenView18heaterOpBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = mainScreenView::heaterOpBtnClicked() &rArr; mainScreenPresenter::changeHeatOpState(bool) &rArr; Model::changeHeatOpState(bool) &rArr; actuator::setState(bool) &rArr; opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::changeHeatOpState(bool)
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::getState() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenview.o(.constdata__ZTV14mainScreenView)
</UL>
<P><STRONG><a name="[327]"></a>mainScreenView::setLightOpBtnState(bool)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, mainscreenview.o(i._ZN14mainScreenView18setLightOpBtnStateEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mainScreenView::setLightOpBtnState(bool) &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::forceState(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::lightOpStateChanged(bool)
</UL>

<P><STRONG><a name="[f2]"></a>mainScreenView::mainPowerBtnClicked()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, mainscreenview.o(i._ZN14mainScreenView19mainPowerBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mainScreenView::mainPowerBtnClicked()
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenview.o(.constdata__ZTV14mainScreenView)
</UL>
<P><STRONG><a name="[328]"></a>mainScreenView::setHeaterOpBtnState(bool)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, mainscreenview.o(i._ZN14mainScreenView19setHeaterOpBtnStateEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mainScreenView::setHeaterOpBtnState(bool) &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::forceState(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::heatOpStateChanged(bool)
</UL>

<P><STRONG><a name="[ef]"></a>mainScreenView::humidifierOpBtnClicked()</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, mainscreenview.o(i._ZN14mainScreenView22humidifierOpBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = mainScreenView::humidifierOpBtnClicked() &rArr; mainScreenPresenter::changeHumiOpState(bool) &rArr; Model::changeHumiOpState(bool) &rArr; actuator::setState(bool) &rArr; opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::changeHumiOpState(bool)
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::getState() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenview.o(.constdata__ZTV14mainScreenView)
</UL>
<P><STRONG><a name="[ee]"></a>mainScreenView::manualOverrideBtnClicked()</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, mainscreenview.o(i._ZN14mainScreenView24manualOverrideBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mainScreenView::manualOverrideBtnClicked() &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::changeManualOverrideState(bool)
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::getState() const
<LI><a href="#[32b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setTouchable(bool)
<LI><a href="#[32a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setAlpha(unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenview.o(.constdata__ZTV14mainScreenView)
</UL>
<P><STRONG><a name="[320]"></a>mainScreenView::setDate(int, int, int, int, int)</STRONG> (Thumb, 46 bytes, Stack size 48 bytes, mainscreenview.o(i._ZN14mainScreenView7setDateEiiiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = mainScreenView::setDate(int, int, int, int, int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[117]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thunk{-4} to mainScreenPresenter::dateChanged(int, int, int, int, int)
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setupScreen()
</UL>

<P><STRONG><a name="[32d]"></a>mainScreenView::mainScreenView()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, mainscreenview.o(i._ZN14mainScreenViewC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = mainScreenView::mainScreenView() &rArr; mainScreenViewBase::mainScreenViewBase() &rArr; touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::mainScreenViewBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[504]"></a>mainScreenView::mainScreenView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, mainscreenview.o(i._ZN14mainScreenViewC1Ev), UNUSED)

<P><STRONG><a name="[eb]"></a>mainScreenView::~mainScreenView()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, mainscreenview.o(i._ZN14mainScreenViewD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = mainScreenView::~mainScreenView() &rArr; mainScreenViewBase::~mainScreenViewBase() &rArr; touchgfx::ButtonWithIcon::~ButtonWithIcon() &rArr; touchgfx::Button::~Button()
</UL>
<BR>[Calls]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::~mainScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenview.o(.constdata__ZTV14mainScreenView)
</UL>
<P><STRONG><a name="[505]"></a>mainScreenView::~mainScreenView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, mainscreenview.o(i._ZN14mainScreenViewD1Ev), UNUSED)

<P><STRONG><a name="[f6]"></a>Screen1ViewBase::homeBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1view.o(i._ZN15Screen1ViewBase14homeBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.constdata__ZTV15Screen1ViewBase)
</UL>
<P><STRONG><a name="[a7]"></a>Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, screen1viewbase.o(i._ZN15Screen1ViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&) &rArr; FrontendApplicationBase::gotomainScreenScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotomainScreenScreenNoTransition()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata)
</UL>
<P><STRONG><a name="[30d]"></a>Screen1ViewBase::Screen1ViewBase()</STRONG> (Thumb, 162 bytes, Stack size 32 bytes, screen1viewbase.o(i._ZN15Screen1ViewBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = Screen1ViewBase::Screen1ViewBase() &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap(unsigned short)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::Button()
</UL>
<BR>[Called By]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1View()
</UL>

<P><STRONG><a name="[506]"></a>Screen1ViewBase::Screen1ViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, screen1viewbase.o(i._ZN15Screen1ViewBaseC1Ev), UNUSED)

<P><STRONG><a name="[f3]"></a>Screen1ViewBase::~Screen1ViewBase()</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, screen1viewbase.o(i._ZN15Screen1ViewBaseD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Screen1ViewBase::~Screen1ViewBase()
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
<LI><a href="#[1fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;Screen1ViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback()
<LI><a href="#[1dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;Screen1Presenter&rang;::~View()
</UL>
<BR>[Called By]<UL><LI><a href="#[d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::~Screen1View()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1view.o(.constdata__ZTV15Screen1ViewBase)
</UL>
<P><STRONG><a name="[507]"></a>Screen1ViewBase::~Screen1ViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, screen1viewbase.o(i._ZN15Screen1ViewBaseD1Ev), UNUSED)

<P><STRONG><a name="[e4]"></a>FrontendHeapBase::gotoStartScreen(FrontendApplication&)</STRONG> (Thumb, 14 bytes, Stack size 16 bytes, boardconfiguration.o(i._ZN16FrontendHeapBase15gotoStartScreenER19FrontendApplication))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = FrontendHeapBase::gotoStartScreen(FrontendApplication&) &rArr; FrontendApplicationBase::gotomainScreenScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotomainScreenScreenNoTransition()
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> boardconfiguration.o(.constdata__ZTV16FrontendHeapBase)
<LI> boardconfiguration.o(.constdata__ZTV12FrontendHeap)
</UL>
<P><STRONG><a name="[f7]"></a>FrontendHeapBase::~FrontendHeapBase()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, boardconfiguration.o(i._ZN16FrontendHeapBaseD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boardconfiguration.o(.constdata__ZTV16FrontendHeapBase)
</UL>
<P><STRONG><a name="[508]"></a>FrontendHeapBase::~FrontendHeapBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boardconfiguration.o(i._ZN16FrontendHeapBaseD1Ev), UNUSED)

<P><STRONG><a name="[f9]"></a>Screen1Presenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1Presenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.constdata__ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[f8]"></a>Screen1Presenter::activate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1Presenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.constdata__ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[4a1]"></a>Screen1Presenter::Screen1Presenter(Screen1View&)</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1PresenterC1ER11Screen1View))
<BR><BR>[Called By]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[509]"></a>Screen1Presenter::Screen1Presenter__sub_object(Screen1View&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1PresenterC1ER11Screen1View), UNUSED)

<P><STRONG><a name="[fa]"></a>Screen1Presenter::~Screen1Presenter()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1PresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> screen1presenter.o(.constdata__ZTV16Screen1Presenter)
</UL>
<P><STRONG><a name="[50a]"></a>Screen1Presenter::~Screen1Presenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen1presenter.o(i._ZN16Screen1PresenterD1Ev), UNUSED)

<P><STRONG><a name="[436]"></a>TypedTextDatabase::getInstance(unsigned short)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, typedtextdatabase.o(i._ZN17TypedTextDatabase11getInstanceEt))
<BR><BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
</UL>

<P><STRONG><a name="[438]"></a>TypedTextDatabase::getInstanceSize()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, typedtextdatabase.o(i._ZN17TypedTextDatabase15getInstanceSizeEv))
<BR><BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
</UL>

<P><STRONG><a name="[437]"></a>TypedTextDatabase::getFonts()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, typedtextdatabase.o(i._ZN17TypedTextDatabase8getFontsEv))
<BR><BR>[Called By]<UL><LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
</UL>

<P><STRONG><a name="[fe]"></a>mainScreenViewBase::lightOpBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mainscreenview.o(i._ZN18mainScreenViewBase17lightOpBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
</UL>
<P><STRONG><a name="[ff]"></a>mainScreenViewBase::heaterOpBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mainscreenview.o(i._ZN18mainScreenViewBase18heaterOpBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
</UL>
<P><STRONG><a name="[100]"></a>mainScreenViewBase::mainPowerBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mainscreenview.o(i._ZN18mainScreenViewBase19mainPowerBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
</UL>
<P><STRONG><a name="[a5]"></a>mainScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, mainscreenviewbase.o(i._ZN18mainScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = mainScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&) &rArr; FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionEast() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionEast()
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransition()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenviewbase.o(.constdata)
</UL>
<P><STRONG><a name="[fd]"></a>mainScreenViewBase::humidifierOpBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mainscreenview.o(i._ZN18mainScreenViewBase22humidifierOpBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
</UL>
<P><STRONG><a name="[fc]"></a>mainScreenViewBase::manualOverrideBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mainscreenview.o(i._ZN18mainScreenViewBase24manualOverrideBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
</UL>
<P><STRONG><a name="[32e]"></a>mainScreenViewBase::mainScreenViewBase()</STRONG> (Thumb, 1876 bytes, Stack size 56 bytes, mainscreenviewbase.o(i._ZN18mainScreenViewBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = mainScreenViewBase::mainScreenViewBase() &rArr; touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(touchgfx::TypedText)
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFrom24BitRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::ButtonWithIcon()
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::TypedText(unsigned short)
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setColor(touchgfx::colortype)
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setAlpha(unsigned char)
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setLinespacing(unsigned short)
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap(unsigned short)
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard()
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard(const unsigned short*)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::setIconXY(short, short)
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractButton::setAction(touchgfx::GenericCallback&lang;const touchgfx::AbstractButton&, void&rang;&)
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::ToggleButton()
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::mainScreenView()
</UL>

<P><STRONG><a name="[50b]"></a>mainScreenViewBase::mainScreenViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, mainscreenviewbase.o(i._ZN18mainScreenViewBaseC1Ev), UNUSED)

<P><STRONG><a name="[fb]"></a>mainScreenViewBase::~mainScreenViewBase()</STRONG> (Thumb, 238 bytes, Stack size 16 bytes, mainscreenviewbase.o(i._ZN18mainScreenViewBaseD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = mainScreenViewBase::~mainScreenViewBase() &rArr; touchgfx::ButtonWithIcon::~ButtonWithIcon() &rArr; touchgfx::Button::~Button()
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea()
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::~ButtonWithIcon()
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::~ToggleButton()
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard()
<LI><a href="#[201]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;mainScreenViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback()
<LI><a href="#[1de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;mainScreenPresenter&rang;::~View()
</UL>
<BR>[Called By]<UL><LI><a href="#[eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::~mainScreenView()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
</UL>
<P><STRONG><a name="[50c]"></a>mainScreenViewBase::~mainScreenViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, mainscreenviewbase.o(i._ZN18mainScreenViewBaseD1Ev), UNUSED)

<P><STRONG><a name="[102]"></a>settingsScreenView::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, settingsscreenview.o(i._ZN18settingsScreenView11setupScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> settingsscreenview.o(.constdata__ZTV18settingsScreenView)
</UL>
<P><STRONG><a name="[103]"></a>settingsScreenView::tearDownScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, settingsscreenview.o(i._ZN18settingsScreenView14tearDownScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> settingsscreenview.o(.constdata__ZTV18settingsScreenView)
</UL>
<P><STRONG><a name="[345]"></a>settingsScreenView::settingsScreenView()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, settingsscreenview.o(i._ZN18settingsScreenViewC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = settingsScreenView::settingsScreenView() &rArr; settingsScreenViewBase::settingsScreenViewBase() &rArr; touchgfx::ButtonWithLabel::setLabelText(touchgfx::TypedText) &rArr; touchgfx::ButtonWithLabel::updateTextPosition() &rArr; touchgfx::TypedText::assertValid() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::settingsScreenViewBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[50d]"></a>settingsScreenView::settingsScreenView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, settingsscreenview.o(i._ZN18settingsScreenViewC1Ev), UNUSED)

<P><STRONG><a name="[101]"></a>settingsScreenView::~settingsScreenView()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, settingsscreenview.o(i._ZN18settingsScreenViewD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = settingsScreenView::~settingsScreenView() &rArr; settingsScreenViewBase::~settingsScreenViewBase() &rArr; touchgfx::ButtonWithLabel::~ButtonWithLabel() &rArr; touchgfx::Button::~Button()
</UL>
<BR>[Calls]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::~settingsScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsscreenview.o(.constdata__ZTV18settingsScreenView)
</UL>
<P><STRONG><a name="[50e]"></a>settingsScreenView::~settingsScreenView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, settingsscreenview.o(i._ZN18settingsScreenViewD1Ev), UNUSED)

<P><STRONG><a name="[108]"></a>FrontendApplication::handleTickEvent()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, frontendapplication.o(i._ZN19FrontendApplication15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 128<LI>Call Chain = FrontendApplication::handleTickEvent() &rArr; Model::tick() &rArr; Model::humiAction() &rArr; sensor::getHumi() &rArr; readData(unsigned char*, int) &rArr; delay(unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[11c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::handleTickEvent()
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::tick()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
</UL>
<P><STRONG><a name="[310]"></a>FrontendApplication::FrontendApplication(Model&, FrontendHeap&)</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, frontendapplication.o(i._ZN19FrontendApplicationC1ER5ModelR12FrontendHeap))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = FrontendApplication::FrontendApplication(Model&, FrontendHeap&) &rArr; FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&) &rArr; touchgfx::Application::Application() &rArr; touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector() &rArr; __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Calls]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
</UL>

<P><STRONG><a name="[50f]"></a>FrontendApplication::FrontendApplication__sub_object(Model&, FrontendHeap&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, frontendapplication.o(i._ZN19FrontendApplicationC1ER5ModelR12FrontendHeap), UNUSED)

<P><STRONG><a name="[10e]"></a>mainScreenPresenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mainscreenpresenter.o(i._ZN19mainScreenPresenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
</UL>
<P><STRONG><a name="[323]"></a>mainScreenPresenter::getHumidity()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, mainscreenpresenter.o(i._ZN19mainScreenPresenter11getHumidityEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mainScreenPresenter::getHumidity()
</UL>
<BR>[Calls]<UL><LI><a href="#[349]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getHumidity()
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setupScreen()
</UL>

<P><STRONG><a name="[318]"></a>mainScreenPresenter::getHeatOpState()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, mainscreenpresenter.o(i._ZN19mainScreenPresenter14getHeatOpStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mainScreenPresenter::getHeatOpState() &rArr; Model::getHeatOpState() &rArr; actuator::getState() &rArr; opSocket::getOpState()
</UL>
<BR>[Calls]<UL><LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getHeatOpState()
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setupScreen()
</UL>

<P><STRONG><a name="[315]"></a>mainScreenPresenter::getHumiOpState()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, mainscreenpresenter.o(i._ZN19mainScreenPresenter14getHumiOpStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mainScreenPresenter::getHumiOpState() &rArr; Model::getHumiOpState() &rArr; actuator::getState() &rArr; opSocket::getOpState()
</UL>
<BR>[Calls]<UL><LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getHumiOpState()
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setupScreen()
</UL>

<P><STRONG><a name="[321]"></a>mainScreenPresenter::getTemperature()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, mainscreenpresenter.o(i._ZN19mainScreenPresenter14getTemperatureEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mainScreenPresenter::getTemperature()
</UL>
<BR>[Calls]<UL><LI><a href="#[34c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getTemperature()
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setupScreen()
</UL>

<P><STRONG><a name="[317]"></a>mainScreenPresenter::getLightOpState()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, mainscreenpresenter.o(i._ZN19mainScreenPresenter15getLightOpStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = mainScreenPresenter::getLightOpState() &rArr; Model::getLightOpState() &rArr; actuator::getState() &rArr; opSocket::getOpState()
</UL>
<BR>[Calls]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getLightOpState()
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setupScreen()
</UL>

<P><STRONG><a name="[111]"></a>mainScreenPresenter::humidityChanged(int)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, mainscreenpresenter.o(i._ZN19mainScreenPresenter15humidityChangedEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = mainScreenPresenter::humidityChanged(int) &rArr; mainScreenView::setHumidity(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setHumidity(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[116]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thunk{-4} to mainScreenPresenter::humidityChanged(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
</UL>
<P><STRONG><a name="[326]"></a>mainScreenPresenter::changeHeatOpState(bool)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, mainscreenpresenter.o(i._ZN19mainScreenPresenter17changeHeatOpStateEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = mainScreenPresenter::changeHeatOpState(bool) &rArr; Model::changeHeatOpState(bool) &rArr; actuator::setState(bool) &rArr; opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeHeatOpState(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::heaterOpBtnClicked()
</UL>

<P><STRONG><a name="[329]"></a>mainScreenPresenter::changeHumiOpState(bool)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, mainscreenpresenter.o(i._ZN19mainScreenPresenter17changeHumiOpStateEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = mainScreenPresenter::changeHumiOpState(bool) &rArr; Model::changeHumiOpState(bool) &rArr; actuator::setState(bool) &rArr; opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeHumiOpState(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::humidifierOpBtnClicked()
</UL>

<P><STRONG><a name="[324]"></a>mainScreenPresenter::changeLightOpState(bool)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, mainscreenpresenter.o(i._ZN19mainScreenPresenter18changeLightOpStateEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = mainScreenPresenter::changeLightOpState(bool) &rArr; Model::changeLightOpState(bool) &rArr; actuator::setState(bool) &rArr; opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeLightOpState(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::lightOpBtnClicked()
</UL>

<P><STRONG><a name="[114]"></a>mainScreenPresenter::heatOpStateChanged(bool)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, mainscreenpresenter.o(i._ZN19mainScreenPresenter18heatOpStateChangedEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = mainScreenPresenter::heatOpStateChanged(bool) &rArr; mainScreenView::setHeaterOpBtnState(bool) &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setHeaterOpBtnState(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[11a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thunk{-4} to mainScreenPresenter::heatOpStateChanged(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
</UL>
<P><STRONG><a name="[113]"></a>mainScreenPresenter::humiOpStateChanged(bool)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, mainscreenpresenter.o(i._ZN19mainScreenPresenter18humiOpStateChangedEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = mainScreenPresenter::humiOpStateChanged(bool) &rArr; mainScreenView::setHumiOpBtnState(bool) &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setHumiOpBtnState(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[119]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thunk{-4} to mainScreenPresenter::humiOpStateChanged(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
</UL>
<P><STRONG><a name="[110]"></a>mainScreenPresenter::temperatureChanged(int)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, mainscreenpresenter.o(i._ZN19mainScreenPresenter18temperatureChangedEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = mainScreenPresenter::temperatureChanged(int) &rArr; mainScreenView::setTemperature(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setTemperature(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[115]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thunk{-4} to mainScreenPresenter::temperatureChanged(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
</UL>
<P><STRONG><a name="[112]"></a>mainScreenPresenter::lightOpStateChanged(bool)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, mainscreenpresenter.o(i._ZN19mainScreenPresenter19lightOpStateChangedEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = mainScreenPresenter::lightOpStateChanged(bool) &rArr; mainScreenView::setLightOpBtnState(bool) &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setLightOpBtnState(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[118]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;thunk{-4} to mainScreenPresenter::lightOpStateChanged(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
</UL>
<P><STRONG><a name="[319]"></a>mainScreenPresenter::getManualOverrideState()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, mainscreenpresenter.o(i._ZN19mainScreenPresenter22getManualOverrideStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mainScreenPresenter::getManualOverrideState()
</UL>
<BR>[Calls]<UL><LI><a href="#[351]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getManualOverrideState()
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setupScreen()
</UL>

<P><STRONG><a name="[32c]"></a>mainScreenPresenter::changeManualOverrideState(bool)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, mainscreenpresenter.o(i._ZN19mainScreenPresenter25changeManualOverrideStateEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = mainScreenPresenter::changeManualOverrideState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[352]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeManualOverrideState(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::manualOverrideBtnClicked()
</UL>

<P><STRONG><a name="[31d]"></a>mainScreenPresenter::getDay()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, mainscreenpresenter.o(i._ZN19mainScreenPresenter6getDayEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mainScreenPresenter::getDay()
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getDay()
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setupScreen()
</UL>

<P><STRONG><a name="[31b]"></a>mainScreenPresenter::getMin()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, mainscreenpresenter.o(i._ZN19mainScreenPresenter6getMinEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mainScreenPresenter::getMin()
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getMin()
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setupScreen()
</UL>

<P><STRONG><a name="[31c]"></a>mainScreenPresenter::getHour()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, mainscreenpresenter.o(i._ZN19mainScreenPresenter7getHourEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mainScreenPresenter::getHour()
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getHour()
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setupScreen()
</UL>

<P><STRONG><a name="[31f]"></a>mainScreenPresenter::getYear()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, mainscreenpresenter.o(i._ZN19mainScreenPresenter7getYearEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mainScreenPresenter::getYear()
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getYear()
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setupScreen()
</UL>

<P><STRONG><a name="[10d]"></a>mainScreenPresenter::activate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, mainscreenpresenter.o(i._ZN19mainScreenPresenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
</UL>
<P><STRONG><a name="[31e]"></a>mainScreenPresenter::getMonth()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, mainscreenpresenter.o(i._ZN19mainScreenPresenter8getMonthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = mainScreenPresenter::getMonth()
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getMonth()
</UL>
<BR>[Called By]<UL><LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setupScreen()
</UL>

<P><STRONG><a name="[4a6]"></a>mainScreenPresenter::mainScreenPresenter(mainScreenView&)</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, mainscreenpresenter.o(i._ZN19mainScreenPresenterC1ER14mainScreenView))
<BR><BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[510]"></a>mainScreenPresenter::mainScreenPresenter__sub_object(mainScreenView&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, mainscreenpresenter.o(i._ZN19mainScreenPresenterC1ER14mainScreenView), UNUSED)

<P><STRONG><a name="[10f]"></a>mainScreenPresenter::~mainScreenPresenter()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, mainscreenpresenter.o(i._ZN19mainScreenPresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
</UL>
<P><STRONG><a name="[511]"></a>mainScreenPresenter::~mainScreenPresenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, mainscreenpresenter.o(i._ZN19mainScreenPresenterD1Ev), UNUSED)

<P><STRONG><a name="[358]"></a>settingsScreenViewBase::application()</STRONG> (Thumb, 10 bytes, Stack size 8 bytes, settingsscreenviewbase.o(i._ZN22settingsScreenViewBase11applicationEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = settingsScreenViewBase::application()
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
</UL>

<P><STRONG><a name="[a8]"></a>settingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, settingsscreenviewbase.o(i._ZN22settingsScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = settingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&) &rArr; FrontendApplicationBase::gotomainScreenScreenSlideTransitionWest() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotomainScreenScreenSlideTransitionWest()
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gototempHumiSettingsScreenScreenSlideTransitionEast()
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoopConfigSettingsScreenScreenSlideTransitionEast()
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotodayNightSettingsScreenScreenSlideTransitionEast()
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotodateTimeSettingsScreenScreenSlideTransitionEast()
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::application()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsscreenviewbase.o(.constdata)
</UL>
<P><STRONG><a name="[346]"></a>settingsScreenViewBase::settingsScreenViewBase()</STRONG> (Thumb, 954 bytes, Stack size 56 bytes, settingsscreenviewbase.o(i._ZN22settingsScreenViewBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = settingsScreenViewBase::settingsScreenViewBase() &rArr; touchgfx::ButtonWithLabel::setLabelText(touchgfx::TypedText) &rArr; touchgfx::ButtonWithLabel::updateTextPosition() &rArr; touchgfx::TypedText::assertValid() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFrom24BitRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::ButtonWithIcon()
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::TypedText(unsigned short)
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::Drawable__sub_object()
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap(unsigned short)
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractButton::setAction(touchgfx::GenericCallback&lang;const touchgfx::AbstractButton&, void&rang;&)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::ButtonWithLabel()
<LI><a href="#[362]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::setLabelColorPressed(touchgfx::colortype, bool)
<LI><a href="#[361]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::setLabelColor(touchgfx::colortype, bool)
<LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::setLabelText(touchgfx::TypedText)
</UL>
<BR>[Called By]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenView::settingsScreenView()
</UL>

<P><STRONG><a name="[512]"></a>settingsScreenViewBase::settingsScreenViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, settingsscreenviewbase.o(i._ZN22settingsScreenViewBaseC1Ev), UNUSED)

<P><STRONG><a name="[11b]"></a>settingsScreenViewBase::~settingsScreenViewBase()</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, settingsscreenviewbase.o(i._ZN22settingsScreenViewBaseD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = settingsScreenViewBase::~settingsScreenViewBase() &rArr; touchgfx::ButtonWithLabel::~ButtonWithLabel() &rArr; touchgfx::Button::~Button()
</UL>
<BR>[Calls]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::~ButtonWithLabel()
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::~Button()
<LI><a href="#[204]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;settingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback()
<LI><a href="#[1df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;settingsScreenPresenter&rang;::~View()
</UL>
<BR>[Called By]<UL><LI><a href="#[101]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenView::~settingsScreenView()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsscreenview.o(.constdata__ZTV22settingsScreenViewBase)
</UL>
<P><STRONG><a name="[513]"></a>settingsScreenViewBase::~settingsScreenViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, settingsscreenviewbase.o(i._ZN22settingsScreenViewBaseD1Ev), UNUSED)

<P><STRONG><a name="[8c]"></a>ApplicationFontProvider::~ApplicationFontProvider()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, applicationfontprovider.o(i._ZN23ApplicationFontProviderD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> applicationfontprovider.o(.constdata__ZTV23ApplicationFontProvider)
<LI> boardconfiguration.o(i.__sti___22_BoardConfiguration_cpp_dceb80ee)
</UL>
<P><STRONG><a name="[514]"></a>ApplicationFontProvider::~ApplicationFontProvider__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, applicationfontprovider.o(i._ZN23ApplicationFontProviderD1Ev), UNUSED)

<P><STRONG><a name="[335]"></a>FrontendApplicationBase::gotoScreen1ScreenNoTransition()</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase29gotoScreen1ScreenNoTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FrontendApplicationBase::gotoScreen1ScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;&)
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::~Callback()
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
</UL>

<P><STRONG><a name="[330]"></a>FrontendApplicationBase::gotomainScreenScreenNoTransition()</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase32gotomainScreenScreenNoTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FrontendApplicationBase::gotomainScreenScreenNoTransition() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;&)
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::~Callback()
</UL>
<BR>[Called By]<UL><LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
<LI><a href="#[e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeapBase::gotoStartScreen(FrontendApplication&)
</UL>

<P><STRONG><a name="[a4]"></a>FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase33gotoScreen1ScreenNoTransitionImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl() &rArr; T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; Screen1View::Screen1View() &rArr; Screen1ViewBase::Screen1ViewBase() &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[9c]"></a>FrontendApplicationBase::gotomainScreenScreenNoTransitionImpl()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase36gotomainScreenScreenNoTransitionImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gotomainScreenScreenNoTransitionImpl() &rArr; T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; mainScreenView::mainScreenView() &rArr; mainScreenViewBase::mainScreenViewBase() &rArr; touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[359]"></a>FrontendApplicationBase::gotomainScreenScreenSlideTransitionWest()</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase39gotomainScreenScreenSlideTransitionWestEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FrontendApplicationBase::gotomainScreenScreenSlideTransitionWest() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;&)
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::~Callback()
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
<LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
</UL>

<P><STRONG><a name="[9d]"></a>FrontendApplicationBase::gotomainScreenScreenSlideTransitionWestImpl()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase43gotomainScreenScreenSlideTransitionWestImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gotomainScreenScreenSlideTransitionWestImpl() &rArr; T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; mainScreenView::mainScreenView() &rArr; mainScreenViewBase::mainScreenViewBase() &rArr; touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[334]"></a>FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionEast()</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase43gotosettingsScreenScreenSlideTransitionEastEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionEast() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;&)
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::~Callback()
</UL>
<BR>[Called By]<UL><LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
</UL>

<P><STRONG><a name="[368]"></a>FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionWest()</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase43gotosettingsScreenScreenSlideTransitionWestEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionWest() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;&)
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::~Callback()
</UL>
<BR>[Called By]<UL><LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
</UL>

<P><STRONG><a name="[9e]"></a>FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionEastImpl()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase47gotosettingsScreenScreenSlideTransitionEastImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionEastImpl() &rArr; T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; settingsScreenView::settingsScreenView() &rArr; settingsScreenViewBase::settingsScreenViewBase() &rArr; touchgfx::ButtonWithLabel::setLabelText(touchgfx::TypedText) &rArr; touchgfx::ButtonWithLabel::updateTextPosition() &rArr; touchgfx::TypedText::assertValid() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[9f]"></a>FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionWestImpl()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase47gotosettingsScreenScreenSlideTransitionWestImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionWestImpl() &rArr; T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; settingsScreenView::settingsScreenView() &rArr; settingsScreenViewBase::settingsScreenViewBase() &rArr; touchgfx::ButtonWithLabel::setLabelText(touchgfx::TypedText) &rArr; touchgfx::ButtonWithLabel::updateTextPosition() &rArr; touchgfx::TypedText::assertValid() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[35c]"></a>FrontendApplicationBase::gotodateTimeSettingsScreenScreenSlideTransitionEast()</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase51gotodateTimeSettingsScreenScreenSlideTransitionEastEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FrontendApplicationBase::gotodateTimeSettingsScreenScreenSlideTransitionEast() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;&)
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::~Callback()
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
</UL>

<P><STRONG><a name="[35d]"></a>FrontendApplicationBase::gotodayNightSettingsScreenScreenSlideTransitionEast()</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase51gotodayNightSettingsScreenScreenSlideTransitionEastEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FrontendApplicationBase::gotodayNightSettingsScreenScreenSlideTransitionEast() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;&)
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::~Callback()
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
</UL>

<P><STRONG><a name="[35b]"></a>FrontendApplicationBase::gotoopConfigSettingsScreenScreenSlideTransitionEast()</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase51gotoopConfigSettingsScreenScreenSlideTransitionEastEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FrontendApplicationBase::gotoopConfigSettingsScreenScreenSlideTransitionEast() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;&)
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::~Callback()
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
</UL>

<P><STRONG><a name="[35a]"></a>FrontendApplicationBase::gototempHumiSettingsScreenScreenSlideTransitionEast()</STRONG> (Thumb, 46 bytes, Stack size 32 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase51gototempHumiSettingsScreenScreenSlideTransitionEastEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = FrontendApplicationBase::gototempHumiSettingsScreenScreenSlideTransitionEast() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
<LI><a href="#[364]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;&)
<LI><a href="#[207]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::~Callback()
</UL>
<BR>[Called By]<UL><LI><a href="#[a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
</UL>

<P><STRONG><a name="[a1]"></a>FrontendApplicationBase::gotodateTimeSettingsScreenScreenSlideTransitionEastImpl()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase55gotodateTimeSettingsScreenScreenSlideTransitionEastImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gotodateTimeSettingsScreenScreenSlideTransitionEastImpl() &rArr; T2* touchgfx::makeTransition&lang;dateTimeSettingsScreenView, dateTimeSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; dateTimeSettingsScreenView::dateTimeSettingsScreenView() &rArr; dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase() &rArr; touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;dateTimeSettingsScreenView, dateTimeSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[a2]"></a>FrontendApplicationBase::gotodayNightSettingsScreenScreenSlideTransitionEastImpl()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase55gotodayNightSettingsScreenScreenSlideTransitionEastImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 224 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gotodayNightSettingsScreenScreenSlideTransitionEastImpl() &rArr; T2* touchgfx::makeTransition&lang;dayNightSettingsScreenView, dayNightSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; dayNightSettingsScreenView::dayNightSettingsScreenView() &rArr; dayNightSettingsScreenViewBase::dayNightSettingsScreenViewBase() &rArr; touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;dayNightSettingsScreenView, dayNightSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[a3]"></a>FrontendApplicationBase::gotoopConfigSettingsScreenScreenSlideTransitionEastImpl()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase55gotoopConfigSettingsScreenScreenSlideTransitionEastImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gotoopConfigSettingsScreenScreenSlideTransitionEastImpl() &rArr; T2* touchgfx::makeTransition&lang;opConfigSettingsScreenView, opConfigSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; opConfigSettingsScreenView::opConfigSettingsScreenView() &rArr; opConfigSettingsScreenViewBase::opConfigSettingsScreenViewBase() &rArr; touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;opConfigSettingsScreenView, opConfigSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[a0]"></a>FrontendApplicationBase::gototempHumiSettingsScreenScreenSlideTransitionEastImpl()</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBase55gototempHumiSettingsScreenScreenSlideTransitionEastImplEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = FrontendApplicationBase::gototempHumiSettingsScreenScreenSlideTransitionEastImpl() &rArr; T2* touchgfx::makeTransition&lang;tempHumiSettingsScreenView, tempHumiSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; tempHumiSettingsScreenView::tempHumiSettingsScreenView() &rArr; tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase() &rArr; touchgfx::Slider::Slider() &rArr; touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;tempHumiSettingsScreenView, tempHumiSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata)
</UL>
<P><STRONG><a name="[348]"></a>FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&) &rArr; touchgfx::Application::Application() &rArr; touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector() &rArr; __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Calls]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
<LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GenericCallback&lang;void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[310]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::FrontendApplication(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[515]"></a>FrontendApplicationBase::FrontendApplicationBase__sub_object(Model&, FrontendHeap&)</STRONG> (Thumb, 0 bytes, Stack size 24 bytes, frontendapplicationbase.o(i._ZN23FrontendApplicationBaseC1ER5ModelR12FrontendHeap), UNUSED)

<P><STRONG><a name="[11d]"></a>FrontendApplicationBase::~FrontendApplicationBase()</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, frontendapplication.o(i._ZN23FrontendApplicationBaseD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplication.o(.constdata__ZTV23FrontendApplicationBase)
</UL>
<P><STRONG><a name="[516]"></a>FrontendApplicationBase::~FrontendApplicationBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frontendapplication.o(i._ZN23FrontendApplicationBaseD1Ev), UNUSED)

<P><STRONG><a name="[11f]"></a>settingsScreenPresenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, settingsscreenpresenter.o(i._ZN23settingsScreenPresenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> settingsscreenpresenter.o(.constdata__ZTV23settingsScreenPresenter)
</UL>
<P><STRONG><a name="[11e]"></a>settingsScreenPresenter::activate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, settingsscreenpresenter.o(i._ZN23settingsScreenPresenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> settingsscreenpresenter.o(.constdata__ZTV23settingsScreenPresenter)
</UL>
<P><STRONG><a name="[4ae]"></a>settingsScreenPresenter::settingsScreenPresenter(settingsScreenView&)</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, settingsscreenpresenter.o(i._ZN23settingsScreenPresenterC1ER18settingsScreenView))
<BR><BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[517]"></a>settingsScreenPresenter::settingsScreenPresenter__sub_object(settingsScreenView&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, settingsscreenpresenter.o(i._ZN23settingsScreenPresenterC1ER18settingsScreenView), UNUSED)

<P><STRONG><a name="[120]"></a>settingsScreenPresenter::~settingsScreenPresenter()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, settingsscreenpresenter.o(i._ZN23settingsScreenPresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> settingsscreenpresenter.o(.constdata__ZTV23settingsScreenPresenter)
</UL>
<P><STRONG><a name="[518]"></a>settingsScreenPresenter::~settingsScreenPresenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, settingsscreenpresenter.o(i._ZN23settingsScreenPresenterD1Ev), UNUSED)

<P><STRONG><a name="[122]"></a>dateTimeSettingsScreenView::setupScreen()</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = dateTimeSettingsScreenView::setupScreen() &rArr; dateTimeSettingsScreenView::setMonth(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setMonth(int)
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setYear(int)
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setHour(int)
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setMin(int)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setDay(int)
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::getMonth()
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::getYear()
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::getHour()
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::getMin()
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::getDay()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
</UL>
<P><STRONG><a name="[123]"></a>dateTimeSettingsScreenView::tearDownScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView14tearDownScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
</UL>
<P><STRONG><a name="[12c]"></a>dateTimeSettingsScreenView::dayDecBtnClicked()</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView16dayDecBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = dateTimeSettingsScreenView::dayDecBtnClicked() &rArr; dateTimeSettingsScreenView::setDay(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setDay(int)
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::changeDay(int)
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::getDay()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
</UL>
<P><STRONG><a name="[12d]"></a>dateTimeSettingsScreenView::dayIncBtnClicked()</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView16dayIncBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = dateTimeSettingsScreenView::dayIncBtnClicked() &rArr; dateTimeSettingsScreenView::setDay(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setDay(int)
<LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::changeDay(int)
<LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::getDay()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
</UL>
<P><STRONG><a name="[126]"></a>dateTimeSettingsScreenView::minDecBtnClicked()</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView16minDecBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = dateTimeSettingsScreenView::minDecBtnClicked() &rArr; dateTimeSettingsScreenView::setMin(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setMin(int)
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::changeMin(int)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::getMin()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
</UL>
<P><STRONG><a name="[127]"></a>dateTimeSettingsScreenView::minIncBtnClicked()</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView16minIncBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = dateTimeSettingsScreenView::minIncBtnClicked() &rArr; dateTimeSettingsScreenView::setMin(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setMin(int)
<LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::changeMin(int)
<LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::getMin()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
</UL>
<P><STRONG><a name="[124]"></a>dateTimeSettingsScreenView::hourDecBtnClicked()</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView17hourDecBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = dateTimeSettingsScreenView::hourDecBtnClicked() &rArr; dateTimeSettingsScreenView::setHour(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setHour(int)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::getHour()
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::changeHour(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
</UL>
<P><STRONG><a name="[125]"></a>dateTimeSettingsScreenView::hourIncBtnClicked()</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView17hourIncBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = dateTimeSettingsScreenView::hourIncBtnClicked() &rArr; dateTimeSettingsScreenView::setHour(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setHour(int)
<LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::getHour()
<LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::changeHour(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
</UL>
<P><STRONG><a name="[128]"></a>dateTimeSettingsScreenView::yearDecBtnClicked()</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView17yearDecBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = dateTimeSettingsScreenView::yearDecBtnClicked() &rArr; dateTimeSettingsScreenView::setYear(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setYear(int)
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::getYear()
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::changeYear(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
</UL>
<P><STRONG><a name="[129]"></a>dateTimeSettingsScreenView::yearIncBtnClicked()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView17yearIncBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = dateTimeSettingsScreenView::yearIncBtnClicked() &rArr; dateTimeSettingsScreenView::setYear(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setYear(int)
<LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::getYear()
<LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::changeYear(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
</UL>
<P><STRONG><a name="[12a]"></a>dateTimeSettingsScreenView::monthDecBtnClicked()</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView18monthDecBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = dateTimeSettingsScreenView::monthDecBtnClicked() &rArr; dateTimeSettingsScreenView::setMonth(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setMonth(int)
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::getMonth()
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::changeMonth(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
</UL>
<P><STRONG><a name="[12b]"></a>dateTimeSettingsScreenView::monthIncBtnClicked()</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView18monthIncBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = dateTimeSettingsScreenView::monthIncBtnClicked() &rArr; dateTimeSettingsScreenView::setMonth(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setMonth(int)
<LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::getMonth()
<LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::changeMonth(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
</UL>
<P><STRONG><a name="[376]"></a>dateTimeSettingsScreenView::setDay(int)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView6setDayEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = dateTimeSettingsScreenView::setDay(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::dayIncBtnClicked()
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::dayDecBtnClicked()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setupScreen()
</UL>

<P><STRONG><a name="[37a]"></a>dateTimeSettingsScreenView::setMin(int)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView6setMinEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = dateTimeSettingsScreenView::setMin(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::minIncBtnClicked()
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::minDecBtnClicked()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setupScreen()
</UL>

<P><STRONG><a name="[378]"></a>dateTimeSettingsScreenView::setHour(int)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView7setHourEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = dateTimeSettingsScreenView::setHour(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::hourIncBtnClicked()
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::hourDecBtnClicked()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setupScreen()
</UL>

<P><STRONG><a name="[372]"></a>dateTimeSettingsScreenView::setYear(int)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView7setYearEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = dateTimeSettingsScreenView::setYear(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::yearIncBtnClicked()
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::yearDecBtnClicked()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setupScreen()
</UL>

<P><STRONG><a name="[374]"></a>dateTimeSettingsScreenView::setMonth(int)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenView8setMonthEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = dateTimeSettingsScreenView::setMonth(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::monthIncBtnClicked()
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::monthDecBtnClicked()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setupScreen()
</UL>

<P><STRONG><a name="[380]"></a>dateTimeSettingsScreenView::dateTimeSettingsScreenView()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenViewC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = dateTimeSettingsScreenView::dateTimeSettingsScreenView() &rArr; dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase() &rArr; touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;dateTimeSettingsScreenView, dateTimeSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[519]"></a>dateTimeSettingsScreenView::dateTimeSettingsScreenView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenViewC1Ev), UNUSED)

<P><STRONG><a name="[121]"></a>dateTimeSettingsScreenView::~dateTimeSettingsScreenView()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenViewD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = dateTimeSettingsScreenView::~dateTimeSettingsScreenView() &rArr; dateTimeSettingsScreenViewBase::~dateTimeSettingsScreenViewBase() &rArr; touchgfx::ButtonWithIcon::~ButtonWithIcon() &rArr; touchgfx::Button::~Button()
</UL>
<BR>[Calls]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::~dateTimeSettingsScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
</UL>
<P><STRONG><a name="[51a]"></a>dateTimeSettingsScreenView::~dateTimeSettingsScreenView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, datetimesettingsscreenview.o(i._ZN26dateTimeSettingsScreenViewD1Ev), UNUSED)

<P><STRONG><a name="[382]"></a>dayNightSettingsScreenView::setDayBegin(int, int)</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, daynightsettingsscreenview.o(i._ZN26dayNightSettingsScreenView11setDayBeginEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = dayNightSettingsScreenView::setDayBegin(int, int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayBeginHourIncBtnClicked()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayBeginHourDecBtnClicked()
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayBeginMinIncBtnClicked()
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayBeginMinDecBtnClicked()
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::setupScreen()
</UL>

<P><STRONG><a name="[12f]"></a>dayNightSettingsScreenView::setupScreen()</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, daynightsettingsscreenview.o(i._ZN26dayNightSettingsScreenView11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = dayNightSettingsScreenView::setupScreen() &rArr; dayNightSettingsScreenView::setDayEnd(int, int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::getDayBeginHour()
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::getDayBeginMin()
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::getDayEndHour()
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::getDayEndMin()
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::setDayEnd(int, int)
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::setDayBegin(int, int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
</UL>
<P><STRONG><a name="[130]"></a>dayNightSettingsScreenView::tearDownScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, daynightsettingsscreenview.o(i._ZN26dayNightSettingsScreenView14tearDownScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
</UL>
<P><STRONG><a name="[137]"></a>dayNightSettingsScreenView::dayEndMinDecBtnClicked()</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, daynightsettingsscreenview.o(i._ZN26dayNightSettingsScreenView22dayEndMinDecBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = dayNightSettingsScreenView::dayEndMinDecBtnClicked() &rArr; dayNightSettingsScreenView::setDayEnd(int, int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::changeDayEndMin(int)
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::getDayEndHour()
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::getDayEndMin()
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::setDayEnd(int, int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
</UL>
<P><STRONG><a name="[138]"></a>dayNightSettingsScreenView::dayEndMinIncBtnClicked()</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, daynightsettingsscreenview.o(i._ZN26dayNightSettingsScreenView22dayEndMinIncBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = dayNightSettingsScreenView::dayEndMinIncBtnClicked() &rArr; dayNightSettingsScreenView::setDayEnd(int, int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::changeDayEndMin(int)
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::getDayEndHour()
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::getDayEndMin()
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::setDayEnd(int, int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
</UL>
<P><STRONG><a name="[135]"></a>dayNightSettingsScreenView::dayEndHourDecBtnClicked()</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, daynightsettingsscreenview.o(i._ZN26dayNightSettingsScreenView23dayEndHourDecBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = dayNightSettingsScreenView::dayEndHourDecBtnClicked() &rArr; dayNightSettingsScreenView::setDayEnd(int, int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::changeDayEndHour(int)
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::getDayEndHour()
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::getDayEndMin()
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::setDayEnd(int, int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
</UL>
<P><STRONG><a name="[136]"></a>dayNightSettingsScreenView::dayEndHourIncBtnClicked()</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, daynightsettingsscreenview.o(i._ZN26dayNightSettingsScreenView23dayEndHourIncBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = dayNightSettingsScreenView::dayEndHourIncBtnClicked() &rArr; dayNightSettingsScreenView::setDayEnd(int, int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::changeDayEndHour(int)
<LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::getDayEndHour()
<LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::getDayEndMin()
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::setDayEnd(int, int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
</UL>
<P><STRONG><a name="[133]"></a>dayNightSettingsScreenView::dayBeginMinDecBtnClicked()</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, daynightsettingsscreenview.o(i._ZN26dayNightSettingsScreenView24dayBeginMinDecBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = dayNightSettingsScreenView::dayBeginMinDecBtnClicked() &rArr; dayNightSettingsScreenView::setDayBegin(int, int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::changeDayBeginMin(int)
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::getDayBeginHour()
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::getDayBeginMin()
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::setDayBegin(int, int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
</UL>
<P><STRONG><a name="[134]"></a>dayNightSettingsScreenView::dayBeginMinIncBtnClicked()</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, daynightsettingsscreenview.o(i._ZN26dayNightSettingsScreenView24dayBeginMinIncBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = dayNightSettingsScreenView::dayBeginMinIncBtnClicked() &rArr; dayNightSettingsScreenView::setDayBegin(int, int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::changeDayBeginMin(int)
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::getDayBeginHour()
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::getDayBeginMin()
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::setDayBegin(int, int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
</UL>
<P><STRONG><a name="[131]"></a>dayNightSettingsScreenView::dayBeginHourDecBtnClicked()</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, daynightsettingsscreenview.o(i._ZN26dayNightSettingsScreenView25dayBeginHourDecBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = dayNightSettingsScreenView::dayBeginHourDecBtnClicked() &rArr; dayNightSettingsScreenView::setDayBegin(int, int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::changeDayBeginHour(int)
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::getDayBeginHour()
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::getDayBeginMin()
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::setDayBegin(int, int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
</UL>
<P><STRONG><a name="[132]"></a>dayNightSettingsScreenView::dayBeginHourIncBtnClicked()</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, daynightsettingsscreenview.o(i._ZN26dayNightSettingsScreenView25dayBeginHourIncBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = dayNightSettingsScreenView::dayBeginHourIncBtnClicked() &rArr; dayNightSettingsScreenView::setDayBegin(int, int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::changeDayBeginHour(int)
<LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::getDayBeginHour()
<LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::getDayBeginMin()
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::setDayBegin(int, int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
</UL>
<P><STRONG><a name="[387]"></a>dayNightSettingsScreenView::setDayEnd(int, int)</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, daynightsettingsscreenview.o(i._ZN26dayNightSettingsScreenView9setDayEndEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = dayNightSettingsScreenView::setDayEnd(int, int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayEndHourIncBtnClicked()
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayEndHourDecBtnClicked()
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayEndMinIncBtnClicked()
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayEndMinDecBtnClicked()
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::setupScreen()
</UL>

<P><STRONG><a name="[38c]"></a>dayNightSettingsScreenView::dayNightSettingsScreenView()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, daynightsettingsscreenview.o(i._ZN26dayNightSettingsScreenViewC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = dayNightSettingsScreenView::dayNightSettingsScreenView() &rArr; dayNightSettingsScreenViewBase::dayNightSettingsScreenViewBase() &rArr; touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::dayNightSettingsScreenViewBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;dayNightSettingsScreenView, dayNightSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[51b]"></a>dayNightSettingsScreenView::dayNightSettingsScreenView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daynightsettingsscreenview.o(i._ZN26dayNightSettingsScreenViewC1Ev), UNUSED)

<P><STRONG><a name="[12e]"></a>dayNightSettingsScreenView::~dayNightSettingsScreenView()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, daynightsettingsscreenview.o(i._ZN26dayNightSettingsScreenViewD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = dayNightSettingsScreenView::~dayNightSettingsScreenView() &rArr; dayNightSettingsScreenViewBase::~dayNightSettingsScreenViewBase() &rArr; touchgfx::ButtonWithIcon::~ButtonWithIcon() &rArr; touchgfx::Button::~Button()
</UL>
<BR>[Calls]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::~dayNightSettingsScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
</UL>
<P><STRONG><a name="[51c]"></a>dayNightSettingsScreenView::~dayNightSettingsScreenView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, daynightsettingsscreenview.o(i._ZN26dayNightSettingsScreenViewD1Ev), UNUSED)

<P><STRONG><a name="[13a]"></a>opConfigSettingsScreenView::setupScreen()</STRONG> (Thumb, 270 bytes, Stack size 8 bytes, opconfigsettingsscreenview.o(i._ZN26opConfigSettingsScreenView11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = opConfigSettingsScreenView::setupScreen() &rArr; opConfigSettingsScreenPresenter::getHumiOp()
</UL>
<BR>[Calls]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenPresenter::getHumiOp()
<LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenPresenter::getHeaterOp()
<LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenPresenter::getLightOp()
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::forceState(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
</UL>
<P><STRONG><a name="[13b]"></a>opConfigSettingsScreenView::tearDownScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, opconfigsettingsscreenview.o(i._ZN26opConfigSettingsScreenView14tearDownScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
</UL>
<P><STRONG><a name="[13d]"></a>opConfigSettingsScreenView::op1HumiBtnClicked()</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, opconfigsettingsscreenview.o(i._ZN26opConfigSettingsScreenView17op1HumiBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = opConfigSettingsScreenView::op1HumiBtnClicked() &rArr; opConfigSettingsScreenPresenter::changeHumiOp(int) &rArr; Model::changeHumiOp(int) &rArr; actuator::disconnect() &rArr; opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenPresenter::changeHumiOp(int)
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::forceState(bool)
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::getState() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
</UL>
<P><STRONG><a name="[140]"></a>opConfigSettingsScreenView::op2HumiBtnClicked()</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, opconfigsettingsscreenview.o(i._ZN26opConfigSettingsScreenView17op2HumiBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = opConfigSettingsScreenView::op2HumiBtnClicked() &rArr; opConfigSettingsScreenPresenter::changeHumiOp(int) &rArr; Model::changeHumiOp(int) &rArr; actuator::disconnect() &rArr; opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenPresenter::changeHumiOp(int)
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::forceState(bool)
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::getState() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
</UL>
<P><STRONG><a name="[143]"></a>opConfigSettingsScreenView::op3HumiBtnClicked()</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, opconfigsettingsscreenview.o(i._ZN26opConfigSettingsScreenView17op3HumiBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = opConfigSettingsScreenView::op3HumiBtnClicked() &rArr; opConfigSettingsScreenPresenter::changeHumiOp(int) &rArr; Model::changeHumiOp(int) &rArr; actuator::disconnect() &rArr; opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenPresenter::changeHumiOp(int)
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::forceState(bool)
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::getState() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
</UL>
<P><STRONG><a name="[13e]"></a>opConfigSettingsScreenView::op1LightBtnClicked()</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, opconfigsettingsscreenview.o(i._ZN26opConfigSettingsScreenView18op1LightBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = opConfigSettingsScreenView::op1LightBtnClicked() &rArr; opConfigSettingsScreenPresenter::changeLightOp(int) &rArr; Model::changeLightOp(int) &rArr; actuator::disconnect() &rArr; opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenPresenter::changeLightOp(int)
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::forceState(bool)
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::getState() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
</UL>
<P><STRONG><a name="[141]"></a>opConfigSettingsScreenView::op2LightBtnClicked()</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, opconfigsettingsscreenview.o(i._ZN26opConfigSettingsScreenView18op2LightBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = opConfigSettingsScreenView::op2LightBtnClicked() &rArr; opConfigSettingsScreenPresenter::changeLightOp(int) &rArr; Model::changeLightOp(int) &rArr; actuator::disconnect() &rArr; opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenPresenter::changeLightOp(int)
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::forceState(bool)
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::getState() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
</UL>
<P><STRONG><a name="[144]"></a>opConfigSettingsScreenView::op3LightBtnClicked()</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, opconfigsettingsscreenview.o(i._ZN26opConfigSettingsScreenView18op3LightBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = opConfigSettingsScreenView::op3LightBtnClicked() &rArr; opConfigSettingsScreenPresenter::changeLightOp(int) &rArr; Model::changeLightOp(int) &rArr; actuator::disconnect() &rArr; opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenPresenter::changeLightOp(int)
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::forceState(bool)
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::getState() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
</UL>
<P><STRONG><a name="[13c]"></a>opConfigSettingsScreenView::op1HeaterBtnClicked()</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, opconfigsettingsscreenview.o(i._ZN26opConfigSettingsScreenView19op1HeaterBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = opConfigSettingsScreenView::op1HeaterBtnClicked() &rArr; opConfigSettingsScreenPresenter::changeHeaterOp(int) &rArr; Model::changeHeaterOp(int) &rArr; actuator::disconnect() &rArr; opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenPresenter::changeHeaterOp(int)
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::forceState(bool)
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::getState() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
</UL>
<P><STRONG><a name="[13f]"></a>opConfigSettingsScreenView::op2HeaterBtnClicked()</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, opconfigsettingsscreenview.o(i._ZN26opConfigSettingsScreenView19op2HeaterBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = opConfigSettingsScreenView::op2HeaterBtnClicked() &rArr; opConfigSettingsScreenPresenter::changeHeaterOp(int) &rArr; Model::changeHeaterOp(int) &rArr; actuator::disconnect() &rArr; opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenPresenter::changeHeaterOp(int)
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::forceState(bool)
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::getState() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
</UL>
<P><STRONG><a name="[142]"></a>opConfigSettingsScreenView::op3HeaterBtnClicked()</STRONG> (Thumb, 86 bytes, Stack size 8 bytes, opconfigsettingsscreenview.o(i._ZN26opConfigSettingsScreenView19op3HeaterBtnClickedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = opConfigSettingsScreenView::op3HeaterBtnClicked() &rArr; opConfigSettingsScreenPresenter::changeHeaterOp(int) &rArr; Model::changeHeaterOp(int) &rArr; actuator::disconnect() &rArr; opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenPresenter::changeHeaterOp(int)
<LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::forceState(bool)
<LI><a href="#[31a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::getState() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
</UL>
<P><STRONG><a name="[394]"></a>opConfigSettingsScreenView::opConfigSettingsScreenView()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, opconfigsettingsscreenview.o(i._ZN26opConfigSettingsScreenViewC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = opConfigSettingsScreenView::opConfigSettingsScreenView() &rArr; opConfigSettingsScreenViewBase::opConfigSettingsScreenViewBase() &rArr; touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::opConfigSettingsScreenViewBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;opConfigSettingsScreenView, opConfigSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[51d]"></a>opConfigSettingsScreenView::opConfigSettingsScreenView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, opconfigsettingsscreenview.o(i._ZN26opConfigSettingsScreenViewC1Ev), UNUSED)

<P><STRONG><a name="[139]"></a>opConfigSettingsScreenView::~opConfigSettingsScreenView()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, opconfigsettingsscreenview.o(i._ZN26opConfigSettingsScreenViewD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = opConfigSettingsScreenView::~opConfigSettingsScreenView() &rArr; opConfigSettingsScreenViewBase::~opConfigSettingsScreenViewBase() &rArr; touchgfx::ButtonWithIcon::~ButtonWithIcon() &rArr; touchgfx::Button::~Button()
</UL>
<BR>[Calls]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::~opConfigSettingsScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
</UL>
<P><STRONG><a name="[51e]"></a>opConfigSettingsScreenView::~opConfigSettingsScreenView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, opconfigsettingsscreenview.o(i._ZN26opConfigSettingsScreenViewD1Ev), UNUSED)

<P><STRONG><a name="[146]"></a>tempHumiSettingsScreenView::setupScreen()</STRONG> (Thumb, 78 bytes, Stack size 16 bytes, temphumisettingsscreenview.o(i._ZN26tempHumiSettingsScreenView11setupScreenEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = tempHumiSettingsScreenView::setupScreen() &rArr; touchgfx::Slider::setValue(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setValue(int)
<LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenPresenter::getNightNomTemp()
<LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenPresenter::getNightNomHumi()
<LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenPresenter::getDayNomTemp()
<LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenPresenter::getDayNomHumi()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
</UL>
<P><STRONG><a name="[39a]"></a>tempHumiSettingsScreenView::setDayHumiTxt(int)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, temphumisettingsscreenview.o(i._ZN26tempHumiSettingsScreenView13setDayHumiTxtEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = tempHumiSettingsScreenView::setDayHumiTxt(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::dayHumiSliderValueChanged(int)
</UL>

<P><STRONG><a name="[39b]"></a>tempHumiSettingsScreenView::setDayTempTxt(int)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, temphumisettingsscreenview.o(i._ZN26tempHumiSettingsScreenView13setDayTempTxtEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = tempHumiSettingsScreenView::setDayTempTxt(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::dayTempSliderValueChanged(int)
</UL>

<P><STRONG><a name="[147]"></a>tempHumiSettingsScreenView::tearDownScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, temphumisettingsscreenview.o(i._ZN26tempHumiSettingsScreenView14tearDownScreenEv))
<BR>[Address Reference Count : 1]<UL><LI> temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
</UL>
<P><STRONG><a name="[39c]"></a>tempHumiSettingsScreenView::setNightHumiTxt(int)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, temphumisettingsscreenview.o(i._ZN26tempHumiSettingsScreenView15setNightHumiTxtEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = tempHumiSettingsScreenView::setNightHumiTxt(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::nightHumiSliderValueChanged(int)
</UL>

<P><STRONG><a name="[39d]"></a>tempHumiSettingsScreenView::setNightTempTxt(int)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, temphumisettingsscreenview.o(i._ZN26tempHumiSettingsScreenView15setNightTempTxtEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 440 + Unknown Stack Size
<LI>Call Chain = tempHumiSettingsScreenView::setNightTempTxt(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::nightTempSliderValueChanged(int)
</UL>

<P><STRONG><a name="[14a]"></a>tempHumiSettingsScreenView::dayHumiSliderValueChanged(int)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, temphumisettingsscreenview.o(i._ZN26tempHumiSettingsScreenView25dayHumiSliderValueChangedEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = tempHumiSettingsScreenView::dayHumiSliderValueChanged(int) &rArr; tempHumiSettingsScreenView::setDayHumiTxt(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::setDayHumiTxt(int)
<LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenPresenter::changeDayNomHumi(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
</UL>
<P><STRONG><a name="[148]"></a>tempHumiSettingsScreenView::dayTempSliderValueChanged(int)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, temphumisettingsscreenview.o(i._ZN26tempHumiSettingsScreenView25dayTempSliderValueChangedEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = tempHumiSettingsScreenView::dayTempSliderValueChanged(int) &rArr; tempHumiSettingsScreenView::setDayTempTxt(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::setDayTempTxt(int)
<LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenPresenter::changeDayNomTemp(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
</UL>
<P><STRONG><a name="[14b]"></a>tempHumiSettingsScreenView::nightHumiSliderValueChanged(int)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, temphumisettingsscreenview.o(i._ZN26tempHumiSettingsScreenView27nightHumiSliderValueChangedEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = tempHumiSettingsScreenView::nightHumiSliderValueChanged(int) &rArr; tempHumiSettingsScreenView::setNightHumiTxt(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::setNightHumiTxt(int)
<LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenPresenter::changeNightNomHumi(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
</UL>
<P><STRONG><a name="[149]"></a>tempHumiSettingsScreenView::nightTempSliderValueChanged(int)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, temphumisettingsscreenview.o(i._ZN26tempHumiSettingsScreenView27nightTempSliderValueChangedEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 456 + Unknown Stack Size
<LI>Call Chain = tempHumiSettingsScreenView::nightTempSliderValueChanged(int) &rArr; tempHumiSettingsScreenView::setNightTempTxt(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::setNightTempTxt(int)
<LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenPresenter::changeNightNomTemp(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
</UL>
<P><STRONG><a name="[3a2]"></a>tempHumiSettingsScreenView::tempHumiSettingsScreenView()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, temphumisettingsscreenview.o(i._ZN26tempHumiSettingsScreenViewC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = tempHumiSettingsScreenView::tempHumiSettingsScreenView() &rArr; tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase() &rArr; touchgfx::Slider::Slider() &rArr; touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;tempHumiSettingsScreenView, tempHumiSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[51f]"></a>tempHumiSettingsScreenView::tempHumiSettingsScreenView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, temphumisettingsscreenview.o(i._ZN26tempHumiSettingsScreenViewC1Ev), UNUSED)

<P><STRONG><a name="[145]"></a>tempHumiSettingsScreenView::~tempHumiSettingsScreenView()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, temphumisettingsscreenview.o(i._ZN26tempHumiSettingsScreenViewD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = tempHumiSettingsScreenView::~tempHumiSettingsScreenView() &rArr; tempHumiSettingsScreenViewBase::~tempHumiSettingsScreenViewBase() &rArr; touchgfx::ButtonWithIcon::~ButtonWithIcon() &rArr; touchgfx::Button::~Button()
</UL>
<BR>[Calls]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::~tempHumiSettingsScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
</UL>
<P><STRONG><a name="[520]"></a>tempHumiSettingsScreenView::~tempHumiSettingsScreenView__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, temphumisettingsscreenview.o(i._ZN26tempHumiSettingsScreenViewD1Ev), UNUSED)

<P><STRONG><a name="[155]"></a>dateTimeSettingsScreenViewBase::dayDecBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenview.o(i._ZN30dateTimeSettingsScreenViewBase16dayDecBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[156]"></a>dateTimeSettingsScreenViewBase::dayIncBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenview.o(i._ZN30dateTimeSettingsScreenViewBase16dayIncBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[14f]"></a>dateTimeSettingsScreenViewBase::minDecBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenview.o(i._ZN30dateTimeSettingsScreenViewBase16minDecBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[150]"></a>dateTimeSettingsScreenViewBase::minIncBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenview.o(i._ZN30dateTimeSettingsScreenViewBase16minIncBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[14d]"></a>dateTimeSettingsScreenViewBase::hourDecBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenview.o(i._ZN30dateTimeSettingsScreenViewBase17hourDecBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[14e]"></a>dateTimeSettingsScreenViewBase::hourIncBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenview.o(i._ZN30dateTimeSettingsScreenViewBase17hourIncBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[151]"></a>dateTimeSettingsScreenViewBase::yearDecBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenview.o(i._ZN30dateTimeSettingsScreenViewBase17yearDecBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[152]"></a>dateTimeSettingsScreenViewBase::yearIncBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenview.o(i._ZN30dateTimeSettingsScreenViewBase17yearIncBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[153]"></a>dateTimeSettingsScreenViewBase::monthDecBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenview.o(i._ZN30dateTimeSettingsScreenViewBase18monthDecBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[154]"></a>dateTimeSettingsScreenViewBase::monthIncBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenview.o(i._ZN30dateTimeSettingsScreenViewBase18monthIncBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[9a]"></a>dateTimeSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</STRONG> (Thumb, 230 bytes, Stack size 16 bytes, datetimesettingsscreenviewbase.o(i._ZN30dateTimeSettingsScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = dateTimeSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&) &rArr; FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionWest() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionWest()
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotomainScreenScreenSlideTransitionWest()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenviewbase.o(.constdata)
</UL>
<P><STRONG><a name="[381]"></a>dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase()</STRONG> (Thumb, 3610 bytes, Stack size 48 bytes, datetimesettingsscreenviewbase.o(i._ZN30dateTimeSettingsScreenViewBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase() &rArr; touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(touchgfx::TypedText)
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFrom24BitRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::ButtonWithIcon()
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::colortype(unsigned)
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::TypedText(unsigned short)
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setColor(touchgfx::colortype)
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setAlpha(unsigned char)
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setLinespacing(unsigned short)
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap(unsigned short)
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard()
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard(const unsigned short*)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::setIconXY(short, short)
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractButton::setAction(touchgfx::GenericCallback&lang;const touchgfx::AbstractButton&, void&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::dateTimeSettingsScreenView()
</UL>

<P><STRONG><a name="[521]"></a>dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, datetimesettingsscreenviewbase.o(i._ZN30dateTimeSettingsScreenViewBaseC1Ev), UNUSED)

<P><STRONG><a name="[14c]"></a>dateTimeSettingsScreenViewBase::~dateTimeSettingsScreenViewBase()</STRONG> (Thumb, 364 bytes, Stack size 16 bytes, datetimesettingsscreenviewbase.o(i._ZN30dateTimeSettingsScreenViewBaseD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = dateTimeSettingsScreenViewBase::~dateTimeSettingsScreenViewBase() &rArr; touchgfx::ButtonWithIcon::~ButtonWithIcon() &rArr; touchgfx::Button::~Button()
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea()
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::~ButtonWithIcon()
<LI><a href="#[20a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;dateTimeSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback()
<LI><a href="#[1e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;dateTimeSettingsScreenPresenter&rang;::~View()
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard()
</UL>
<BR>[Called By]<UL><LI><a href="#[121]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::~dateTimeSettingsScreenView()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[522]"></a>dateTimeSettingsScreenViewBase::~dateTimeSettingsScreenViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, datetimesettingsscreenviewbase.o(i._ZN30dateTimeSettingsScreenViewBaseD1Ev), UNUSED)

<P><STRONG><a name="[9b]"></a>dayNightSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</STRONG> (Thumb, 194 bytes, Stack size 16 bytes, daynightsettingsscreenviewbase.o(i._ZN30dayNightSettingsScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = dayNightSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&) &rArr; FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionWest() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionWest()
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotomainScreenScreenSlideTransitionWest()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenviewbase.o(.constdata)
</UL>
<P><STRONG><a name="[15e]"></a>dayNightSettingsScreenViewBase::dayEndMinDecBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, daynightsettingsscreenview.o(i._ZN30dayNightSettingsScreenViewBase22dayEndMinDecBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[15f]"></a>dayNightSettingsScreenViewBase::dayEndMinIncBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, daynightsettingsscreenview.o(i._ZN30dayNightSettingsScreenViewBase22dayEndMinIncBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[15c]"></a>dayNightSettingsScreenViewBase::dayEndHourDecBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, daynightsettingsscreenview.o(i._ZN30dayNightSettingsScreenViewBase23dayEndHourDecBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[15d]"></a>dayNightSettingsScreenViewBase::dayEndHourIncBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, daynightsettingsscreenview.o(i._ZN30dayNightSettingsScreenViewBase23dayEndHourIncBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[15a]"></a>dayNightSettingsScreenViewBase::dayBeginMinDecBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, daynightsettingsscreenview.o(i._ZN30dayNightSettingsScreenViewBase24dayBeginMinDecBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[15b]"></a>dayNightSettingsScreenViewBase::dayBeginMinIncBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, daynightsettingsscreenview.o(i._ZN30dayNightSettingsScreenViewBase24dayBeginMinIncBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[158]"></a>dayNightSettingsScreenViewBase::dayBeginHourDecBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, daynightsettingsscreenview.o(i._ZN30dayNightSettingsScreenViewBase25dayBeginHourDecBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[159]"></a>dayNightSettingsScreenViewBase::dayBeginHourIncBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, daynightsettingsscreenview.o(i._ZN30dayNightSettingsScreenViewBase25dayBeginHourIncBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[38d]"></a>dayNightSettingsScreenViewBase::dayNightSettingsScreenViewBase()</STRONG> (Thumb, 3062 bytes, Stack size 48 bytes, daynightsettingsscreenviewbase.o(i._ZN30dayNightSettingsScreenViewBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 136 + Unknown Stack Size
<LI>Call Chain = dayNightSettingsScreenViewBase::dayNightSettingsScreenViewBase() &rArr; touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(touchgfx::TypedText)
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFrom24BitRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::ButtonWithIcon()
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::TypedText(unsigned short)
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setColor(touchgfx::colortype)
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setAlpha(unsigned char)
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setLinespacing(unsigned short)
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap(unsigned short)
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard()
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard(const unsigned short*)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::setIconXY(short, short)
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractButton::setAction(touchgfx::GenericCallback&lang;const touchgfx::AbstractButton&, void&rang;&)
</UL>
<BR>[Called By]<UL><LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayNightSettingsScreenView()
</UL>

<P><STRONG><a name="[523]"></a>dayNightSettingsScreenViewBase::dayNightSettingsScreenViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, daynightsettingsscreenviewbase.o(i._ZN30dayNightSettingsScreenViewBaseC1Ev), UNUSED)

<P><STRONG><a name="[157]"></a>dayNightSettingsScreenViewBase::~dayNightSettingsScreenViewBase()</STRONG> (Thumb, 310 bytes, Stack size 16 bytes, daynightsettingsscreenviewbase.o(i._ZN30dayNightSettingsScreenViewBaseD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = dayNightSettingsScreenViewBase::~dayNightSettingsScreenViewBase() &rArr; touchgfx::ButtonWithIcon::~ButtonWithIcon() &rArr; touchgfx::Button::~Button()
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea()
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::~ButtonWithIcon()
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard()
<LI><a href="#[20d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;dayNightSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback()
<LI><a href="#[1e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;dayNightSettingsScreenPresenter&rang;::~View()
</UL>
<BR>[Called By]<UL><LI><a href="#[12e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::~dayNightSettingsScreenView()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[524]"></a>dayNightSettingsScreenViewBase::~dayNightSettingsScreenViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daynightsettingsscreenviewbase.o(i._ZN30dayNightSettingsScreenViewBaseD1Ev), UNUSED)

<P><STRONG><a name="[162]"></a>opConfigSettingsScreenViewBase::op1HumiBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, opconfigsettingsscreenview.o(i._ZN30opConfigSettingsScreenViewBase17op1HumiBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[165]"></a>opConfigSettingsScreenViewBase::op2HumiBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, opconfigsettingsscreenview.o(i._ZN30opConfigSettingsScreenViewBase17op2HumiBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[168]"></a>opConfigSettingsScreenViewBase::op3HumiBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, opconfigsettingsscreenview.o(i._ZN30opConfigSettingsScreenViewBase17op3HumiBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[163]"></a>opConfigSettingsScreenViewBase::op1LightBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, opconfigsettingsscreenview.o(i._ZN30opConfigSettingsScreenViewBase18op1LightBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[166]"></a>opConfigSettingsScreenViewBase::op2LightBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, opconfigsettingsscreenview.o(i._ZN30opConfigSettingsScreenViewBase18op2LightBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[169]"></a>opConfigSettingsScreenViewBase::op3LightBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, opconfigsettingsscreenview.o(i._ZN30opConfigSettingsScreenViewBase18op3LightBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[161]"></a>opConfigSettingsScreenViewBase::op1HeaterBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, opconfigsettingsscreenview.o(i._ZN30opConfigSettingsScreenViewBase19op1HeaterBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[164]"></a>opConfigSettingsScreenViewBase::op2HeaterBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, opconfigsettingsscreenview.o(i._ZN30opConfigSettingsScreenViewBase19op2HeaterBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[167]"></a>opConfigSettingsScreenViewBase::op3HeaterBtnClicked()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, opconfigsettingsscreenview.o(i._ZN30opConfigSettingsScreenViewBase19op3HeaterBtnClickedEv))
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[a6]"></a>opConfigSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</STRONG> (Thumb, 212 bytes, Stack size 16 bytes, opconfigsettingsscreenviewbase.o(i._ZN30opConfigSettingsScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = opConfigSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&) &rArr; FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionWest() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionWest()
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotomainScreenScreenSlideTransitionWest()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenviewbase.o(.constdata)
</UL>
<P><STRONG><a name="[395]"></a>opConfigSettingsScreenViewBase::opConfigSettingsScreenViewBase()</STRONG> (Thumb, 1850 bytes, Stack size 56 bytes, opconfigsettingsscreenviewbase.o(i._ZN30opConfigSettingsScreenViewBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = opConfigSettingsScreenViewBase::opConfigSettingsScreenViewBase() &rArr; touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(touchgfx::TypedText)
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFrom24BitRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::ButtonWithIcon()
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::TypedText(unsigned short)
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setColor(touchgfx::colortype)
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setAlpha(unsigned char)
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setLinespacing(unsigned short)
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap(unsigned short)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::setIconXY(short, short)
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractButton::setAction(touchgfx::GenericCallback&lang;const touchgfx::AbstractButton&, void&rang;&)
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::ToggleButton()
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::opConfigSettingsScreenView()
</UL>

<P><STRONG><a name="[525]"></a>opConfigSettingsScreenViewBase::opConfigSettingsScreenViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, opconfigsettingsscreenviewbase.o(i._ZN30opConfigSettingsScreenViewBaseC1Ev), UNUSED)

<P><STRONG><a name="[160]"></a>opConfigSettingsScreenViewBase::~opConfigSettingsScreenViewBase()</STRONG> (Thumb, 250 bytes, Stack size 16 bytes, opconfigsettingsscreenviewbase.o(i._ZN30opConfigSettingsScreenViewBaseD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = opConfigSettingsScreenViewBase::~opConfigSettingsScreenViewBase() &rArr; touchgfx::ButtonWithIcon::~ButtonWithIcon() &rArr; touchgfx::Button::~Button()
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea()
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::~ButtonWithIcon()
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::~ToggleButton()
<LI><a href="#[210]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;opConfigSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback()
<LI><a href="#[1e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;opConfigSettingsScreenPresenter&rang;::~View()
</UL>
<BR>[Called By]<UL><LI><a href="#[139]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::~opConfigSettingsScreenView()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[526]"></a>opConfigSettingsScreenViewBase::~opConfigSettingsScreenViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, opconfigsettingsscreenviewbase.o(i._ZN30opConfigSettingsScreenViewBaseD1Ev), UNUSED)

<P><STRONG><a name="[a9]"></a>tempHumiSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)</STRONG> (Thumb, 50 bytes, Stack size 16 bytes, temphumisettingsscreenviewbase.o(i._ZN30tempHumiSettingsScreenViewBase21buttonCallbackHandlerERKN8touchgfx14AbstractButtonE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = tempHumiSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&) &rArr; FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionWest() &rArr; touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionWest()
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotomainScreenScreenSlideTransitionWest()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> temphumisettingsscreenviewbase.o(.constdata)
</UL>
<P><STRONG><a name="[16d]"></a>tempHumiSettingsScreenViewBase::dayHumiSliderValueChanged(int)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, temphumisettingsscreenview.o(i._ZN30tempHumiSettingsScreenViewBase25dayHumiSliderValueChangedEi))
<BR>[Address Reference Count : 1]<UL><LI> temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[16b]"></a>tempHumiSettingsScreenViewBase::dayTempSliderValueChanged(int)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, temphumisettingsscreenview.o(i._ZN30tempHumiSettingsScreenViewBase25dayTempSliderValueChangedEi))
<BR>[Address Reference Count : 1]<UL><LI> temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[16e]"></a>tempHumiSettingsScreenViewBase::nightHumiSliderValueChanged(int)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, temphumisettingsscreenview.o(i._ZN30tempHumiSettingsScreenViewBase27nightHumiSliderValueChangedEi))
<BR>[Address Reference Count : 1]<UL><LI> temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[16c]"></a>tempHumiSettingsScreenViewBase::nightTempSliderValueChanged(int)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, temphumisettingsscreenview.o(i._ZN30tempHumiSettingsScreenViewBase27nightTempSliderValueChangedEi))
<BR>[Address Reference Count : 1]<UL><LI> temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[aa]"></a>tempHumiSettingsScreenViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider&, int)</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, temphumisettingsscreenviewbase.o(i._ZN30tempHumiSettingsScreenViewBase33sliderValueChangedCallbackHandlerERKN8touchgfx6SliderEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tempHumiSettingsScreenViewBase::sliderValueChangedCallbackHandler(const touchgfx::Slider&, int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> temphumisettingsscreenviewbase.o(.constdata)
</UL>
<P><STRONG><a name="[3a3]"></a>tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()</STRONG> (Thumb, 3434 bytes, Stack size 48 bytes, temphumisettingsscreenviewbase.o(i._ZN30tempHumiSettingsScreenViewBaseC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase() &rArr; touchgfx::Slider::Slider() &rArr; touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(touchgfx::TypedText)
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[33d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Color::getColorFrom24BitRGB(unsigned char, unsigned char, unsigned char)
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::ButtonWithIcon()
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::TypedText(unsigned short)
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
<LI><a href="#[33e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setColor(touchgfx::colortype)
<LI><a href="#[342]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setAlpha(unsigned char)
<LI><a href="#[33f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setLinespacing(unsigned short)
<LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap(unsigned short)
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard()
<LI><a href="#[343]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::setWildcard(const unsigned short*)
<LI><a href="#[33b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::setIconXY(short, short)
<LI><a href="#[33c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractButton::setAction(touchgfx::GenericCallback&lang;const touchgfx::AbstractButton&, void&rang;&)
<LI><a href="#[1f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setValue(int)
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::Slider()
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setupVerticalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setValueRange(int, int)
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[3a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setNewValueCallback(touchgfx::GenericCallback&lang;const touchgfx::Slider&, int&rang;&)
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
<LI><a href="#[3a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::setColor(touchgfx::colortype)
<LI><a href="#[3aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::setAlpha(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::tempHumiSettingsScreenView()
</UL>

<P><STRONG><a name="[527]"></a>tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 48 bytes, temphumisettingsscreenviewbase.o(i._ZN30tempHumiSettingsScreenViewBaseC1Ev), UNUSED)

<P><STRONG><a name="[16a]"></a>tempHumiSettingsScreenViewBase::~tempHumiSettingsScreenViewBase()</STRONG> (Thumb, 370 bytes, Stack size 16 bytes, temphumisettingsscreenviewbase.o(i._ZN30tempHumiSettingsScreenViewBaseD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = tempHumiSettingsScreenViewBase::~tempHumiSettingsScreenViewBase() &rArr; touchgfx::ButtonWithIcon::~ButtonWithIcon() &rArr; touchgfx::Button::~Button()
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea()
<LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::~ButtonWithIcon()
<LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard()
<LI><a href="#[1e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::~Slider()
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::~Box()
<LI><a href="#[216]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;tempHumiSettingsScreenViewBase, const touchgfx::Slider&, int&rang;::~Callback()
<LI><a href="#[213]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;tempHumiSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback()
<LI><a href="#[1e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;tempHumiSettingsScreenPresenter&rang;::~View()
</UL>
<BR>[Called By]<UL><LI><a href="#[145]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::~tempHumiSettingsScreenView()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
</UL>
<P><STRONG><a name="[528]"></a>tempHumiSettingsScreenViewBase::~tempHumiSettingsScreenViewBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, temphumisettingsscreenviewbase.o(i._ZN30tempHumiSettingsScreenViewBaseD1Ev), UNUSED)

<P><STRONG><a name="[37d]"></a>dateTimeSettingsScreenPresenter::changeHour(int)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, datetimesettingsscreenpresenter.o(i._ZN31dateTimeSettingsScreenPresenter10changeHourEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dateTimeSettingsScreenPresenter::changeHour(int) &rArr; Model::changeHour(int) &rArr; HAL_RTC_SetTime &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[3ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeHour(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::hourIncBtnClicked()
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::hourDecBtnClicked()
</UL>

<P><STRONG><a name="[37e]"></a>dateTimeSettingsScreenPresenter::changeYear(int)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, datetimesettingsscreenpresenter.o(i._ZN31dateTimeSettingsScreenPresenter10changeYearEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dateTimeSettingsScreenPresenter::changeYear(int) &rArr; Model::changeYear(int) &rArr; HAL_RTC_SetDate &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[3ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeYear(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::yearIncBtnClicked()
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::yearDecBtnClicked()
</UL>

<P><STRONG><a name="[170]"></a>dateTimeSettingsScreenPresenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenpresenter.o(i._ZN31dateTimeSettingsScreenPresenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenpresenter.o(.constdata__ZTV31dateTimeSettingsScreenPresenter)
</UL>
<P><STRONG><a name="[37f]"></a>dateTimeSettingsScreenPresenter::changeMonth(int)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, datetimesettingsscreenpresenter.o(i._ZN31dateTimeSettingsScreenPresenter11changeMonthEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dateTimeSettingsScreenPresenter::changeMonth(int) &rArr; Model::changeMonth(int) &rArr; HAL_RTC_SetDate &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[3ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeMonth(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::monthIncBtnClicked()
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::monthDecBtnClicked()
</UL>

<P><STRONG><a name="[375]"></a>dateTimeSettingsScreenPresenter::getDay()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, datetimesettingsscreenpresenter.o(i._ZN31dateTimeSettingsScreenPresenter6getDayEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dateTimeSettingsScreenPresenter::getDay()
</UL>
<BR>[Calls]<UL><LI><a href="#[353]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getDay()
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::dayIncBtnClicked()
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::dayDecBtnClicked()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setupScreen()
</UL>

<P><STRONG><a name="[379]"></a>dateTimeSettingsScreenPresenter::getMin()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, datetimesettingsscreenpresenter.o(i._ZN31dateTimeSettingsScreenPresenter6getMinEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dateTimeSettingsScreenPresenter::getMin()
</UL>
<BR>[Calls]<UL><LI><a href="#[354]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getMin()
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::minIncBtnClicked()
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::minDecBtnClicked()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setupScreen()
</UL>

<P><STRONG><a name="[377]"></a>dateTimeSettingsScreenPresenter::getHour()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, datetimesettingsscreenpresenter.o(i._ZN31dateTimeSettingsScreenPresenter7getHourEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dateTimeSettingsScreenPresenter::getHour()
</UL>
<BR>[Calls]<UL><LI><a href="#[355]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getHour()
</UL>
<BR>[Called By]<UL><LI><a href="#[125]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::hourIncBtnClicked()
<LI><a href="#[124]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::hourDecBtnClicked()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setupScreen()
</UL>

<P><STRONG><a name="[371]"></a>dateTimeSettingsScreenPresenter::getYear()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, datetimesettingsscreenpresenter.o(i._ZN31dateTimeSettingsScreenPresenter7getYearEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dateTimeSettingsScreenPresenter::getYear()
</UL>
<BR>[Calls]<UL><LI><a href="#[356]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getYear()
</UL>
<BR>[Called By]<UL><LI><a href="#[129]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::yearIncBtnClicked()
<LI><a href="#[128]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::yearDecBtnClicked()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setupScreen()
</UL>

<P><STRONG><a name="[16f]"></a>dateTimeSettingsScreenPresenter::activate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenpresenter.o(i._ZN31dateTimeSettingsScreenPresenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenpresenter.o(.constdata__ZTV31dateTimeSettingsScreenPresenter)
</UL>
<P><STRONG><a name="[373]"></a>dateTimeSettingsScreenPresenter::getMonth()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, datetimesettingsscreenpresenter.o(i._ZN31dateTimeSettingsScreenPresenter8getMonthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = dateTimeSettingsScreenPresenter::getMonth()
</UL>
<BR>[Calls]<UL><LI><a href="#[357]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getMonth()
</UL>
<BR>[Called By]<UL><LI><a href="#[12b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::monthIncBtnClicked()
<LI><a href="#[12a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::monthDecBtnClicked()
<LI><a href="#[122]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setupScreen()
</UL>

<P><STRONG><a name="[37b]"></a>dateTimeSettingsScreenPresenter::changeDay(int)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, datetimesettingsscreenpresenter.o(i._ZN31dateTimeSettingsScreenPresenter9changeDayEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dateTimeSettingsScreenPresenter::changeDay(int) &rArr; Model::changeDay(int) &rArr; HAL_RTC_SetDate &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[3ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeDay(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[12d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::dayIncBtnClicked()
<LI><a href="#[12c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::dayDecBtnClicked()
</UL>

<P><STRONG><a name="[37c]"></a>dateTimeSettingsScreenPresenter::changeMin(int)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, datetimesettingsscreenpresenter.o(i._ZN31dateTimeSettingsScreenPresenter9changeMinEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = dateTimeSettingsScreenPresenter::changeMin(int) &rArr; Model::changeMin(int) &rArr; HAL_RTC_SetTime &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[3af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeMin(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[127]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::minIncBtnClicked()
<LI><a href="#[126]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::minDecBtnClicked()
</UL>

<P><STRONG><a name="[4b0]"></a>dateTimeSettingsScreenPresenter::dateTimeSettingsScreenPresenter(dateTimeSettingsScreenView&)</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, datetimesettingsscreenpresenter.o(i._ZN31dateTimeSettingsScreenPresenterC1ER26dateTimeSettingsScreenView))
<BR><BR>[Called By]<UL><LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;dateTimeSettingsScreenView, dateTimeSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[529]"></a>dateTimeSettingsScreenPresenter::dateTimeSettingsScreenPresenter__sub_object(dateTimeSettingsScreenView&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, datetimesettingsscreenpresenter.o(i._ZN31dateTimeSettingsScreenPresenterC1ER26dateTimeSettingsScreenView), UNUSED)

<P><STRONG><a name="[171]"></a>dateTimeSettingsScreenPresenter::~dateTimeSettingsScreenPresenter()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, datetimesettingsscreenpresenter.o(i._ZN31dateTimeSettingsScreenPresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenpresenter.o(.constdata__ZTV31dateTimeSettingsScreenPresenter)
</UL>
<P><STRONG><a name="[52a]"></a>dateTimeSettingsScreenPresenter::~dateTimeSettingsScreenPresenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, datetimesettingsscreenpresenter.o(i._ZN31dateTimeSettingsScreenPresenterD1Ev), UNUSED)

<P><STRONG><a name="[173]"></a>dayNightSettingsScreenPresenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, daynightsettingsscreenpresenter.o(i._ZN31dayNightSettingsScreenPresenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenpresenter.o(.constdata__ZTV31dayNightSettingsScreenPresenter)
</UL>
<P><STRONG><a name="[385]"></a>dayNightSettingsScreenPresenter::getDayEndMin()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, daynightsettingsscreenpresenter.o(i._ZN31dayNightSettingsScreenPresenter12getDayEndMinEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dayNightSettingsScreenPresenter::getDayEndMin() &rArr; Model::getDayEndMin()
</UL>
<BR>[Calls]<UL><LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getDayEndMin()
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayEndHourIncBtnClicked()
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayEndHourDecBtnClicked()
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayEndMinIncBtnClicked()
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayEndMinDecBtnClicked()
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::setupScreen()
</UL>

<P><STRONG><a name="[386]"></a>dayNightSettingsScreenPresenter::getDayEndHour()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, daynightsettingsscreenpresenter.o(i._ZN31dayNightSettingsScreenPresenter13getDayEndHourEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dayNightSettingsScreenPresenter::getDayEndHour() &rArr; Model::getDayEndHour()
</UL>
<BR>[Calls]<UL><LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getDayEndHour()
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayEndHourIncBtnClicked()
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayEndHourDecBtnClicked()
<LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayEndMinIncBtnClicked()
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayEndMinDecBtnClicked()
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::setupScreen()
</UL>

<P><STRONG><a name="[383]"></a>dayNightSettingsScreenPresenter::getDayBeginMin()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, daynightsettingsscreenpresenter.o(i._ZN31dayNightSettingsScreenPresenter14getDayBeginMinEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dayNightSettingsScreenPresenter::getDayBeginMin() &rArr; Model::getDayBeginMin()
</UL>
<BR>[Calls]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getDayBeginMin()
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayBeginHourIncBtnClicked()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayBeginHourDecBtnClicked()
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayBeginMinIncBtnClicked()
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayBeginMinDecBtnClicked()
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::setupScreen()
</UL>

<P><STRONG><a name="[388]"></a>dayNightSettingsScreenPresenter::changeDayEndMin(int)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, daynightsettingsscreenpresenter.o(i._ZN31dayNightSettingsScreenPresenter15changeDayEndMinEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = dayNightSettingsScreenPresenter::changeDayEndMin(int) &rArr; Model::changeDayEndMin(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeDayEndMin(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[138]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayEndMinIncBtnClicked()
<LI><a href="#[137]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayEndMinDecBtnClicked()
</UL>

<P><STRONG><a name="[384]"></a>dayNightSettingsScreenPresenter::getDayBeginHour()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, daynightsettingsscreenpresenter.o(i._ZN31dayNightSettingsScreenPresenter15getDayBeginHourEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = dayNightSettingsScreenPresenter::getDayBeginHour() &rArr; Model::getDayBeginHour()
</UL>
<BR>[Calls]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getDayBeginHour()
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayBeginHourIncBtnClicked()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayBeginHourDecBtnClicked()
<LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayBeginMinIncBtnClicked()
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayBeginMinDecBtnClicked()
<LI><a href="#[12f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::setupScreen()
</UL>

<P><STRONG><a name="[389]"></a>dayNightSettingsScreenPresenter::changeDayEndHour(int)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, daynightsettingsscreenpresenter.o(i._ZN31dayNightSettingsScreenPresenter16changeDayEndHourEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = dayNightSettingsScreenPresenter::changeDayEndHour(int) &rArr; Model::changeDayEndHour(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeDayEndHour(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[136]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayEndHourIncBtnClicked()
<LI><a href="#[135]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayEndHourDecBtnClicked()
</UL>

<P><STRONG><a name="[38a]"></a>dayNightSettingsScreenPresenter::changeDayBeginMin(int)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, daynightsettingsscreenpresenter.o(i._ZN31dayNightSettingsScreenPresenter17changeDayBeginMinEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = dayNightSettingsScreenPresenter::changeDayBeginMin(int) &rArr; Model::changeDayBeginMin(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeDayBeginMin(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[134]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayBeginMinIncBtnClicked()
<LI><a href="#[133]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayBeginMinDecBtnClicked()
</UL>

<P><STRONG><a name="[38b]"></a>dayNightSettingsScreenPresenter::changeDayBeginHour(int)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, daynightsettingsscreenpresenter.o(i._ZN31dayNightSettingsScreenPresenter18changeDayBeginHourEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = dayNightSettingsScreenPresenter::changeDayBeginHour(int) &rArr; Model::changeDayBeginHour(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeDayBeginHour(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[132]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayBeginHourIncBtnClicked()
<LI><a href="#[131]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayBeginHourDecBtnClicked()
</UL>

<P><STRONG><a name="[172]"></a>dayNightSettingsScreenPresenter::activate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, daynightsettingsscreenpresenter.o(i._ZN31dayNightSettingsScreenPresenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenpresenter.o(.constdata__ZTV31dayNightSettingsScreenPresenter)
</UL>
<P><STRONG><a name="[4b1]"></a>dayNightSettingsScreenPresenter::dayNightSettingsScreenPresenter(dayNightSettingsScreenView&)</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, daynightsettingsscreenpresenter.o(i._ZN31dayNightSettingsScreenPresenterC1ER26dayNightSettingsScreenView))
<BR><BR>[Called By]<UL><LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;dayNightSettingsScreenView, dayNightSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[52b]"></a>dayNightSettingsScreenPresenter::dayNightSettingsScreenPresenter__sub_object(dayNightSettingsScreenView&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, daynightsettingsscreenpresenter.o(i._ZN31dayNightSettingsScreenPresenterC1ER26dayNightSettingsScreenView), UNUSED)

<P><STRONG><a name="[174]"></a>dayNightSettingsScreenPresenter::~dayNightSettingsScreenPresenter()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, daynightsettingsscreenpresenter.o(i._ZN31dayNightSettingsScreenPresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenpresenter.o(.constdata__ZTV31dayNightSettingsScreenPresenter)
</UL>
<P><STRONG><a name="[52c]"></a>dayNightSettingsScreenPresenter::~dayNightSettingsScreenPresenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, daynightsettingsscreenpresenter.o(i._ZN31dayNightSettingsScreenPresenterD1Ev), UNUSED)

<P><STRONG><a name="[176]"></a>opConfigSettingsScreenPresenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, opconfigsettingsscreenpresenter.o(i._ZN31opConfigSettingsScreenPresenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenpresenter.o(.constdata__ZTV31opConfigSettingsScreenPresenter)
</UL>
<P><STRONG><a name="[390]"></a>opConfigSettingsScreenPresenter::getLightOp()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, opconfigsettingsscreenpresenter.o(i._ZN31opConfigSettingsScreenPresenter10getLightOpEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = opConfigSettingsScreenPresenter::getLightOp()
</UL>
<BR>[Calls]<UL><LI><a href="#[3b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getLightOp()
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::setupScreen()
</UL>

<P><STRONG><a name="[38e]"></a>opConfigSettingsScreenPresenter::getHeaterOp()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, opconfigsettingsscreenpresenter.o(i._ZN31opConfigSettingsScreenPresenter11getHeaterOpEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = opConfigSettingsScreenPresenter::getHeaterOp()
</UL>
<BR>[Calls]<UL><LI><a href="#[3b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getHeaterOp()
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::setupScreen()
</UL>

<P><STRONG><a name="[391]"></a>opConfigSettingsScreenPresenter::changeHumiOp(int)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, opconfigsettingsscreenpresenter.o(i._ZN31opConfigSettingsScreenPresenter12changeHumiOpEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = opConfigSettingsScreenPresenter::changeHumiOp(int) &rArr; Model::changeHumiOp(int) &rArr; actuator::disconnect() &rArr; opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeHumiOp(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::op3HumiBtnClicked()
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::op2HumiBtnClicked()
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::op1HumiBtnClicked()
</UL>

<P><STRONG><a name="[392]"></a>opConfigSettingsScreenPresenter::changeLightOp(int)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, opconfigsettingsscreenpresenter.o(i._ZN31opConfigSettingsScreenPresenter13changeLightOpEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = opConfigSettingsScreenPresenter::changeLightOp(int) &rArr; Model::changeLightOp(int) &rArr; actuator::disconnect() &rArr; opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeLightOp(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::op3LightBtnClicked()
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::op2LightBtnClicked()
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::op1LightBtnClicked()
</UL>

<P><STRONG><a name="[393]"></a>opConfigSettingsScreenPresenter::changeHeaterOp(int)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, opconfigsettingsscreenpresenter.o(i._ZN31opConfigSettingsScreenPresenter14changeHeaterOpEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = opConfigSettingsScreenPresenter::changeHeaterOp(int) &rArr; Model::changeHeaterOp(int) &rArr; actuator::disconnect() &rArr; opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeHeaterOp(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::op3HeaterBtnClicked()
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::op2HeaterBtnClicked()
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::op1HeaterBtnClicked()
</UL>

<P><STRONG><a name="[175]"></a>opConfigSettingsScreenPresenter::activate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, opconfigsettingsscreenpresenter.o(i._ZN31opConfigSettingsScreenPresenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenpresenter.o(.constdata__ZTV31opConfigSettingsScreenPresenter)
</UL>
<P><STRONG><a name="[38f]"></a>opConfigSettingsScreenPresenter::getHumiOp()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, opconfigsettingsscreenpresenter.o(i._ZN31opConfigSettingsScreenPresenter9getHumiOpEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = opConfigSettingsScreenPresenter::getHumiOp()
</UL>
<BR>[Calls]<UL><LI><a href="#[3bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getHumiOp()
</UL>
<BR>[Called By]<UL><LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::setupScreen()
</UL>

<P><STRONG><a name="[4b2]"></a>opConfigSettingsScreenPresenter::opConfigSettingsScreenPresenter(opConfigSettingsScreenView&)</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, opconfigsettingsscreenpresenter.o(i._ZN31opConfigSettingsScreenPresenterC1ER26opConfigSettingsScreenView))
<BR><BR>[Called By]<UL><LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;opConfigSettingsScreenView, opConfigSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[52d]"></a>opConfigSettingsScreenPresenter::opConfigSettingsScreenPresenter__sub_object(opConfigSettingsScreenView&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, opconfigsettingsscreenpresenter.o(i._ZN31opConfigSettingsScreenPresenterC1ER26opConfigSettingsScreenView), UNUSED)

<P><STRONG><a name="[177]"></a>opConfigSettingsScreenPresenter::~opConfigSettingsScreenPresenter()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, opconfigsettingsscreenpresenter.o(i._ZN31opConfigSettingsScreenPresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenpresenter.o(.constdata__ZTV31opConfigSettingsScreenPresenter)
</UL>
<P><STRONG><a name="[52e]"></a>opConfigSettingsScreenPresenter::~opConfigSettingsScreenPresenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, opconfigsettingsscreenpresenter.o(i._ZN31opConfigSettingsScreenPresenterD1Ev), UNUSED)

<P><STRONG><a name="[179]"></a>tempHumiSettingsScreenPresenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, temphumisettingsscreenpresenter.o(i._ZN31tempHumiSettingsScreenPresenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> temphumisettingsscreenpresenter.o(.constdata__ZTV31tempHumiSettingsScreenPresenter)
</UL>
<P><STRONG><a name="[398]"></a>tempHumiSettingsScreenPresenter::getDayNomHumi()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, temphumisettingsscreenpresenter.o(i._ZN31tempHumiSettingsScreenPresenter13getDayNomHumiEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tempHumiSettingsScreenPresenter::getDayNomHumi()
</UL>
<BR>[Calls]<UL><LI><a href="#[3be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getDayNomHumi()
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::setupScreen()
</UL>

<P><STRONG><a name="[396]"></a>tempHumiSettingsScreenPresenter::getDayNomTemp()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, temphumisettingsscreenpresenter.o(i._ZN31tempHumiSettingsScreenPresenter13getDayNomTempEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tempHumiSettingsScreenPresenter::getDayNomTemp()
</UL>
<BR>[Calls]<UL><LI><a href="#[3bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getDayNomTemp()
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::setupScreen()
</UL>

<P><STRONG><a name="[399]"></a>tempHumiSettingsScreenPresenter::getNightNomHumi()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, temphumisettingsscreenpresenter.o(i._ZN31tempHumiSettingsScreenPresenter15getNightNomHumiEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tempHumiSettingsScreenPresenter::getNightNomHumi()
</UL>
<BR>[Calls]<UL><LI><a href="#[3c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getNightNomHumi()
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::setupScreen()
</UL>

<P><STRONG><a name="[397]"></a>tempHumiSettingsScreenPresenter::getNightNomTemp()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, temphumisettingsscreenpresenter.o(i._ZN31tempHumiSettingsScreenPresenter15getNightNomTempEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = tempHumiSettingsScreenPresenter::getNightNomTemp()
</UL>
<BR>[Calls]<UL><LI><a href="#[3c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getNightNomTemp()
</UL>
<BR>[Called By]<UL><LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::setupScreen()
</UL>

<P><STRONG><a name="[39e]"></a>tempHumiSettingsScreenPresenter::changeDayNomHumi(int)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, temphumisettingsscreenpresenter.o(i._ZN31tempHumiSettingsScreenPresenter16changeDayNomHumiEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tempHumiSettingsScreenPresenter::changeDayNomHumi(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::setDayNomHumi(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[14a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::dayHumiSliderValueChanged(int)
</UL>

<P><STRONG><a name="[39f]"></a>tempHumiSettingsScreenPresenter::changeDayNomTemp(int)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, temphumisettingsscreenpresenter.o(i._ZN31tempHumiSettingsScreenPresenter16changeDayNomTempEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tempHumiSettingsScreenPresenter::changeDayNomTemp(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::setDayNomTemp(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[148]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::dayTempSliderValueChanged(int)
</UL>

<P><STRONG><a name="[3a0]"></a>tempHumiSettingsScreenPresenter::changeNightNomHumi(int)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, temphumisettingsscreenpresenter.o(i._ZN31tempHumiSettingsScreenPresenter18changeNightNomHumiEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tempHumiSettingsScreenPresenter::changeNightNomHumi(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::setNightNomHumi(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[14b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::nightHumiSliderValueChanged(int)
</UL>

<P><STRONG><a name="[3a1]"></a>tempHumiSettingsScreenPresenter::changeNightNomTemp(int)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, temphumisettingsscreenpresenter.o(i._ZN31tempHumiSettingsScreenPresenter18changeNightNomTempEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = tempHumiSettingsScreenPresenter::changeNightNomTemp(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::setNightNomTemp(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[149]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::nightTempSliderValueChanged(int)
</UL>

<P><STRONG><a name="[178]"></a>tempHumiSettingsScreenPresenter::activate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, temphumisettingsscreenpresenter.o(i._ZN31tempHumiSettingsScreenPresenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> temphumisettingsscreenpresenter.o(.constdata__ZTV31tempHumiSettingsScreenPresenter)
</UL>
<P><STRONG><a name="[4b3]"></a>tempHumiSettingsScreenPresenter::tempHumiSettingsScreenPresenter(tempHumiSettingsScreenView&)</STRONG> (Thumb, 38 bytes, Stack size 0 bytes, temphumisettingsscreenpresenter.o(i._ZN31tempHumiSettingsScreenPresenterC1ER26tempHumiSettingsScreenView))
<BR><BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;tempHumiSettingsScreenView, tempHumiSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[52f]"></a>tempHumiSettingsScreenPresenter::tempHumiSettingsScreenPresenter__sub_object(tempHumiSettingsScreenView&)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, temphumisettingsscreenpresenter.o(i._ZN31tempHumiSettingsScreenPresenterC1ER26tempHumiSettingsScreenView), UNUSED)

<P><STRONG><a name="[17a]"></a>tempHumiSettingsScreenPresenter::~tempHumiSettingsScreenPresenter()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, temphumisettingsscreenpresenter.o(i._ZN31tempHumiSettingsScreenPresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> temphumisettingsscreenpresenter.o(.constdata__ZTV31tempHumiSettingsScreenPresenter)
</UL>
<P><STRONG><a name="[530]"></a>tempHumiSettingsScreenPresenter::~tempHumiSettingsScreenPresenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, temphumisettingsscreenpresenter.o(i._ZN31tempHumiSettingsScreenPresenterD1Ev), UNUSED)

<P><STRONG><a name="[3ab]"></a>Model::changeHour(int)</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, model.o(i._ZN5Model10changeHourEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Model::changeHour(int) &rArr; HAL_RTC_SetTime &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[37d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::changeHour(int)
</UL>

<P><STRONG><a name="[3ac]"></a>Model::changeYear(int)</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, model.o(i._ZN5Model10changeYearEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Model::changeYear(int) &rArr; HAL_RTC_SetDate &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[37e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::changeYear(int)
</UL>

<P><STRONG><a name="[3b8]"></a>Model::getLightOp()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(i._ZN5Model10getLightOpEv))
<BR><BR>[Called By]<UL><LI><a href="#[390]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenPresenter::getLightOp()
</UL>

<P><STRONG><a name="[3c6]"></a>Model::humiAction()</STRONG> (Thumb, 182 bytes, Stack size 8 bytes, model.o(i._ZN5Model10humiActionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = Model::humiAction() &rArr; sensor::getHumi() &rArr; readData(unsigned char*, int) &rArr; delay(unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clockTime::isDay(clockTime&, clockTime&)
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actuator::setState(bool)
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor::getHumi()
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::tick()
</UL>

<P><STRONG><a name="[3ca]"></a>Model::tempAction()</STRONG> (Thumb, 216 bytes, Stack size 8 bytes, model.o(i._ZN5Model10tempActionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Model::tempAction() &rArr; sensor::getTemp() &rArr; readData(unsigned char*, int) &rArr; delay(unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clockTime::isDay(clockTime&, clockTime&)
<LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actuator::setState(bool)
<LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor::getTemp()
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::tick()
</UL>

<P><STRONG><a name="[3ad]"></a>Model::changeMonth(int)</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, model.o(i._ZN5Model11changeMonthEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Model::changeMonth(int) &rArr; HAL_RTC_SetDate &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[37f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::changeMonth(int)
</UL>

<P><STRONG><a name="[3b9]"></a>Model::getHeaterOp()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(i._ZN5Model11getHeaterOpEv))
<BR><BR>[Called By]<UL><LI><a href="#[38e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenPresenter::getHeaterOp()
</UL>

<P><STRONG><a name="[349]"></a>Model::getHumidity()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(i._ZN5Model11getHumidityEv))
<BR><BR>[Called By]<UL><LI><a href="#[323]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::getHumidity()
</UL>

<P><STRONG><a name="[3ba]"></a>Model::changeHumiOp(int)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, model.o(i._ZN5Model12changeHumiOpEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Model::changeHumiOp(int) &rArr; actuator::disconnect() &rArr; opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actuator::setOpSocket(const opSocket&)
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actuator::disconnect()
</UL>
<BR>[Called By]<UL><LI><a href="#[391]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenPresenter::changeHumiOp(int)
</UL>

<P><STRONG><a name="[3b0]"></a>Model::getDayEndMin()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, model.o(i._ZN5Model12getDayEndMinEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Model::getDayEndMin()
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clockTime::getMin()
</UL>
<BR>[Called By]<UL><LI><a href="#[385]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::getDayEndMin()
</UL>

<P><STRONG><a name="[3bb]"></a>Model::changeLightOp(int)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, model.o(i._ZN5Model13changeLightOpEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Model::changeLightOp(int) &rArr; actuator::disconnect() &rArr; opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actuator::setOpSocket(const opSocket&)
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actuator::disconnect()
</UL>
<BR>[Called By]<UL><LI><a href="#[392]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenPresenter::changeLightOp(int)
</UL>

<P><STRONG><a name="[3b1]"></a>Model::getDayEndHour()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, model.o(i._ZN5Model13getDayEndHourEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Model::getDayEndHour()
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clockTime::getHour()
</UL>
<BR>[Called By]<UL><LI><a href="#[386]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::getDayEndHour()
</UL>

<P><STRONG><a name="[3be]"></a>Model::getDayNomHumi()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(i._ZN5Model13getDayNomHumiEv))
<BR><BR>[Called By]<UL><LI><a href="#[398]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenPresenter::getDayNomHumi()
</UL>

<P><STRONG><a name="[3bf]"></a>Model::getDayNomTemp()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(i._ZN5Model13getDayNomTempEv))
<BR><BR>[Called By]<UL><LI><a href="#[396]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenPresenter::getDayNomTemp()
</UL>

<P><STRONG><a name="[3c2]"></a>Model::setDayNomHumi(int)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, model.o(i._ZN5Model13setDayNomHumiEi))
<BR><BR>[Called By]<UL><LI><a href="#[39e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenPresenter::changeDayNomHumi(int)
</UL>

<P><STRONG><a name="[3c3]"></a>Model::setDayNomTemp(int)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, model.o(i._ZN5Model13setDayNomTempEi))
<BR><BR>[Called By]<UL><LI><a href="#[39f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenPresenter::changeDayNomTemp(int)
</UL>

<P><STRONG><a name="[3bc]"></a>Model::changeHeaterOp(int)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, model.o(i._ZN5Model14changeHeaterOpEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = Model::changeHeaterOp(int) &rArr; actuator::disconnect() &rArr; opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[3cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actuator::setOpSocket(const opSocket&)
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actuator::disconnect()
</UL>
<BR>[Called By]<UL><LI><a href="#[393]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenPresenter::changeHeaterOp(int)
</UL>

<P><STRONG><a name="[3b2]"></a>Model::getDayBeginMin()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, model.o(i._ZN5Model14getDayBeginMinEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Model::getDayBeginMin()
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clockTime::getMin()
</UL>
<BR>[Called By]<UL><LI><a href="#[383]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::getDayBeginMin()
</UL>

<P><STRONG><a name="[34a]"></a>Model::getHeatOpState()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, model.o(i._ZN5Model14getHeatOpStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Model::getHeatOpState() &rArr; actuator::getState() &rArr; opSocket::getOpState()
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actuator::getState()
</UL>
<BR>[Called By]<UL><LI><a href="#[318]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::getHeatOpState()
</UL>

<P><STRONG><a name="[34b]"></a>Model::getHumiOpState()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, model.o(i._ZN5Model14getHumiOpStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Model::getHumiOpState() &rArr; actuator::getState() &rArr; opSocket::getOpState()
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actuator::getState()
</UL>
<BR>[Called By]<UL><LI><a href="#[315]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::getHumiOpState()
</UL>

<P><STRONG><a name="[34c]"></a>Model::getTemperature()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(i._ZN5Model14getTemperatureEv))
<BR><BR>[Called By]<UL><LI><a href="#[321]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::getTemperature()
</UL>

<P><STRONG><a name="[3b3]"></a>Model::changeDayEndMin(int)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, model.o(i._ZN5Model15changeDayEndMinEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Model::changeDayEndMin(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clockTime::setMin(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[388]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::changeDayEndMin(int)
</UL>

<P><STRONG><a name="[3b4]"></a>Model::getDayBeginHour()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, model.o(i._ZN5Model15getDayBeginHourEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Model::getDayBeginHour()
</UL>
<BR>[Calls]<UL><LI><a href="#[3cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clockTime::getHour()
</UL>
<BR>[Called By]<UL><LI><a href="#[384]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::getDayBeginHour()
</UL>

<P><STRONG><a name="[34d]"></a>Model::getLightOpState()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, model.o(i._ZN5Model15getLightOpStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = Model::getLightOpState() &rArr; actuator::getState() &rArr; opSocket::getOpState()
</UL>
<BR>[Calls]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actuator::getState()
</UL>
<BR>[Called By]<UL><LI><a href="#[317]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::getLightOpState()
</UL>

<P><STRONG><a name="[3c0]"></a>Model::getNightNomHumi()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(i._ZN5Model15getNightNomHumiEv))
<BR><BR>[Called By]<UL><LI><a href="#[399]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenPresenter::getNightNomHumi()
</UL>

<P><STRONG><a name="[3c1]"></a>Model::getNightNomTemp()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(i._ZN5Model15getNightNomTempEv))
<BR><BR>[Called By]<UL><LI><a href="#[397]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenPresenter::getNightNomTemp()
</UL>

<P><STRONG><a name="[3c4]"></a>Model::setNightNomHumi(int)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, model.o(i._ZN5Model15setNightNomHumiEi))
<BR><BR>[Called By]<UL><LI><a href="#[3a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenPresenter::changeNightNomHumi(int)
</UL>

<P><STRONG><a name="[3c5]"></a>Model::setNightNomTemp(int)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, model.o(i._ZN5Model15setNightNomTempEi))
<BR><BR>[Called By]<UL><LI><a href="#[3a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenPresenter::changeNightNomTemp(int)
</UL>

<P><STRONG><a name="[3b5]"></a>Model::changeDayEndHour(int)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, model.o(i._ZN5Model16changeDayEndHourEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Model::changeDayEndHour(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clockTime::setHour(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[389]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::changeDayEndHour(int)
</UL>

<P><STRONG><a name="[3b6]"></a>Model::changeDayBeginMin(int)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, model.o(i._ZN5Model17changeDayBeginMinEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Model::changeDayBeginMin(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clockTime::setMin(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[38a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::changeDayBeginMin(int)
</UL>

<P><STRONG><a name="[34e]"></a>Model::changeHeatOpState(bool)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, model.o(i._ZN5Model17changeHeatOpStateEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Model::changeHeatOpState(bool) &rArr; actuator::setState(bool) &rArr; opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actuator::setState(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[326]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::changeHeatOpState(bool)
</UL>

<P><STRONG><a name="[34f]"></a>Model::changeHumiOpState(bool)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, model.o(i._ZN5Model17changeHumiOpStateEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Model::changeHumiOpState(bool) &rArr; actuator::setState(bool) &rArr; opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actuator::setState(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[329]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::changeHumiOpState(bool)
</UL>

<P><STRONG><a name="[3b7]"></a>Model::changeDayBeginHour(int)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, model.o(i._ZN5Model18changeDayBeginHourEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = Model::changeDayBeginHour(int)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clockTime::setHour(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[38b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::changeDayBeginHour(int)
</UL>

<P><STRONG><a name="[350]"></a>Model::changeLightOpState(bool)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, model.o(i._ZN5Model18changeLightOpStateEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = Model::changeLightOpState(bool) &rArr; actuator::setState(bool) &rArr; opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actuator::setState(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[324]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::changeLightOpState(bool)
</UL>

<P><STRONG><a name="[351]"></a>Model::getManualOverrideState()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, model.o(i._ZN5Model22getManualOverrideStateEv))
<BR><BR>[Called By]<UL><LI><a href="#[319]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::getManualOverrideState()
</UL>

<P><STRONG><a name="[352]"></a>Model::changeManualOverrideState(bool)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(i._ZN5Model25changeManualOverrideStateEb))
<BR><BR>[Called By]<UL><LI><a href="#[32c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::changeManualOverrideState(bool)
</UL>

<P><STRONG><a name="[4a2]"></a>Model::bind(ModelListener*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN5Model4bindEP13ModelListener))
<BR><BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;tempHumiSettingsScreenView, tempHumiSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;opConfigSettingsScreenView, opConfigSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;dayNightSettingsScreenView, dayNightSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;dateTimeSettingsScreenView, dateTimeSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[347]"></a>Model::tick()</STRONG> (Thumb, 228 bytes, Stack size 24 bytes, model.o(i._ZN5Model4tickEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = Model::tick() &rArr; Model::humiAction() &rArr; sensor::getHumi() &rArr; readData(unsigned char*, int) &rArr; delay(unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[3d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor::trigTemp()
<LI><a href="#[3d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor::trigHumi()
<LI><a href="#[3d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor::reset()
<LI><a href="#[2c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetTime
<LI><a href="#[2c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_GetDate
<LI><a href="#[3d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clockTime::setHour(int)
<LI><a href="#[3d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clockTime::setMin(int)
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::tempAction()
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::humiAction()
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::handleTickEvent()
</UL>

<P><STRONG><a name="[353]"></a>Model::getDay()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, model.o(i._ZN5Model6getDayEv))
<BR><BR>[Called By]<UL><LI><a href="#[375]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::getDay()
<LI><a href="#[31d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::getDay()
</UL>

<P><STRONG><a name="[354]"></a>Model::getMin()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, model.o(i._ZN5Model6getMinEv))
<BR><BR>[Called By]<UL><LI><a href="#[379]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::getMin()
<LI><a href="#[31b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::getMin()
</UL>

<P><STRONG><a name="[355]"></a>Model::getHour()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, model.o(i._ZN5Model7getHourEv))
<BR><BR>[Called By]<UL><LI><a href="#[377]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::getHour()
<LI><a href="#[31c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::getHour()
</UL>

<P><STRONG><a name="[356]"></a>Model::getYear()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, model.o(i._ZN5Model7getYearEv))
<BR><BR>[Called By]<UL><LI><a href="#[371]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::getYear()
<LI><a href="#[31f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::getYear()
</UL>

<P><STRONG><a name="[357]"></a>Model::getMonth()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, model.o(i._ZN5Model8getMonthEv))
<BR><BR>[Called By]<UL><LI><a href="#[373]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::getMonth()
<LI><a href="#[31e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::getMonth()
</UL>

<P><STRONG><a name="[3ae]"></a>Model::changeDay(int)</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, model.o(i._ZN5Model9changeDayEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Model::changeDay(int) &rArr; HAL_RTC_SetDate &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[2c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetDate
</UL>
<BR>[Called By]<UL><LI><a href="#[37b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::changeDay(int)
</UL>

<P><STRONG><a name="[3af]"></a>Model::changeMin(int)</STRONG> (Thumb, 64 bytes, Stack size 32 bytes, model.o(i._ZN5Model9changeMinEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = Model::changeMin(int) &rArr; HAL_RTC_SetTime &rArr; RTC_EnterInitMode
</UL>
<BR>[Calls]<UL><LI><a href="#[2cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_RTC_SetTime
</UL>
<BR>[Called By]<UL><LI><a href="#[37c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::changeMin(int)
</UL>

<P><STRONG><a name="[3bd]"></a>Model::getHumiOp()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(i._ZN5Model9getHumiOpEv))
<BR><BR>[Called By]<UL><LI><a href="#[38f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenPresenter::getHumiOp()
</UL>

<P><STRONG><a name="[311]"></a>Model::Model()</STRONG> (Thumb, 110 bytes, Stack size 8 bytes, model.o(i._ZN5ModelC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = Model::Model()
</UL>
<BR>[Calls]<UL><LI><a href="#[3d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor::sensor()
<LI><a href="#[3d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clockTime::clockTime(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
</UL>

<P><STRONG><a name="[531]"></a>Model::Model__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, model.o(i._ZN5ModelC1Ev), UNUSED)

<P><STRONG><a name="[3d3]"></a>sensor::reset()</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, sensor.o(i._ZN6sensor5resetEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = sensor::reset() &rArr; delay(unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
<LI><a href="#[2ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;delay(unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::tick()
</UL>

<P><STRONG><a name="[3c7]"></a>sensor::getHumi()</STRONG> (Thumb, 182 bytes, Stack size 56 bytes, sensor.o(i._ZN6sensor7getHumiEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = sensor::getHumi() &rArr; readData(unsigned char*, int) &rArr; delay(unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readData(unsigned char*, int)
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::humiAction()
</UL>

<P><STRONG><a name="[3cb]"></a>sensor::getTemp()</STRONG> (Thumb, 138 bytes, Stack size 32 bytes, sensor.o(i._ZN6sensor7getTempEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = sensor::getTemp() &rArr; readData(unsigned char*, int) &rArr; delay(unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;readData(unsigned char*, int)
<LI><a href="#[3d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dmul
<LI><a href="#[3db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_cdcmple
<LI><a href="#[3d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_i2d
<LI><a href="#[3dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_d2iz
<LI><a href="#[3da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dsub
<LI><a href="#[3dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::tempAction()
</UL>

<P><STRONG><a name="[3d5]"></a>sensor::trigHumi()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sensor.o(i._ZN6sensor8trigHumiEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sensor::trigHumi() &rArr; writeCmd(unsigned char) &rArr; writeData(unsigned char) &rArr; delay(unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeCmd(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::tick()
</UL>

<P><STRONG><a name="[3d4]"></a>sensor::trigTemp()</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, sensor.o(i._ZN6sensor8trigTempEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = sensor::trigTemp() &rArr; writeCmd(unsigned char) &rArr; writeData(unsigned char) &rArr; delay(unsigned)
</UL>
<BR>[Calls]<UL><LI><a href="#[2ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;writeCmd(unsigned char)
</UL>
<BR>[Called By]<UL><LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::tick()
</UL>

<P><STRONG><a name="[3d7]"></a>sensor::sensor()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sensor.o(i._ZN6sensorC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::Model()
</UL>

<P><STRONG><a name="[532]"></a>sensor::sensor__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, sensor.o(i._ZN6sensorC1Ev), UNUSED)

<P><STRONG><a name="[312]"></a>sensor::~sensor()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, sensor.o(i._ZN6sensorD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap()
</UL>

<P><STRONG><a name="[533]"></a>sensor::~sensor__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, sensor.o(i._ZN6sensorD1Ev), UNUSED)

<P><STRONG><a name="[3cc]"></a>actuator::disconnect()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, actuator.o(i._ZN8actuator10disconnectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = actuator::disconnect() &rArr; opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opSocket::setOpState(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeHeaterOp(int)
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeLightOp(int)
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeHumiOp(int)
</UL>

<P><STRONG><a name="[3cd]"></a>actuator::setOpSocket(const opSocket&)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, actuator.o(i._ZN8actuator11setOpSocketERK8opSocket))
<BR><BR>[Called By]<UL><LI><a href="#[3bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeHeaterOp(int)
<LI><a href="#[3bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeLightOp(int)
<LI><a href="#[3ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeHumiOp(int)
</UL>

<P><STRONG><a name="[3d0]"></a>actuator::getState()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, actuator.o(i._ZN8actuator8getStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = actuator::getState() &rArr; opSocket::getOpState()
</UL>
<BR>[Calls]<UL><LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opSocket::getOpState()
</UL>
<BR>[Called By]<UL><LI><a href="#[34d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getLightOpState()
<LI><a href="#[34b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getHumiOpState()
<LI><a href="#[34a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getHeatOpState()
</UL>

<P><STRONG><a name="[3c9]"></a>actuator::setState(bool)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, actuator.o(i._ZN8actuator8setStateEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = actuator::setState(bool) &rArr; opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opSocket::setOpState(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[350]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeLightOpState(bool)
<LI><a href="#[34f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeHumiOpState(bool)
<LI><a href="#[34e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeHeatOpState(bool)
<LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::tempAction()
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::humiAction()
</UL>

<P><STRONG><a name="[3e0]"></a>actuator::actuator(opSocket&, bool)</STRONG> (Thumb, 46 bytes, Stack size 16 bytes, model.o(i._ZN8actuatorC1ER8opSocketb))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = actuator::actuator(opSocket&, bool) &rArr; opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[3de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opSocket::setOpState(bool)
<LI><a href="#[3df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opSocket::getOpState()
</UL>
<BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___9_Model_cpp_measTemp
</UL>

<P><STRONG><a name="[534]"></a>actuator::actuator__sub_object(opSocket&, bool)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, model.o(i._ZN8actuatorC1ER8opSocketb), UNUSED)

<P><STRONG><a name="[92]"></a>actuator::~actuator()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, model.o(i._ZN8actuatorD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> model.o(i.__sti___9_Model_cpp_measTemp)
</UL>
<P><STRONG><a name="[535]"></a>actuator::~actuator__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, model.o(i._ZN8actuatorD1Ev), UNUSED)

<P><STRONG><a name="[3df]"></a>opSocket::getOpState()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, opsocket.o(i._ZN8opSocket10getOpStateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = opSocket::getOpState()
</UL>
<BR>[Calls]<UL><LI><a href="#[2fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_ReadPin
</UL>
<BR>[Called By]<UL><LI><a href="#[3d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actuator::getState()
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actuator::actuator(opSocket&, bool)
</UL>

<P><STRONG><a name="[3de]"></a>opSocket::setOpState(bool)</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, opsocket.o(i._ZN8opSocket10setOpStateEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = opSocket::setOpState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[26e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_WritePin
</UL>
<BR>[Called By]<UL><LI><a href="#[3c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actuator::setState(bool)
<LI><a href="#[3cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actuator::disconnect()
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actuator::actuator(opSocket&, bool)
</UL>

<P><STRONG><a name="[46b]"></a>opSocket::opSocket(GPIO_TypeDef*, unsigned)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(i._ZN8opSocketC1EP12GPIO_TypeDefj))
<BR><BR>[Called By]<UL><LI><a href="#[230]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___9_Model_cpp_measTemp
</UL>

<P><STRONG><a name="[536]"></a>opSocket::opSocket__sub_object(GPIO_TypeDef*, unsigned)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, model.o(i._ZN8opSocketC1EP12GPIO_TypeDefj), UNUSED)

<P><STRONG><a name="[91]"></a>opSocket::~opSocket()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, model.o(i._ZN8opSocketD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> model.o(i.__sti___9_Model_cpp_measTemp)
</UL>
<P><STRONG><a name="[537]"></a>opSocket::~opSocket__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, model.o(i._ZN8opSocketD1Ev), UNUSED)

<P><STRONG><a name="[43e]"></a>touchgfx::ClickEvent::ClickEvent(touchgfx::ClickEvent::ClickEventType, short, short, short)</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, screen.o(i._ZN8touchgfx10ClickEventC1ENS0_14ClickEventTypeEsss))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::ClickEvent::ClickEvent(touchgfx::ClickEvent::ClickEventType, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)
</UL>

<P><STRONG><a name="[538]"></a>touchgfx::ClickEvent::ClickEvent__sub_object(touchgfx::ClickEvent::ClickEventType, short, short, short)</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, screen.o(i._ZN8touchgfx10ClickEventC1ENS0_14ClickEventTypeEsss), UNUSED)

<P><STRONG><a name="[3e1]"></a>touchgfx::OSWrappers::initialize()</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::OSWrappers::initialize() &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>
<BR>[Called By]<UL><LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::initialize()
</UL>

<P><STRONG><a name="[2dc]"></a>touchgfx::OSWrappers::signalVSync()</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers11signalVSyncEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::OSWrappers::signalVSync() &rArr; xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
</UL>

<P><STRONG><a name="[3e5]"></a>touchgfx::OSWrappers::waitForVSync()</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers12waitForVSyncEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::OSWrappers::waitForVSync() &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::taskEntry()
</UL>

<P><STRONG><a name="[3e7]"></a>touchgfx::OSWrappers::giveFrameBufferSemaphore()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers24giveFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::OSWrappers::giveFrameBufferSemaphore() &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>
<BR>[Called By]<UL><LI><a href="#[bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::unlockFrameBuffer()
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::waitForFrameBufferSemaphore()
</UL>

<P><STRONG><a name="[3e8]"></a>touchgfx::OSWrappers::takeFrameBufferSemaphore()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers24takeFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::OSWrappers::takeFrameBufferSemaphore() &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
<LI><a href="#[b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::waitForFrameBufferSemaphore()
</UL>

<P><STRONG><a name="[3e9]"></a>touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers27tryTakeFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::OSWrappers::tryTakeFrameBufferSemaphore() &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>
<BR>[Called By]<UL><LI><a href="#[ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[3ea]"></a>touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR()</STRONG> (Thumb, 38 bytes, Stack size 8 bytes, oswrappers.o(i._ZN8touchgfx10OSWrappers31giveFrameBufferSemaphoreFromISREv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR() &rArr; xQueueGiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
</UL>
<BR>[Called By]<UL><LI><a href="#[b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::executeCompleted()
</UL>

<P><STRONG><a name="[17c]"></a>touchgfx::Transition::handleTickEvent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition15handleTickEventEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
</UL>
<P><STRONG><a name="[17f]"></a>touchgfx::Transition::setScreenContainer(touchgfx::Container&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition18setScreenContainerERNS_9ContainerE))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE3EEE)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
</UL>
<P><STRONG><a name="[17e]"></a>touchgfx::Transition::init()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition4initEv))
<BR>[Address Reference Count : 2]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[17d]"></a>touchgfx::Transition::tearDown()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10Transition8tearDownEv))
<BR>[Address Reference Count : 2]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[3fb]"></a>touchgfx::Transition::Transition()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10TransitionC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::SlideTransition(unsigned char)
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::SlideTransition(unsigned char)
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::NoTransition()
</UL>

<P><STRONG><a name="[539]"></a>touchgfx::Transition::Transition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10TransitionC1Ev), UNUSED)

<P><STRONG><a name="[17b]"></a>touchgfx::Transition::~Transition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10TransitionD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx10TransitionE)
</UL>
<P><STRONG><a name="[53a]"></a>touchgfx::Transition::~Transition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx10TransitionD1Ev), UNUSED)

<P><STRONG><a name="[32f]"></a>touchgfx::Application::getInstance()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application11getInstanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
<LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::moveRelative(short, short)
<LI><a href="#[9a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
<LI><a href="#[a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[9b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
<LI><a href="#[a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
<LI><a href="#[358]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::application()
<LI><a href="#[a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
<LI><a href="#[a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::buttonCallbackHandler(const touchgfx::AbstractButton&)
<LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[107]"></a>touchgfx::Application::handleKeyEvent(unsigned char)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application14handleKeyEventEh))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[3ec]"></a>touchgfx::Application::invalidateArea(touchgfx::Rect)</STRONG> (Thumb, 242 bytes, Stack size 56 bytes, application.o(i._ZN8touchgfx11Application14invalidateAreaENS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect)
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(const touchgfx::Rect&) const
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::includes(const touchgfx::Rect&) const
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::expandToFit(const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::draw(touchgfx::Rect&)
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
</UL>

<P><STRONG><a name="[105]"></a>touchgfx::Application::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application15handleDragEventERKNS_9DragEventE))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[11c]"></a>touchgfx::Application::handleTickEvent()</STRONG> (Thumb, 252 bytes, Stack size 24 bytes, application.o(i._ZN8touchgfx11Application15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Application::handleTickEvent()
</UL>
<BR>[Called By]<UL><LI><a href="#[108]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplication::handleTickEvent()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> frontendapplication.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[104]"></a>touchgfx::Application::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application16handleClickEventERKNS_10ClickEventE))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[106]"></a>touchgfx::Application::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application18handleGestureEventERKNS_12GestureEventE))
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[10c]"></a>touchgfx::Application::cacheDrawOperations(bool)</STRONG> (Thumb, 684 bytes, Stack size 136 bytes, application.o(i._ZN8touchgfx11Application19cacheDrawOperationsEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 248 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::cacheDrawOperations(bool) &rArr; touchgfx::Application::invalidateArea(touchgfx::Rect) &rArr; touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[3f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::nextRand()
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector()
<LI><a href="#[3f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect)
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[3f9]"></a>touchgfx::Application::clearAllTimerWidgets()</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application20clearAllTimerWidgetsEv))
<BR><BR>[Called By]<UL><LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
</UL>

<P><STRONG><a name="[180]"></a>touchgfx::Application::handlePendingScreenTransition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx11Application29handlePendingScreenTransitionEv))
<BR>[Address Reference Count : 1]<UL><LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[10b]"></a>touchgfx::Application::draw(touchgfx::Rect&)</STRONG> (Thumb, 114 bytes, Stack size 40 bytes, application.o(i._ZN8touchgfx11Application4drawERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = touchgfx::Application::draw(touchgfx::Rect&) &rArr; touchgfx::enableFl(touchgfx::Rect&) &rArr; touchgfx::Rect::operator &(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::enableFl(touchgfx::Rect&)
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[10a]"></a>touchgfx::Application::draw()</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, application.o(i._ZN8touchgfx11Application4drawEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Application::draw() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> frontendapplication.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
<LI> application.o(.constdata__ZTVN8touchgfx11ApplicationE)
</UL>
<P><STRONG><a name="[36f]"></a>touchgfx::Application::Application()</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11ApplicationC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::Application::Application() &rArr; touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector() &rArr; __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Calls]<UL><LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::clearAllTimerWidgets()
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector()
</UL>
<BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
</UL>

<P><STRONG><a name="[53b]"></a>touchgfx::Application::Application__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, application.o(i._ZN8touchgfx11ApplicationC1Ev), UNUSED)

<P><STRONG><a name="[4ba]"></a>touchgfx::FontManager::setFontProvider(touchgfx::FontProvider*)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, fontmanager.o(i._ZN8touchgfx11FontManager15setFontProviderEPNS_12FontProviderE))
<BR><BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[455]"></a>touchgfx::GestureEvent::GestureEvent(touchgfx::GestureEvent::GestureType, short, short, short)</STRONG> (Thumb, 18 bytes, Stack size 12 bytes, gestures.o(i._ZN8touchgfx12GestureEventC1ENS0_11GestureTypeEsss))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::GestureEvent::GestureEvent(touchgfx::GestureEvent::GestureType, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[53c]"></a>touchgfx::GestureEvent::GestureEvent__sub_object(touchgfx::GestureEvent::GestureType, short, short, short)</STRONG> (Thumb, 0 bytes, Stack size 12 bytes, gestures.o(i._ZN8touchgfx12GestureEventC1ENS0_11GestureTypeEsss), UNUSED)

<P><STRONG><a name="[183]"></a>touchgfx::NoTransition::handleTickEvent()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransition15handleTickEventEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[3fa]"></a>touchgfx::NoTransition::NoTransition()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::NoTransition::NoTransition()
</UL>
<BR>[Calls]<UL><LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::Transition()
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[53d]"></a>touchgfx::NoTransition::NoTransition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionC1Ev), UNUSED)

<P><STRONG><a name="[182]"></a>touchgfx::NoTransition::~NoTransition()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx12NoTransitionE)
</UL>
<P><STRONG><a name="[53e]"></a>touchgfx::NoTransition::~NoTransition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx12NoTransitionD1Ev), UNUSED)

<P><STRONG><a name="[3fc]"></a>touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, textprovider.o(i._ZN8touchgfx12TextProvider10initializeEPKtSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list) &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::getNextCharInternal()
</UL>
<BR>[Calls]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::calculateTextHeight(const unsigned short*, ...) const
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getNumberOfLines(const unsigned short*, ...) const
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getMaxTextHeight(const unsigned short*, ...) const
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getSpacingAbove(const unsigned short*, ...) const
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextHeightInternal(const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[3fe]"></a>touchgfx::TextProvider::getNextChar()</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProvider11getNextCharEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::TextProvider::getNextChar() &rArr; touchgfx::TextProvider::getNextCharInternal()
</UL>
<BR>[Calls]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextCharInternal()
</UL>
<BR>[Called By]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getNumberOfLines(const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[400]"></a>touchgfx::TextProvider::getNextLigature(unsigned char)</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, textprovider.o(i._ZN8touchgfx12TextProvider15getNextLigatureEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::getNextChar() &rArr; touchgfx::TextProvider::getNextCharInternal()
</UL>
<BR>[Calls]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
</UL>
<BR>[Called By]<UL><LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getMaxTextHeight(const unsigned short*, ...) const
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getSpacingAbove(const unsigned short*, ...) const
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
</UL>

<P><STRONG><a name="[3fd]"></a>touchgfx::TextProvider::initializeInternal()</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, textprovider.o(i._ZN8touchgfx12TextProvider18initializeInternalEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::getNextCharInternal()
</UL>
<BR>[Calls]<UL><LI><a href="#[3ff]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextCharInternal()
</UL>
<BR>[Called By]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[3ff]"></a>touchgfx::TextProvider::getNextCharInternal()</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, textprovider.o(i._ZN8touchgfx12TextProvider19getNextCharInternalEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextProvider::getNextCharInternal()
</UL>
<BR>[Called By]<UL><LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
</UL>

<P><STRONG><a name="[401]"></a>touchgfx::TextProvider::TextProvider()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, textprovider.o(i._ZN8touchgfx12TextProviderC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::TextProvider::TextProvider() &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::getNextCharInternal()
</UL>
<BR>[Calls]<UL><LI><a href="#[3fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initializeInternal()
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::calculateTextHeight(const unsigned short*, ...) const
<LI><a href="#[11]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[1c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getNumberOfLines(const unsigned short*, ...) const
<LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getMaxTextHeight(const unsigned short*, ...) const
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getSpacingAbove(const unsigned short*, ...) const
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextHeightInternal(const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[53f]"></a>touchgfx::TextProvider::TextProvider__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, textprovider.o(i._ZN8touchgfx12TextProviderC1Ev), UNUSED)

<P><STRONG><a name="[316]"></a>touchgfx::ToggleButton::forceState(bool)</STRONG> (Thumb, 56 bytes, Stack size 8 bytes, togglebutton.o(i._ZN8touchgfx12ToggleButton10forceStateEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::ToggleButton::forceState(bool)
</UL>
<BR>[Calls]<UL><LI><a href="#[402]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::operator !=(const touchgfx::Bitmap&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::op3HeaterBtnClicked()
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::op2HeaterBtnClicked()
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::op1HeaterBtnClicked()
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::op3LightBtnClicked()
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::op2LightBtnClicked()
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::op1LightBtnClicked()
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::op3HumiBtnClicked()
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::op2HumiBtnClicked()
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::op1HumiBtnClicked()
<LI><a href="#[13a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::setupScreen()
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setHeaterOpBtnState(bool)
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setLightOpBtnState(bool)
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setHumiOpBtnState(bool)
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setupScreen()
</UL>

<P><STRONG><a name="[199]"></a>touchgfx::ToggleButton::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, mainscreenviewbase.o(i._ZN8touchgfx12ToggleButton10setBitmapsERKNS_6BitmapES3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::ToggleButton::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::opConfigSettingsScreenViewBase()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::mainScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[192]"></a>touchgfx::ToggleButton::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, togglebutton.o(i._ZN8touchgfx12ToggleButton16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::ToggleButton::handleClickEvent(const touchgfx::ClickEvent&) &rArr; touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Calls]<UL><LI><a href="#[19b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[339]"></a>touchgfx::ToggleButton::ToggleButton()</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, togglebutton.o(i._ZN8touchgfx12ToggleButtonC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::ToggleButton::ToggleButton() &rArr; touchgfx::Button::Button() &rArr; touchgfx::Drawable::Drawable__sub_object() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::Button()
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::opConfigSettingsScreenViewBase()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::mainScreenViewBase()
</UL>

<P><STRONG><a name="[540]"></a>touchgfx::ToggleButton::ToggleButton__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, togglebutton.o(i._ZN8touchgfx12ToggleButtonC1Ev), UNUSED)

<P><STRONG><a name="[184]"></a>touchgfx::ToggleButton::~ToggleButton()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, mainscreenview.o(i._ZN8touchgfx12ToggleButtonD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::ToggleButton::~ToggleButton() &rArr; touchgfx::Button::~Button()
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::~Button()
</UL>
<BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::~mainScreenViewBase()
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::~opConfigSettingsScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[541]"></a>touchgfx::ToggleButton::~ToggleButton__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, mainscreenview.o(i._ZN8touchgfx12ToggleButtonD1Ev), UNUSED)

<P><STRONG><a name="[ac]"></a>touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&)</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, dma.o(i._ZN8touchgfx13DMA_Interface10addToQueueERKNS_6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::DMA_Interface::addToQueue(const touchgfx::BlitOp&) &rArr; touchgfx::OSWrappers::tryTakeFrameBufferSemaphore() &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[19a]"></a>touchgfx::DMA_Interface::initialize()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface10initializeEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[b6]"></a>touchgfx::DMA_Interface::enableAlpha(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface11enableAlphaEh))
<BR>[Address Reference Count : 2]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[b7]"></a>touchgfx::DMA_Interface::disableAlpha()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface12disableAlphaEv))
<BR>[Address Reference Count : 2]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[b3]"></a>touchgfx::DMA_Interface::seedExecution()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface13seedExecutionEv))
<BR>[Address Reference Count : 2]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[41e]"></a>touchgfx::DMA_Interface::isDmaQueueEmpty()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx13DMA_Interface15isDmaQueueEmptyEv))
<BR><BR>[Called By]<UL><LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
</UL>

<P><STRONG><a name="[b2]"></a>touchgfx::DMA_Interface::executeCompleted()</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, dma.o(i._ZN8touchgfx13DMA_Interface16executeCompletedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::DMA_Interface::executeCompleted() &rArr; touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR() &rArr; xQueueGiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[b8]"></a>touchgfx::DMA_Interface::waitForFrameBufferSemaphore()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, dma.o(i._ZN8touchgfx13DMA_Interface27waitForFrameBufferSemaphoreEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::DMA_Interface::waitForFrameBufferSemaphore() &rArr; touchgfx::OSWrappers::takeFrameBufferSemaphore() &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
<LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[ad]"></a>touchgfx::DMA_Interface::flush()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, stm32f7dma.o(i._ZN8touchgfx13DMA_Interface5flushEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DMA_Interface::flush()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[af]"></a>touchgfx::DMA_Interface::start()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, dma.o(i._ZN8touchgfx13DMA_Interface5startEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DMA_Interface::start()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[b1]"></a>touchgfx::DMA_Interface::execute()</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, dma.o(i._ZN8touchgfx13DMA_Interface7executeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::DMA_Interface::execute() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7dma.o(.constdata__ZTV10STM32F7DMA)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
</UL>
<P><STRONG><a name="[403]"></a>touchgfx::touchgfx_init()</STRONG> (Thumb, 114 bytes, Stack size 32 bytes, boardconfiguration.o(i._ZN8touchgfx13touchgfx_initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 200 + Unknown Stack Size
<LI>Call Chain = touchgfx::touchgfx_init() &rArr; touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned) &rArr; touchgfx::HAL& touchgfx::getHAL&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short) &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[1ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::STM32F7Instrumentation::init()
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[19b]"></a>touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 84 bytes, Stack size 16 bytes, abstractbutton.o(i._ZN8touchgfx14AbstractButton16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::AbstractButton::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Called By]<UL><LI><a href="#[192]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Address Reference Count : 4]<UL><LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
</UL>
<P><STRONG><a name="[33c]"></a>touchgfx::AbstractButton::setAction(touchgfx::GenericCallback&lang;const touchgfx::AbstractButton&, void&rang;&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx14AbstractButton9setActionERNS_15GenericCallbackIRKS0_vEE))
<BR><BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::settingsScreenViewBase()
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::opConfigSettingsScreenViewBase()
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase()
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::dayNightSettingsScreenViewBase()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::mainScreenViewBase()
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
</UL>

<P><STRONG><a name="[19f]"></a>touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&)</STRONG> (Thumb, 66 bytes, Stack size 16 bytes, buttonwithicon.o(i._ZN8touchgfx14ButtonWithIcon10setBitmapsERKNS_6BitmapES3_S3_S3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::settingsScreenViewBase()
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::opConfigSettingsScreenViewBase()
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase()
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::dayNightSettingsScreenViewBase()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::mainScreenViewBase()
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
</UL>
<P><STRONG><a name="[33b]"></a>touchgfx::ButtonWithIcon::setIconXY(short, short)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx14ButtonWithIcon9setIconXYEss))
<BR><BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::opConfigSettingsScreenViewBase()
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase()
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::dayNightSettingsScreenViewBase()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::mainScreenViewBase()
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
</UL>

<P><STRONG><a name="[337]"></a>touchgfx::ButtonWithIcon::ButtonWithIcon()</STRONG> (Thumb, 76 bytes, Stack size 16 bytes, buttonwithicon.o(i._ZN8touchgfx14ButtonWithIconC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::ButtonWithIcon::ButtonWithIcon() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::settingsScreenViewBase()
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::opConfigSettingsScreenViewBase()
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase()
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::dayNightSettingsScreenViewBase()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::mainScreenViewBase()
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
</UL>

<P><STRONG><a name="[542]"></a>touchgfx::ButtonWithIcon::ButtonWithIcon__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, buttonwithicon.o(i._ZN8touchgfx14ButtonWithIconC1Ev), UNUSED)

<P><STRONG><a name="[19c]"></a>touchgfx::ButtonWithIcon::~ButtonWithIcon()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, mainscreenview.o(i._ZN8touchgfx14ButtonWithIconD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::ButtonWithIcon::~ButtonWithIcon() &rArr; touchgfx::Button::~Button()
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::~Button()
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::~dateTimeSettingsScreenViewBase()
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::~mainScreenViewBase()
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::~dayNightSettingsScreenViewBase()
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::~tempHumiSettingsScreenViewBase()
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::~opConfigSettingsScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
</UL>
<P><STRONG><a name="[543]"></a>touchgfx::ButtonWithIcon::~ButtonWithIcon__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, mainscreenview.o(i._ZN8touchgfx14ButtonWithIconD1Ev), UNUSED)

<P><STRONG><a name="[109]"></a>touchgfx::MVPApplication::handlePendingScreenTransition()</STRONG> (Thumb, 44 bytes, Stack size 8 bytes, frontendapplication.o(i._ZN8touchgfx14MVPApplication29handlePendingScreenTransitionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::MVPApplication::handlePendingScreenTransition()
</UL>
<BR>[Address Reference Count : 3]<UL><LI> frontendapplication.o(.constdata__ZTV23FrontendApplicationBase)
<LI> frontendapplication.o(.constdata__ZTV19FrontendApplication)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx14MVPApplicationE)
</UL>
<P><STRONG><a name="[1a4]"></a>touchgfx::SnapshotWidget::makeSnapshot()</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, snapshotwidget.o(i._ZN8touchgfx14SnapshotWidget12makeSnapshotEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::SnapshotWidget::makeSnapshot()
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::SlideTransition(unsigned char)
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::SlideTransition(unsigned char)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
</UL>
<P><STRONG><a name="[407]"></a>touchgfx::SnapshotWidget::SnapshotWidget()</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, snapshotwidget.o(i._ZN8touchgfx14SnapshotWidgetC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::SnapshotWidget::SnapshotWidget() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::SlideTransition(unsigned char)
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::SlideTransition(unsigned char)
</UL>

<P><STRONG><a name="[544]"></a>touchgfx::SnapshotWidget::SnapshotWidget__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, snapshotwidget.o(i._ZN8touchgfx14SnapshotWidgetC1Ev), UNUSED)

<P><STRONG><a name="[1a0]"></a>touchgfx::SnapshotWidget::~SnapshotWidget()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, snapshotwidget.o(i._ZN8touchgfx14SnapshotWidgetD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::~SlideTransition()
<LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::~SlideTransition()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
</UL>
<P><STRONG><a name="[545]"></a>touchgfx::SnapshotWidget::~SnapshotWidget__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, snapshotwidget.o(i._ZN8touchgfx14SnapshotWidgetD1Ev), UNUSED)

<P><STRONG><a name="[360]"></a>touchgfx::ButtonWithLabel::setLabelText(touchgfx::TypedText)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, settingsscreenviewbase.o(i._ZN8touchgfx15ButtonWithLabel12setLabelTextENS_9TypedTextE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::ButtonWithLabel::setLabelText(touchgfx::TypedText) &rArr; touchgfx::ButtonWithLabel::updateTextPosition() &rArr; touchgfx::TypedText::assertValid() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::updateTextPosition()
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::settingsScreenViewBase()
</UL>

<P><STRONG><a name="[361]"></a>touchgfx::ButtonWithLabel::setLabelColor(touchgfx::colortype, bool)</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, settingsscreenviewbase.o(i._ZN8touchgfx15ButtonWithLabel13setLabelColorENS_9colortypeEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::ButtonWithLabel::setLabelColor(touchgfx::colortype, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::settingsScreenViewBase()
</UL>

<P><STRONG><a name="[408]"></a>touchgfx::ButtonWithLabel::updateTextPosition()</STRONG> (Thumb, 110 bytes, Stack size 24 bytes, settingsscreenviewbase.o(i._ZN8touchgfx15ButtonWithLabel18updateTextPositionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::ButtonWithLabel::updateTextPosition() &rArr; touchgfx::TypedText::assertValid() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::assertValid() const
</UL>
<BR>[Called By]<UL><LI><a href="#[360]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::setLabelText(touchgfx::TypedText)
</UL>

<P><STRONG><a name="[362]"></a>touchgfx::ButtonWithLabel::setLabelColorPressed(touchgfx::colortype, bool)</STRONG> (Thumb, 22 bytes, Stack size 24 bytes, settingsscreenviewbase.o(i._ZN8touchgfx15ButtonWithLabel20setLabelColorPressedENS_9colortypeEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::ButtonWithLabel::setLabelColorPressed(touchgfx::colortype, bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::settingsScreenViewBase()
</UL>

<P><STRONG><a name="[35f]"></a>touchgfx::ButtonWithLabel::ButtonWithLabel()</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, buttonwithlabel.o(i._ZN8touchgfx15ButtonWithLabelC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::ButtonWithLabel::ButtonWithLabel() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::settingsScreenViewBase()
</UL>

<P><STRONG><a name="[546]"></a>touchgfx::ButtonWithLabel::ButtonWithLabel__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, buttonwithlabel.o(i._ZN8touchgfx15ButtonWithLabelC1Ev), UNUSED)

<P><STRONG><a name="[1a5]"></a>touchgfx::ButtonWithLabel::~ButtonWithLabel()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, settingsscreenview.o(i._ZN8touchgfx15ButtonWithLabelD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::ButtonWithLabel::~ButtonWithLabel() &rArr; touchgfx::Button::~Button()
</UL>
<BR>[Calls]<UL><LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::~Button()
</UL>
<BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::~settingsScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
</UL>
<P><STRONG><a name="[547]"></a>touchgfx::ButtonWithLabel::~ButtonWithLabel__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, settingsscreenview.o(i._ZN8touchgfx15ButtonWithLabelD1Ev), UNUSED)

<P><STRONG><a name="[40a]"></a>touchgfx::EasingEquations::cubicEaseOut(unsigned short, short, short, unsigned short)</STRONG> (Thumb, 82 bytes, Stack size 8 bytes, easingequations.o(i._ZN8touchgfx15EasingEquations12cubicEaseOutEtsst))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::EasingEquations::cubicEaseOut(unsigned short, short, short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[40b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::roundRespectSign(float)
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::handleTickEvent()
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::handleTickEvent()
</UL>

<P><STRONG><a name="[40b]"></a>touchgfx::EasingEquations::roundRespectSign(float)</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, easingequations.o(i._ZN8touchgfx15EasingEquations16roundRespectSignEf))
<BR><BR>[Called By]<UL><LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::cubicEaseOut(unsigned short, short, short, unsigned short)
</UL>

<P><STRONG><a name="[4bc]"></a>touchgfx::GenericCallback&lang;touchgfx::Drawable&, void&rang;::GenericCallback__sub_object()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx15GenericCallbackIRNS_8DrawableEvEC2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, touchgfx::Drawable&, void&rang;::Callback(touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;*, void(touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::*)(touchgfx::Drawable&))
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::Drawable&, void&rang;::Callback(touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;*, void(touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::*)(touchgfx::Drawable&))
</UL>

<P><STRONG><a name="[370]"></a>touchgfx::GenericCallback&lang;void, void&rang;::GenericCallback__sub_object()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx15GenericCallbackIvvEC2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[348]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::FrontendApplicationBase(Model&, FrontendHeap&)
<LI><a href="#[363]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>

<P><STRONG><a name="[40c]"></a>touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)</STRONG> (Thumb, 144 bytes, Stack size 40 bytes, touchcalibration.o(i._ZN8touchgfx16TouchCalibration14translatePointERNS_5PointE))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::TouchCalibration::translatePoint(touchgfx::Point&) &rArr; touchgfx::TouchCalibration::muldiv(int, int, int, int, int, int, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[40d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::muldiv(int, int, int, int, int, int, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[40d]"></a>touchgfx::TouchCalibration::muldiv(int, int, int, int, int, int, int&)</STRONG> (Thumb, 104 bytes, Stack size 20 bytes, touchcalibration.o(i._ZN8touchgfx16TouchCalibration6muldivEiiiiiiRi))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::TouchCalibration::muldiv(int, int, int, int, int, int, int&)
</UL>
<BR>[Called By]<UL><LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)
</UL>

<P><STRONG><a name="[30f]"></a>touchgfx::AbstractPartition::AbstractPartition__sub_object()</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, abstractpartition.o(i._ZN8touchgfx17AbstractPartitionC2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
</UL>

<P><STRONG><a name="[548]"></a>touchgfx::AbstractPartition::~AbstractPartition()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, abstractpartition.o(i._ZN8touchgfx17AbstractPartitionD2Ev), UNUSED)

<P><STRONG><a name="[1b4]"></a>touchgfx::AbstractPartition::~AbstractPartition__sub_object()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, abstractpartition.o(i._ZN8touchgfx17AbstractPartitionD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[22a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
<LI><a href="#[227]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;tempHumiSettingsScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
<LI><a href="#[224]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
</UL>
<P><STRONG><a name="[2f4]"></a>touchgfx::InternalFlashFont::InternalFlashFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*, const touchgfx::KerningNode*, unsigned short, unsigned short)</STRONG> (Thumb, 54 bytes, Stack size 56 bytes, internalflashfont.o(i._ZN8touchgfx17InternalFlashFontC1EPKNS_9GlyphNodeEtthhhhPKhPKNS_11KerningNodeEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 76<LI>Call Chain = touchgfx::InternalFlashFont::InternalFlashFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*, const touchgfx::KerningNode*, unsigned short, unsigned short) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[40e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_46_4bpp()
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_34_4bpp()
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_17_8bpp()
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_12_4bpp()
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_segoeui_67_4bpp()
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_segoeui_40_8bpp()
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_segoeui_28_8bpp()
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_segoeui_18_8bpp()
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_segoeui_17_8bpp()
</UL>

<P><STRONG><a name="[549]"></a>touchgfx::InternalFlashFont::InternalFlashFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*, const touchgfx::KerningNode*, unsigned short, unsigned short)</STRONG> (Thumb, 0 bytes, Stack size 56 bytes, internalflashfont.o(i._ZN8touchgfx17InternalFlashFontC1EPKNS_9GlyphNodeEtthhhhPKhPKNS_11KerningNodeEtt), UNUSED)

<P><STRONG><a name="[8a]"></a>touchgfx::InternalFlashFont::~InternalFlashFont()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, fontgetters.o(i._ZN8touchgfx17InternalFlashFontD1Ev))
<BR>[Address Reference Count : 10]<UL><LI> fontgetters.o(i._Z23getFont_segoeui_17_8bppv)
<LI> fontgetters.o(i._Z23getFont_segoeui_18_8bppv)
<LI> fontgetters.o(i._Z23getFont_segoeui_28_8bppv)
<LI> fontgetters.o(i._Z23getFont_segoeui_40_8bppv)
<LI> fontgetters.o(i._Z23getFont_segoeui_67_4bppv)
<LI> fontgetters.o(i._Z23getFont_verdana_12_4bppv)
<LI> fontgetters.o(i._Z23getFont_verdana_17_8bppv)
<LI> fontgetters.o(i._Z23getFont_verdana_34_4bppv)
<LI> fontgetters.o(i._Z23getFont_verdana_46_4bppv)
<LI> internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
</UL>
<P><STRONG><a name="[54a]"></a>touchgfx::InternalFlashFont::~InternalFlashFont__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, fontgetters.o(i._ZN8touchgfx17InternalFlashFontD1Ev), UNUSED)

<P><STRONG><a name="[1c4]"></a>touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&)</STRONG> (Thumb, 58 bytes, Stack size 8 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue10pushCopyOfERKNS_6BlitOpE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::LockFreeDMA_Queue::pushCopyOf(const touchgfx::BlitOp&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[1c5]"></a>touchgfx::LockFreeDMA_Queue::pop()</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue3popEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::LockFreeDMA_Queue::pop() &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[1c6]"></a>touchgfx::LockFreeDMA_Queue::first()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue5firstEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[1c3]"></a>touchgfx::LockFreeDMA_Queue::isFull()</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue6isFullEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[1c2]"></a>touchgfx::LockFreeDMA_Queue::isEmpty()</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_Queue7isEmptyEv))
<BR>[Address Reference Count : 1]<UL><LI> dma.o(.constdata__ZTVN8touchgfx17LockFreeDMA_QueueE)
</UL>
<P><STRONG><a name="[307]"></a>touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue(touchgfx::BlitOp*, unsigned long)</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEm))
<BR><BR>[Called By]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::STM32F7DMA()
</UL>

<P><STRONG><a name="[54b]"></a>touchgfx::LockFreeDMA_Queue::LockFreeDMA_Queue__sub_object(touchgfx::BlitOp*, unsigned long)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dma.o(i._ZN8touchgfx17LockFreeDMA_QueueC1EPNS_6BlitOpEm), UNUSED)

<P><STRONG><a name="[1c7]"></a>touchgfx::MCUInstrumentation::setMCUActive(bool)</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, boardconfiguration.o(i._ZN8touchgfx18MCUInstrumentation12setMCUActiveEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::MCUInstrumentation::setMCUActive(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boardconfiguration.o(.constdata__ZTVN8touchgfx18MCUInstrumentationE)
</UL>
<P><STRONG><a name="[1c8]"></a>touchgfx::MCUInstrumentation::getCCConsumed()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, boardconfiguration.o(i._ZN8touchgfx18MCUInstrumentation13getCCConsumedEv))
<BR>[Address Reference Count : 2]<UL><LI> stm32f7instrumentation.o(.constdata__ZTVN8touchgfx22STM32F7InstrumentationE)
<LI> boardconfiguration.o(.constdata__ZTVN8touchgfx18MCUInstrumentationE)
</UL>
<P><STRONG><a name="[1c9]"></a>touchgfx::MCUInstrumentation::setCCConsumed(unsigned)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, boardconfiguration.o(i._ZN8touchgfx18MCUInstrumentation13setCCConsumedEj))
<BR>[Address Reference Count : 2]<UL><LI> stm32f7instrumentation.o(.constdata__ZTVN8touchgfx22STM32F7InstrumentationE)
<LI> boardconfiguration.o(.constdata__ZTVN8touchgfx18MCUInstrumentationE)
</UL>
<P><STRONG><a name="[412]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::enableFl(touchgfx::Rect&)
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[21f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&)
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[413]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERNS_4RectERKS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::enableFl(touchgfx::Rect&)
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[21e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
</UL>

<P><STRONG><a name="[415]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&)</STRONG> (Thumb, 36 bytes, Stack size 20 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 28<LI>Call Chain = touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[414]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[414]"></a>touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformDisplayToFrameBufferERsS1_RKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&)
<LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
</UL>

<P><STRONG><a name="[422]"></a>touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, displaytransformation.o(i._ZN8touchgfx21DisplayTransformation29transformFrameBufferToDisplayERsS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[1cb]"></a>touchgfx::STM32F7Instrumentation::getCPUCycles()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, stm32f7instrumentation.o(i._ZN8touchgfx22STM32F7Instrumentation12getCPUCyclesEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32f7instrumentation.o(.constdata__ZTVN8touchgfx22STM32F7InstrumentationE)
</UL>
<P><STRONG><a name="[1cc]"></a>touchgfx::STM32F7Instrumentation::setMCUActive(bool)</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, stm32f7instrumentation.o(i._ZN8touchgfx22STM32F7Instrumentation12setMCUActiveEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::STM32F7Instrumentation::setMCUActive(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f7instrumentation.o(.constdata__ZTVN8touchgfx22STM32F7InstrumentationE)
</UL>
<P><STRONG><a name="[1ca]"></a>touchgfx::STM32F7Instrumentation::init()</STRONG> (Thumb, 72 bytes, Stack size 16 bytes, stm32f7instrumentation.o(i._ZN8touchgfx22STM32F7Instrumentation4initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::STM32F7Instrumentation::init() &rArr; HAL_TIM_Base_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[416]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Start
<LI><a href="#[2d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_TIM_Base_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::touchgfx_init()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f7instrumentation.o(.constdata__ZTVN8touchgfx22STM32F7InstrumentationE)
</UL>
<P><STRONG><a name="[8f]"></a>touchgfx::STM32F7Instrumentation::~STM32F7Instrumentation()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, boardconfiguration.o(i._ZN8touchgfx22STM32F7InstrumentationD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> boardconfiguration.o(i.__sti___22_BoardConfiguration_cpp_dceb80ee)
<LI> stm32f7instrumentation.o(.constdata__ZTVN8touchgfx22STM32F7InstrumentationE)
</UL>
<P><STRONG><a name="[54c]"></a>touchgfx::STM32F7Instrumentation::~STM32F7Instrumentation__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boardconfiguration.o(i._ZN8touchgfx22STM32F7InstrumentationD1Ev), UNUSED)

<P><STRONG><a name="[343]"></a>touchgfx::TextAreaWithOneWildcard::setWildcard(const unsigned short*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx23TextAreaWithOneWildcard11setWildcardEPKt))
<BR><BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase()
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::dayNightSettingsScreenViewBase()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::mainScreenViewBase()
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
</UL>

<P><STRONG><a name="[1d0]"></a>touchgfx::TextAreaWithOneWildcard::getTextHeight()</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx23TextAreaWithOneWildcard13getTextHeightEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextAreaWithOneWildcard::getTextHeight() &rArr; touchgfx::TextAreaWithWildcardBase::calculateTextHeight(const unsigned short*, ...) const &rArr; touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short) &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::getNextChar() &rArr; touchgfx::TextProvider::getNextCharInternal()
</UL>
<BR>[Calls]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::calculateTextHeight(const unsigned short*, ...) const
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[33a]"></a>touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard()</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx23TextAreaWithOneWildcardC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard() &rArr; touchgfx::TextArea::TextArea() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
</UL>
<BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase()
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::dayNightSettingsScreenViewBase()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::mainScreenViewBase()
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
</UL>

<P><STRONG><a name="[54d]"></a>touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx23TextAreaWithOneWildcardC1Ev), UNUSED)

<P><STRONG><a name="[1cd]"></a>touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx23TextAreaWithOneWildcardD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard() &rArr; touchgfx::TextAreaWithWildcardBase::~TextAreaWithWildcardBase() &rArr; touchgfx::TextArea::~TextArea()
</UL>
<BR>[Calls]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::~TextAreaWithWildcardBase()
</UL>
<BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::~dateTimeSettingsScreenViewBase()
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::~mainScreenViewBase()
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::~dayNightSettingsScreenViewBase()
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::~tempHumiSettingsScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[54e]"></a>touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx23TextAreaWithOneWildcardD1Ev), UNUSED)

<P><STRONG><a name="[1d2]"></a>touchgfx::TextAreaWithWildcardBase::~TextAreaWithWildcardBase()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx24TextAreaWithWildcardBaseD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextAreaWithWildcardBase::~TextAreaWithWildcardBase() &rArr; touchgfx::TextArea::~TextArea()
</UL>
<BR>[Calls]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea()
</UL>
<BR>[Called By]<UL><LI><a href="#[1cd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::~TextAreaWithOneWildcard()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
</UL>
<P><STRONG><a name="[54f]"></a>touchgfx::TextAreaWithWildcardBase::~TextAreaWithWildcardBase__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx24TextAreaWithWildcardBaseD1Ev), UNUSED)

<P><STRONG><a name="[1d7]"></a>touchgfx::STM32F746GTouchController::sampleTouch(int&, int&)</STRONG> (Thumb, 50 bytes, Stack size 64 bytes, stm32f746gtouchcontroller.o(i._ZN8touchgfx25STM32F746GTouchController11sampleTouchERiS1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 376<LI>Call Chain = touchgfx::STM32F746GTouchController::sampleTouch(int&, int&) &rArr; BSP_TS_GetState &rArr; ft5336_TS_GetTouchInfo &rArr; TS_IO_Read &rArr; I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TS_GetState
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f746gtouchcontroller.o(.constdata__ZTVN8touchgfx25STM32F746GTouchControllerE)
</UL>
<P><STRONG><a name="[1d6]"></a>touchgfx::STM32F746GTouchController::init()</STRONG> (Thumb, 32 bytes, Stack size 16 bytes, stm32f746gtouchcontroller.o(i._ZN8touchgfx25STM32F746GTouchController4initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::STM32F746GTouchController::init() &rArr; BSP_TS_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_GetYSize
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_GetXSize
<LI><a href="#[41a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TS_Init
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f746gtouchcontroller.o(.constdata__ZTVN8touchgfx25STM32F746GTouchControllerE)
</UL>
<P><STRONG><a name="[8e]"></a>touchgfx::STM32F746GTouchController::~STM32F746GTouchController()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, boardconfiguration.o(i._ZN8touchgfx25STM32F746GTouchControllerD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> boardconfiguration.o(i.__sti___22_BoardConfiguration_cpp_dceb80ee)
<LI> stm32f746gtouchcontroller.o(.constdata__ZTVN8touchgfx25STM32F746GTouchControllerE)
</UL>
<P><STRONG><a name="[550]"></a>touchgfx::STM32F746GTouchController::~STM32F746GTouchController__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boardconfiguration.o(i._ZN8touchgfx25STM32F746GTouchControllerD1Ev), UNUSED)

<P><STRONG><a name="[3aa]"></a>touchgfx::Box::setAlpha(unsigned char)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, temphumisettingsscreenviewbase.o(i._ZN8touchgfx3Box8setAlphaEh))
<BR><BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
</UL>

<P><STRONG><a name="[3a9]"></a>touchgfx::Box::setColor(touchgfx::colortype)</STRONG> (Thumb, 8 bytes, Stack size 12 bytes, temphumisettingsscreenviewbase.o(i._ZN8touchgfx3Box8setColorENS_9colortypeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::Box::setColor(touchgfx::colortype)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
</UL>

<P><STRONG><a name="[3a6]"></a>touchgfx::Box::Box()</STRONG> (Thumb, 46 bytes, Stack size 8 bytes, temphumisettingsscreenviewbase.o(i._ZN8touchgfx3BoxC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Box::Box() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::colortype(unsigned)
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
</UL>

<P><STRONG><a name="[551]"></a>touchgfx::Box::Box__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, temphumisettingsscreenviewbase.o(i._ZN8touchgfx3BoxC1Ev), UNUSED)

<P><STRONG><a name="[1d8]"></a>touchgfx::Box::~Box()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, temphumisettingsscreenview.o(i._ZN8touchgfx3BoxD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Box::~Box()
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::~tempHumiSettingsScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[552]"></a>touchgfx::Box::~Box__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, temphumisettingsscreenview.o(i._ZN8touchgfx3BoxD1Ev), UNUSED)

<P><STRONG><a name="[d2]"></a>touchgfx::HAL::beginFrame()</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL10beginFrameEv))
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[41b]"></a>touchgfx::HAL::initialize()</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL10initializeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::HAL::initialize() &rArr; touchgfx::OSWrappers::initialize() &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
</UL>
<BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[c2]"></a>touchgfx::HAL::getBlitCaps()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, stm32f7hal.o(i._ZN8touchgfx3HAL11getBlitCapsEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::getBlitCaps()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[2ec]"></a>touchgfx::HAL::setMCUActive(bool)</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL12setMCUActiveEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::HAL::setMCUActive(bool) &rArr; touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID) &rArr; BSP_LED_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
</UL>
<BR>[Called By]<UL><LI><a href="#[95]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;IdleTaskHook(void*)
</UL>

<P><STRONG><a name="[c5]"></a>touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations)</STRONG> (Thumb, 118 bytes, Stack size 80 bytes, hal.o(i._ZN8touchgfx3HAL13blitCopyGlyphEPKhtttttNS_9colortypeEhNS_14BlitOperationsE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BlitOp::BlitOp()
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[c9]"></a>touchgfx::HAL::backPorchExited()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, stm32f7hal.o(i._ZN8touchgfx3HAL15backPorchExitedEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::HAL::backPorchExited() &rArr; touchgfx::HAL::swapFrameBuffers() &rArr; touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID) &rArr; BSP_LED_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[c0]"></a>touchgfx::HAL::cacheTextString(const unsigned short*)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL15cacheTextStringEPKt))
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[be]"></a>touchgfx::HAL::lockFrameBuffer()</STRONG> (Thumb, 40 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL15lockFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::HAL::lockFrameBuffer() &rArr; touchgfx::OSWrappers::takeFrameBufferSemaphore() &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
<LI><a href="#[41e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DMA_Interface::isDmaQueueEmpty()
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[c4]"></a>touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)</STRONG> (Thumb, 124 bytes, Stack size 64 bytes, hal.o(i._ZN8touchgfx3HAL16blitCopyARGB8888EPKtttttth))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BlitOp::BlitOp()
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1db]"></a>touchgfx::HAL::flushFrameBuffer(const touchgfx::Rect&)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL16flushFrameBufferERKNS_4RectE))
<BR><BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7HAL::flushFrameBuffer(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[2dd]"></a>touchgfx::HAL::swapFrameBuffers()</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL16swapFrameBuffersEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::HAL::swapFrameBuffers() &rArr; touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID) &rArr; BSP_LED_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[c9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::backPorchExited()
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
</UL>

<P><STRONG><a name="[bc]"></a>touchgfx::HAL::allowDMATransfers()</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL17allowDMATransfersEv))
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[1dc]"></a>touchgfx::HAL::getTFTCurrentLine()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL17getTFTCurrentLineEv))
<BR>[Address Reference Count : 1]<UL><LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[bf]"></a>touchgfx::HAL::unlockFrameBuffer()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL17unlockFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::HAL::unlockFrameBuffer() &rArr; touchgfx::OSWrappers::giveFrameBufferSemaphore() &rArr; xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[c8]"></a>touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)</STRONG> (Thumb, 100 bytes, Stack size 48 bytes, hal.o(i._ZN8touchgfx3HAL20copyFBRegionToMemoryENS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BlitOp::BlitOp()
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[41c]"></a>touchgfx::HAL::getClientFrameBuffer()</STRONG> (Thumb, 34 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL20getClientFrameBufferEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::getClientFrameBuffer()
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
<LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
<LI><a href="#[be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lockFrameBuffer()
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations)
</UL>

<P><STRONG><a name="[c7]"></a>touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL21registerEventListenerERNS_15UIEventListenerE))
<BR><BR>[Calls]<UL><LI><a href="#[420]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerEventListener(touchgfx::UIEventListener&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[ce]"></a>touchgfx::HAL::setFrameBufferStartAddress(void*, unsigned short, bool, bool)</STRONG> (Thumb, 180 bytes, Stack size 32 bytes, stm32f7hal.o(i._ZN8touchgfx3HAL26setFrameBufferStartAddressEPvtbb))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::setFrameBufferStartAddress(void*, unsigned short, bool, bool) &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[d8]"></a>touchgfx::HAL::performDisplayOrientationChange()</STRONG> (Thumb, 104 bytes, Stack size 0 bytes, stm32f7hal.o(i._ZN8touchgfx3HAL31performDisplayOrientationChangeEv))
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[469]"></a>touchgfx::HAL::lcd()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, bitmap.o(i._ZN8touchgfx3HAL3lcdEv))
<BR><BR>[Called By]<UL><LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
</UL>

<P><STRONG><a name="[d1]"></a>touchgfx::HAL::tick()</STRONG> (Thumb, 372 bytes, Stack size 32 bytes, hal.o(i._ZN8touchgfx3HAL4tickEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::HAL::tick() &rArr; touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID) &rArr; BSP_LED_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[421]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::tick()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[d6]"></a>touchgfx::HAL::touch(int, int)</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, hal.o(i._ZN8touchgfx3HAL5touchEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 84<LI>Call Chain = touchgfx::HAL::touch(int, int) &rArr; touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short) &rArr; touchgfx::GestureEvent::GestureEvent(touchgfx::GestureEvent::GestureType, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
<LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)
<LI><a href="#[422]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformFrameBufferToDisplay(short&, short&)
<LI><a href="#[40c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TouchCalibration::translatePoint(touchgfx::Point&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[d7]"></a>touchgfx::HAL::noTouch()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL7noTouchEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 68<LI>Call Chain = touchgfx::HAL::noTouch() &rArr; touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short) &rArr; touchgfx::GestureEvent::GestureEvent(touchgfx::GestureEvent::GestureType, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[424]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[c3]"></a>touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)</STRONG> (Thumb, 124 bytes, Stack size 64 bytes, hal.o(i._ZN8touchgfx3HAL8blitCopyEPKtttttthb))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BlitOp::BlitOp()
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[c6]"></a>touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)</STRONG> (Thumb, 124 bytes, Stack size 64 bytes, hal.o(i._ZN8touchgfx3HAL8blitFillENS_9colortypeEtttth))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[8b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::BlitOp::BlitOp()
<LI><a href="#[41d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
<LI><a href="#[41c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::getClientFrameBuffer()
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[d3]"></a>touchgfx::HAL::endFrame()</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL8endFrameEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::endFrame()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[bd]"></a>touchgfx::HAL::flushDMA()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL8flushDMAEv))
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[c1]"></a>touchgfx::HAL::blockCopy(void*, const void*, unsigned)</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, hal.o(i._ZN8touchgfx3HAL9blockCopyEPvPKvj))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::HAL::blockCopy(void*, const void*, unsigned)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[cf]"></a>touchgfx::HAL::taskDelay(unsigned short)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, stm32f7hal.o(i._ZN8touchgfx3HAL9taskDelayEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::HAL::taskDelay(unsigned short)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[ba]"></a>touchgfx::HAL::taskEntry()</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, hal.o(i._ZN8touchgfx3HAL9taskEntryEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::HAL::taskEntry() &rArr; touchgfx::OSWrappers::waitForVSync() &rArr; xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::waitForVSync()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[4bb]"></a>touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)</STRONG> (Thumb, 170 bytes, Stack size 20 bytes, boardconfiguration.o(i._ZN8touchgfx3HALC2ERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::getHAL&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short)
</UL>

<P><STRONG><a name="[464]"></a>touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, touchgfx::LCD::StringVisuals&, const unsigned short*, ...)</STRONG> (Thumb, 44 bytes, Stack size 40 bytes, lcd.o(i._ZN8touchgfx3LCD10drawStringENS_4RectERKS1_RNS0_13StringVisualsEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, touchgfx::LCD::StringVisuals&, const unsigned short*, ...)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[425]"></a>touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation)</STRONG> (Thumb, 126 bytes, Stack size 40 bytes, lcd.o(i._ZN8touchgfx3LCD10rotateRectERNS_4RectERKS1_NS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation) &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[426]"></a>touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)</STRONG> (Thumb, 80 bytes, Stack size 64 bytes, lcd.o(i._ZN8touchgfx3LCD11getNumLinesERNS_12TextProviderENS_14WideTextActionEhPKNS_4FontEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short) &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::getNextChar() &rArr; touchgfx::TextProvider::getNextCharInternal()
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct(touchgfx::TextProvider&, unsigned short, unsigned char, const touchgfx::Font*, touchgfx::WideTextAction)
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)
</UL>
<BR>[Called By]<UL><LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::calculateTextHeight(const unsigned short*, ...) const
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextHeightInternal(const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[429]"></a>touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)</STRONG> (Thumb, 98 bytes, Stack size 56 bytes, lcd.o(i._ZN8touchgfx3LCD11stringWidthERNS_12TextProviderERKNS_4FontEih))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::getNextChar() &rArr; touchgfx::TextProvider::getNextCharInternal()
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::advance() const
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[467]"></a>touchgfx::LCD::StringVisuals::StringVisuals(const touchgfx::Font*, touchgfx::colortype, unsigned char, unsigned char, unsigned short, touchgfx::TextRotation, unsigned char, unsigned char, touchgfx::WideTextAction)</STRONG> (Thumb, 62 bytes, Stack size 44 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx3LCD13StringVisualsC1EPKNS_4FontENS_9colortypeEhhtNS_12TextRotationEhhNS_14WideTextActionE))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = touchgfx::LCD::StringVisuals::StringVisuals(const touchgfx::Font*, touchgfx::colortype, unsigned char, unsigned char, unsigned short, touchgfx::TextRotation, unsigned char, unsigned char, touchgfx::WideTextAction)
</UL>
<BR>[Called By]<UL><LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[553]"></a>touchgfx::LCD::StringVisuals::StringVisuals__sub_object(const touchgfx::Font*, touchgfx::colortype, unsigned char, unsigned char, unsigned short, touchgfx::TextRotation, unsigned char, unsigned char, touchgfx::WideTextAction)</STRONG> (Thumb, 0 bytes, Stack size 44 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx3LCD13StringVisualsC1EPKNS_4FontENS_9colortypeEhhtNS_12TextRotationEhhNS_14WideTextActionE), UNUSED)

<P><STRONG><a name="[12]"></a>touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)</STRONG> (Thumb, 594 bytes, Stack size 216 bytes, lcd.o(i._ZN8touchgfx3LCD13drawStringLTRERKNS_4RectES3_RKNS0_13StringVisualsEPKtSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 392<LI>Call Chain = touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list) &rArr; touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::getNextChar() &rArr; touchgfx::TextProvider::getNextCharInternal()
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list)
<LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct(touchgfx::TextProvider&, unsigned short, unsigned char, const touchgfx::Font*, touchgfx::WideTextAction)
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> texts.o(.data)
</UL>
<P><STRONG><a name="[42b]"></a>touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)</STRONG> (Thumb, 534 bytes, Stack size 120 bytes, lcd.o(i._ZN8touchgfx3LCD18drawStringInternalEPtPKNS_4RectEsRsRS3_PKNS0_13StringVisualsEhRNS_12TextProviderEib))
<BR><BR>[Stack]<UL><LI>Max Depth = 176<LI>Call Chain = touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::getNextChar() &rArr; touchgfx::TextProvider::getNextCharInternal()
</UL>
<BR>[Calls]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::advance() const
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[428]"></a>touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)</STRONG> (Thumb, 372 bytes, Stack size 56 bytes, lcd.o(i._ZN8touchgfx3LCD22WideTextInternalStruct22getStringLengthForLineEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::getNextChar() &rArr; touchgfx::TextProvider::getNextCharInternal()
</UL>
<BR>[Calls]<UL><LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::advance() const
<LI><a href="#[42d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::addWord(unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
</UL>

<P><STRONG><a name="[42d]"></a>touchgfx::LCD::WideTextInternalStruct::addWord(unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 32 bytes, Stack size 12 bytes, lcd.o(i._ZN8touchgfx3LCD22WideTextInternalStruct7addWordEttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::LCD::WideTextInternalStruct::addWord(unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)
</UL>

<P><STRONG><a name="[427]"></a>touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct(touchgfx::TextProvider&, unsigned short, unsigned char, const touchgfx::Font*, touchgfx::WideTextAction)</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, lcd.o(i._ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct(touchgfx::TextProvider&, unsigned short, unsigned char, const touchgfx::Font*, touchgfx::WideTextAction)
</UL>
<BR>[Calls]<UL><LI><a href="#[42a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::advance() const
</UL>
<BR>[Called By]<UL><LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
</UL>

<P><STRONG><a name="[554]"></a>touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct__sub_object(touchgfx::TextProvider&, unsigned short, unsigned char, const touchgfx::Font*, touchgfx::WideTextAction)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, lcd.o(i._ZN8touchgfx3LCD22WideTextInternalStructC1ERNS_12TextProviderEthPKNS_4FontENS_14WideTextActionE), UNUSED)

<P><STRONG><a name="[42e]"></a>touchgfx::LCD::realX(const touchgfx::Rect&, short, short, touchgfx::TextRotation)</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lcd.o(i._ZN8touchgfx3LCD5realXERKNS_4RectEssNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD::realX(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
</UL>
<BR>[Calls]<UL><LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[42f]"></a>touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation)</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, lcd.o(i._ZN8touchgfx3LCD5realYERKNS_4RectEssNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[2de]"></a>touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 26 bytes, Stack size 8 bytes, gpio.o(i._ZN8touchgfx4GPIO3setENS0_7GPIO_IDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID) &rArr; BSP_LED_On
</UL>
<BR>[Calls]<UL><LI><a href="#[277]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_On
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isRenderTime(touchgfx::GPIO::GPIO_ID)
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setMCUActive(bool)
</UL>

<P><STRONG><a name="[431]"></a>touchgfx::GPIO::init()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, gpio.o(i._ZN8touchgfx4GPIO4initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::GPIO::init() &rArr; BSP_LED_Init &rArr; HAL_GPIO_Init
</UL>
<BR>[Calls]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[275]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
</UL>

<P><STRONG><a name="[2df]"></a>touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, gpio.o(i._ZN8touchgfx4GPIO5clearENS0_7GPIO_IDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID) &rArr; BSP_LED_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[276]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Off
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isRenderTime(touchgfx::GPIO::GPIO_ID)
</UL>
<BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
<LI><a href="#[7e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;LTDC_IRQHandler
<LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setMCUActive(bool)
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::init()
</UL>

<P><STRONG><a name="[41f]"></a>touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, gpio.o(i._ZN8touchgfx4GPIO6toggleENS0_7GPIO_IDE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID) &rArr; BSP_LED_Toggle
</UL>
<BR>[Calls]<UL><LI><a href="#[278]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LED_Toggle
<LI><a href="#[430]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;isRenderTime(touchgfx::GPIO::GPIO_ID)
</UL>
<BR>[Called By]<UL><LI><a href="#[2dd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::swapFrameBuffers()
</UL>

<P><STRONG><a name="[3f1]"></a>touchgfx::Rect::expandToFit(const touchgfx::Rect&)</STRONG> (Thumb, 150 bytes, Stack size 32 bytes, application.o(i._ZN8touchgfx4Rect11expandToFitERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Rect::expandToFit(const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>

<P><STRONG><a name="[3f6]"></a>touchgfx::Rect::Rect(short, short, short, short)</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx4RectC1Essss))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[10a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::draw()
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::draw(touchgfx::Rect&)
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
<LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::ButtonWithIcon()
<LI><a href="#[1cf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getSolidRect() const
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::Drawable__sub_object()
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SnapshotWidget::SnapshotWidget()
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::ButtonWithLabel()
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[234]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__sti___15_Application_cpp_63cd8d44
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const
<LI><a href="#[425]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::rotateRect(touchgfx::Rect&, const touchgfx::Rect&, touchgfx::TextRotation)
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedVisibleRect()
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[555]"></a>touchgfx::Rect::Rect__sub_object(short, short, short, short)</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx4RectC1Essss), UNUSED)

<P><STRONG><a name="[98]"></a>touchgfx::Rect::Rect()</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx4RectC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[331]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::Screen()
<LI><a href="#[337]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::ButtonWithIcon()
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SnapshotWidget::SnapshotWidget()
<LI><a href="#[35f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::ButtonWithLabel()
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::draw(const touchgfx::Rect&) const
<LI><a href="#[3ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)
<LI><a href="#[1a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SnapshotWidget::draw(const touchgfx::Rect&) const
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(t._ZN8touchgfx6VectorINS_4RectELt8EEC1Ev)
</UL>
<P><STRONG><a name="[556]"></a>touchgfx::Rect::Rect__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx4RectC1Ev), UNUSED)

<P><STRONG><a name="[432]"></a>touchgfx::Rect::operator &=(const touchgfx::Rect&)</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, application.o(i._ZN8touchgfx4RectaNERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[187]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const
<LI><a href="#[18a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::draw(const touchgfx::Rect&) const
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(const touchgfx::Rect&) const
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[1dd]"></a>touchgfx::View&lang;Screen1Presenter&rang;::~View()</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx4ViewI16Screen1PresenterED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
</UL>
<P><STRONG><a name="[557]"></a>touchgfx::View&lang;Screen1Presenter&rang;::~View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx4ViewI16Screen1PresenterED1Ev), UNUSED)

<P><STRONG><a name="[1de]"></a>touchgfx::View&lang;mainScreenPresenter&rang;::~View()</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, mainscreenviewbase.o(i._ZN8touchgfx4ViewI19mainScreenPresenterED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::~mainScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI19mainScreenPresenterEE)
</UL>
<P><STRONG><a name="[558]"></a>touchgfx::View&lang;mainScreenPresenter&rang;::~View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, mainscreenviewbase.o(i._ZN8touchgfx4ViewI19mainScreenPresenterED1Ev), UNUSED)

<P><STRONG><a name="[1df]"></a>touchgfx::View&lang;settingsScreenPresenter&rang;::~View()</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, settingsscreenviewbase.o(i._ZN8touchgfx4ViewI23settingsScreenPresenterED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::~settingsScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI23settingsScreenPresenterEE)
</UL>
<P><STRONG><a name="[559]"></a>touchgfx::View&lang;settingsScreenPresenter&rang;::~View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, settingsscreenviewbase.o(i._ZN8touchgfx4ViewI23settingsScreenPresenterED1Ev), UNUSED)

<P><STRONG><a name="[1e0]"></a>touchgfx::View&lang;dateTimeSettingsScreenPresenter&rang;::~View()</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx4ViewI31dateTimeSettingsScreenPresenterED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::~dateTimeSettingsScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dateTimeSettingsScreenPresenterEE)
</UL>
<P><STRONG><a name="[55a]"></a>touchgfx::View&lang;dateTimeSettingsScreenPresenter&rang;::~View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx4ViewI31dateTimeSettingsScreenPresenterED1Ev), UNUSED)

<P><STRONG><a name="[1e1]"></a>touchgfx::View&lang;dayNightSettingsScreenPresenter&rang;::~View()</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, daynightsettingsscreenviewbase.o(i._ZN8touchgfx4ViewI31dayNightSettingsScreenPresenterED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::~dayNightSettingsScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dayNightSettingsScreenPresenterEE)
</UL>
<P><STRONG><a name="[55b]"></a>touchgfx::View&lang;dayNightSettingsScreenPresenter&rang;::~View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, daynightsettingsscreenviewbase.o(i._ZN8touchgfx4ViewI31dayNightSettingsScreenPresenterED1Ev), UNUSED)

<P><STRONG><a name="[1e2]"></a>touchgfx::View&lang;opConfigSettingsScreenPresenter&rang;::~View()</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, opconfigsettingsscreenviewbase.o(i._ZN8touchgfx4ViewI31opConfigSettingsScreenPresenterED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::~opConfigSettingsScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31opConfigSettingsScreenPresenterEE)
</UL>
<P><STRONG><a name="[55c]"></a>touchgfx::View&lang;opConfigSettingsScreenPresenter&rang;::~View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, opconfigsettingsscreenviewbase.o(i._ZN8touchgfx4ViewI31opConfigSettingsScreenPresenterED1Ev), UNUSED)

<P><STRONG><a name="[1e3]"></a>touchgfx::View&lang;tempHumiSettingsScreenPresenter&rang;::~View()</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, temphumisettingsscreenviewbase.o(i._ZN8touchgfx4ViewI31tempHumiSettingsScreenPresenterED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::~tempHumiSettingsScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31tempHumiSettingsScreenPresenterEE)
</UL>
<P><STRONG><a name="[55d]"></a>touchgfx::View&lang;tempHumiSettingsScreenPresenter&rang;::~View__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, temphumisettingsscreenviewbase.o(i._ZN8touchgfx4ViewI31tempHumiSettingsScreenPresenterED1Ev), UNUSED)

<P><STRONG><a name="[460]"></a>touchgfx::wmAt(int, int)</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx4wmAtEii))
<BR><BR>[Called By]<UL><LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::enableFl(touchgfx::Rect&)
</UL>

<P><STRONG><a name="[33d]"></a>touchgfx::Color::getColorFrom24BitRGB(unsigned char, unsigned char, unsigned char)</STRONG> (Thumb, 120 bytes, Stack size 24 bytes, color.o(i._ZN8touchgfx5Color20getColorFrom24BitRGBEhhh))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Color::getColorFrom24BitRGB(unsigned char, unsigned char, unsigned char) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::settingsScreenViewBase()
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::opConfigSettingsScreenViewBase()
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase()
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::dayNightSettingsScreenViewBase()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::mainScreenViewBase()
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
</UL>

<P><STRONG><a name="[1e6]"></a>touchgfx::Image::setBitmap(const touchgfx::Bitmap&)</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, image.o(i._ZN8touchgfx5Image9setBitmapERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::hasTransparentPixels() const
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::settingsScreenViewBase()
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::opConfigSettingsScreenViewBase()
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase()
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::dayNightSettingsScreenViewBase()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::mainScreenViewBase()
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[434]"></a>touchgfx::Image::Image(const touchgfx::Bitmap&)</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, slider.o(i._ZN8touchgfx5ImageC1ERKNS_6BitmapE))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::Slider()
</UL>

<P><STRONG><a name="[55e]"></a>touchgfx::Image::Image__sub_object(const touchgfx::Bitmap&)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, slider.o(i._ZN8touchgfx5ImageC1ERKNS_6BitmapE), UNUSED)

<P><STRONG><a name="[435]"></a>touchgfx::Texts::setLanguage(unsigned short)</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, texts.o(i._ZN8touchgfx5Texts11setLanguageEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Texts::setLanguage(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[437]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::getFonts()
<LI><a href="#[438]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::getInstanceSize()
<LI><a href="#[436]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TypedTextDatabase::getInstance(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[43b]"></a>touchgfx::Bitmap::clearCache()</STRONG> (Thumb, 106 bytes, Stack size 16 bytes, bitmap.o(i._ZN8touchgfx6Bitmap10clearCacheEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Bitmap::clearCache()
</UL>
<BR>[Called By]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[439]"></a>touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned)</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, bitmap.o(i._ZN8touchgfx6Bitmap22registerBitmapDatabaseEPKNS0_10BitmapDataEtPtjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned) &rArr; touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[43a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[43a]"></a>touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned)</STRONG> (Thumb, 54 bytes, Stack size 8 bytes, bitmap.o(i._ZN8touchgfx6Bitmap8setCacheEPtjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::setCache(unsigned short*, unsigned, unsigned) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[43b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::clearCache()
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[333]"></a>touchgfx::Bitmap::Bitmap(unsigned short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx6BitmapC1Et))
<BR><BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::settingsScreenViewBase()
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::opConfigSettingsScreenViewBase()
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase()
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::dayNightSettingsScreenViewBase()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::mainScreenViewBase()
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::Button()
</UL>

<P><STRONG><a name="[55f]"></a>touchgfx::Bitmap::Bitmap__sub_object(unsigned short)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx6BitmapC1Et), UNUSED)

<P><STRONG><a name="[8b]"></a>touchgfx::BlitOp::BlitOp()</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f7dma.o(i._ZN8touchgfx6BlitOpC1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> stm32f7dma.o(i._ZN10STM32F7DMAC1Ev)
</UL>
<P><STRONG><a name="[560]"></a>touchgfx::BlitOp::BlitOp__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, stm32f7dma.o(i._ZN8touchgfx6BlitOpC1Ev), UNUSED)

<P><STRONG><a name="[19e]"></a>touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, button.o(i._ZN8touchgfx6Button10setBitmapsERKNS_6BitmapES3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::settingsScreenViewBase()
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[199]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
</UL>
<P><STRONG><a name="[32a]"></a>touchgfx::Button::setAlpha(unsigned char)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mainscreenview.o(i._ZN8touchgfx6Button8setAlphaEh))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::manualOverrideBtnClicked()
</UL>

<P><STRONG><a name="[332]"></a>touchgfx::Button::Button()</STRONG> (Thumb, 96 bytes, Stack size 16 bytes, screen1viewbase.o(i._ZN8touchgfx6ButtonC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Button::Button() &rArr; touchgfx::Drawable::Drawable__sub_object() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::Drawable__sub_object()
<LI><a href="#[333]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::Bitmap(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[339]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::ToggleButton()
</UL>

<P><STRONG><a name="[561]"></a>touchgfx::Button::Button__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, screen1viewbase.o(i._ZN8touchgfx6ButtonC1Ev), UNUSED)

<P><STRONG><a name="[1e7]"></a>touchgfx::Button::~Button()</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, mainscreenview.o(i._ZN8touchgfx6ButtonD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Button::~Button()
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::~ButtonWithLabel()
<LI><a href="#[19c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::~ButtonWithIcon()
<LI><a href="#[184]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::~ToggleButton()
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::~settingsScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
</UL>
<P><STRONG><a name="[562]"></a>touchgfx::Button::~Button__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, mainscreenview.o(i._ZN8touchgfx6ButtonD1Ev), UNUSED)

<P><STRONG><a name="[f4]"></a>touchgfx::Screen::setupScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenview.o(i._ZN8touchgfx6Screen11setupScreenEv))
<BR>[Address Reference Count : 15]<UL><LI> daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
<LI> mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
<LI> opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
<LI> screen1view.o(.constdata__ZTV15Screen1ViewBase)
<LI> datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
<LI> settingsscreenview.o(.constdata__ZTV22settingsScreenViewBase)
<LI> temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dateTimeSettingsScreenPresenterEE)
<LI> daynightsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dayNightSettingsScreenPresenterEE)
<LI> mainscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI19mainScreenPresenterEE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
<LI> settingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI23settingsScreenPresenterEE)
<LI> opconfigsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31opConfigSettingsScreenPresenterEE)
<LI> temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31tempHumiSettingsScreenPresenterEE)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[411]"></a>touchgfx::Screen::bindTransition(touchgfx::Transition&)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6Screen14bindTransitionERNS_10TransitionE))
<BR><BR>[Called By]<UL><LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
</UL>

<P><STRONG><a name="[e2]"></a>touchgfx::Screen::handleKeyEvent(unsigned char)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14handleKeyEventEh))
<BR>[Address Reference Count : 22]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
<LI> daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
<LI> daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
<LI> mainscreenview.o(.constdata__ZTV14mainScreenView)
<LI> mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
<LI> opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
<LI> opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
<LI> screen1view.o(.constdata__ZTV11Screen1View)
<LI> screen1view.o(.constdata__ZTV15Screen1ViewBase)
<LI> datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
<LI> settingsscreenview.o(.constdata__ZTV18settingsScreenView)
<LI> settingsscreenview.o(.constdata__ZTV22settingsScreenViewBase)
<LI> temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
<LI> temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dateTimeSettingsScreenPresenterEE)
<LI> daynightsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dayNightSettingsScreenPresenterEE)
<LI> mainscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI19mainScreenPresenterEE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
<LI> settingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI23settingsScreenPresenterEE)
<LI> opconfigsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31opConfigSettingsScreenPresenterEE)
<LI> temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31tempHumiSettingsScreenPresenterEE)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[f5]"></a>touchgfx::Screen::tearDownScreen()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenview.o(i._ZN8touchgfx6Screen14tearDownScreenEv))
<BR>[Address Reference Count : 15]<UL><LI> daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
<LI> mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
<LI> opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
<LI> screen1view.o(.constdata__ZTV15Screen1ViewBase)
<LI> datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
<LI> settingsscreenview.o(.constdata__ZTV22settingsScreenViewBase)
<LI> temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dateTimeSettingsScreenPresenterEE)
<LI> daynightsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dayNightSettingsScreenPresenterEE)
<LI> mainscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI19mainScreenPresenterEE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
<LI> settingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI23settingsScreenPresenterEE)
<LI> opconfigsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31opConfigSettingsScreenPresenterEE)
<LI> temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31tempHumiSettingsScreenPresenterEE)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[dc]"></a>touchgfx::Screen::afterTransition()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15afterTransitionEv))
<BR>[Address Reference Count : 22]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
<LI> daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
<LI> daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
<LI> mainscreenview.o(.constdata__ZTV14mainScreenView)
<LI> mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
<LI> opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
<LI> opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
<LI> screen1view.o(.constdata__ZTV11Screen1View)
<LI> screen1view.o(.constdata__ZTV15Screen1ViewBase)
<LI> datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
<LI> settingsscreenview.o(.constdata__ZTV18settingsScreenView)
<LI> settingsscreenview.o(.constdata__ZTV22settingsScreenViewBase)
<LI> temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
<LI> temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dateTimeSettingsScreenPresenterEE)
<LI> daynightsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dayNightSettingsScreenPresenterEE)
<LI> mainscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI19mainScreenPresenterEE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
<LI> settingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI23settingsScreenPresenterEE)
<LI> opconfigsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31opConfigSettingsScreenPresenterEE)
<LI> temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31tempHumiSettingsScreenPresenterEE)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[df]"></a>touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 184 bytes, Stack size 72 bytes, screen.o(i._ZN8touchgfx6Screen15handleDragEventERKNS_9DragEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(short, short) const
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickEvent::ClickEvent(touchgfx::ClickEvent::ClickEventType, short, short, short)
</UL>
<BR>[Address Reference Count : 22]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
<LI> daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
<LI> daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
<LI> mainscreenview.o(.constdata__ZTV14mainScreenView)
<LI> mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
<LI> opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
<LI> opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
<LI> screen1view.o(.constdata__ZTV11Screen1View)
<LI> screen1view.o(.constdata__ZTV15Screen1ViewBase)
<LI> datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
<LI> settingsscreenview.o(.constdata__ZTV18settingsScreenView)
<LI> settingsscreenview.o(.constdata__ZTV22settingsScreenViewBase)
<LI> temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
<LI> temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dateTimeSettingsScreenPresenterEE)
<LI> daynightsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dayNightSettingsScreenPresenterEE)
<LI> mainscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI19mainScreenPresenterEE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
<LI> settingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI23settingsScreenPresenterEE)
<LI> opconfigsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31opConfigSettingsScreenPresenterEE)
<LI> temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31tempHumiSettingsScreenPresenterEE)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[e1]"></a>touchgfx::Screen::handleTickEvent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenview.o(i._ZN8touchgfx6Screen15handleTickEventEv))
<BR>[Address Reference Count : 22]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
<LI> daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
<LI> daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
<LI> mainscreenview.o(.constdata__ZTV14mainScreenView)
<LI> mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
<LI> opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
<LI> opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
<LI> screen1view.o(.constdata__ZTV11Screen1View)
<LI> screen1view.o(.constdata__ZTV15Screen1ViewBase)
<LI> datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
<LI> settingsscreenview.o(.constdata__ZTV18settingsScreenView)
<LI> settingsscreenview.o(.constdata__ZTV22settingsScreenViewBase)
<LI> temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
<LI> temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dateTimeSettingsScreenPresenterEE)
<LI> daynightsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dayNightSettingsScreenPresenterEE)
<LI> mainscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI19mainScreenPresenterEE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
<LI> settingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI23settingsScreenPresenterEE)
<LI> opconfigsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31opConfigSettingsScreenPresenterEE)
<LI> temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31tempHumiSettingsScreenPresenterEE)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[de]"></a>touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 420 bytes, Stack size 144 bytes, screen.o(i._ZN8touchgfx6Screen16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 168<LI>Call Chain = touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(short, short) const
<LI><a href="#[43e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ClickEvent::ClickEvent(touchgfx::ClickEvent::ClickEventType, short, short, short)
<LI><a href="#[255]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy4
</UL>
<BR>[Address Reference Count : 22]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
<LI> daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
<LI> daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
<LI> mainscreenview.o(.constdata__ZTV14mainScreenView)
<LI> mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
<LI> opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
<LI> opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
<LI> screen1view.o(.constdata__ZTV11Screen1View)
<LI> screen1view.o(.constdata__ZTV15Screen1ViewBase)
<LI> datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
<LI> settingsscreenview.o(.constdata__ZTV18settingsScreenView)
<LI> settingsscreenview.o(.constdata__ZTV22settingsScreenViewBase)
<LI> temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
<LI> temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dateTimeSettingsScreenPresenterEE)
<LI> daynightsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dayNightSettingsScreenPresenterEE)
<LI> mainscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI19mainScreenPresenterEE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
<LI> settingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI23settingsScreenPresenterEE)
<LI> opconfigsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31opConfigSettingsScreenPresenterEE)
<LI> temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31tempHumiSettingsScreenPresenterEE)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[e0]"></a>touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, screen.o(i._ZN8touchgfx6Screen18handleGestureEventERKNS_12GestureEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&) &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Address Reference Count : 22]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
<LI> daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
<LI> daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
<LI> mainscreenview.o(.constdata__ZTV14mainScreenView)
<LI> mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
<LI> opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
<LI> opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
<LI> screen1view.o(.constdata__ZTV11Screen1View)
<LI> screen1view.o(.constdata__ZTV15Screen1ViewBase)
<LI> datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
<LI> settingsscreenview.o(.constdata__ZTV18settingsScreenView)
<LI> settingsscreenview.o(.constdata__ZTV22settingsScreenViewBase)
<LI> temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
<LI> temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dateTimeSettingsScreenPresenterEE)
<LI> daynightsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dayNightSettingsScreenPresenterEE)
<LI> mainscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI19mainScreenPresenterEE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
<LI> settingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI23settingsScreenPresenterEE)
<LI> opconfigsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31opConfigSettingsScreenPresenterEE)
<LI> temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31tempHumiSettingsScreenPresenterEE)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[344]"></a>touchgfx::Screen::add(touchgfx::Drawable&)</STRONG> (Thumb, 16 bytes, Stack size 16 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx6Screen3addERNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Screen::add(touchgfx::Drawable&) &rArr; touchgfx::Container::add(touchgfx::Drawable&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::settingsScreenViewBase()
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::opConfigSettingsScreenViewBase()
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase()
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::dayNightSettingsScreenViewBase()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::mainScreenViewBase()
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
</UL>

<P><STRONG><a name="[da]"></a>touchgfx::Screen::draw(touchgfx::Rect&)</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, screen.o(i._ZN8touchgfx6Screen4drawERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = touchgfx::Screen::draw(touchgfx::Rect&) &rArr; touchgfx::Screen::startSMOC(touchgfx::Rect&) &rArr; touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::draw(const touchgfx::Rect&) const
<LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::startSMOC(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 22]<UL><LI> datetimesettingsscreenview.o(.constdata__ZTV26dateTimeSettingsScreenView)
<LI> daynightsettingsscreenview.o(.constdata__ZTV26dayNightSettingsScreenView)
<LI> daynightsettingsscreenview.o(.constdata__ZTV30dayNightSettingsScreenViewBase)
<LI> mainscreenview.o(.constdata__ZTV14mainScreenView)
<LI> mainscreenview.o(.constdata__ZTV18mainScreenViewBase)
<LI> opconfigsettingsscreenview.o(.constdata__ZTV26opConfigSettingsScreenView)
<LI> opconfigsettingsscreenview.o(.constdata__ZTV30opConfigSettingsScreenViewBase)
<LI> screen1view.o(.constdata__ZTV11Screen1View)
<LI> screen1view.o(.constdata__ZTV15Screen1ViewBase)
<LI> datetimesettingsscreenview.o(.constdata__ZTV30dateTimeSettingsScreenViewBase)
<LI> settingsscreenview.o(.constdata__ZTV18settingsScreenView)
<LI> settingsscreenview.o(.constdata__ZTV22settingsScreenViewBase)
<LI> temphumisettingsscreenview.o(.constdata__ZTV26tempHumiSettingsScreenView)
<LI> temphumisettingsscreenview.o(.constdata__ZTV30tempHumiSettingsScreenViewBase)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dateTimeSettingsScreenPresenterEE)
<LI> daynightsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31dayNightSettingsScreenPresenterEE)
<LI> mainscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI19mainScreenPresenterEE)
<LI> screen1viewbase.o(.constdata__ZTVN8touchgfx4ViewI16Screen1PresenterEE)
<LI> settingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI23settingsScreenPresenterEE)
<LI> opconfigsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31opConfigSettingsScreenPresenterEE)
<LI> temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx4ViewI31tempHumiSettingsScreenPresenterEE)
<LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[440]"></a>touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)</STRONG> (Thumb, 540 bytes, Stack size 72 bytes, screen.o(i._ZN8touchgfx6Screen5JSMOCERKNS_4RectEPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 128 + In Cycle
<LI>Call Chain = touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(const touchgfx::Rect&) const
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
<LI><a href="#[441]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedVisibleRect()
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedAbsY()
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedAbsX()
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::startSMOC(touchgfx::Rect&)
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[43f]"></a>touchgfx::Screen::startSMOC(touchgfx::Rect&)</STRONG> (Thumb, 34 bytes, Stack size 16 bytes, screen.o(i._ZN8touchgfx6Screen9startSMOCERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = touchgfx::Screen::startSMOC(touchgfx::Rect&) &rArr; touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) &rArr;  touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*) (Cycle)
</UL>
<BR>[Calls]<UL><LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
</UL>

<P><STRONG><a name="[331]"></a>touchgfx::Screen::Screen()</STRONG> (Thumb, 122 bytes, Stack size 32 bytes, screen.o(i._ZN8touchgfx6ScreenC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Screen::Screen() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::settingsScreenViewBase()
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::opConfigSettingsScreenViewBase()
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase()
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::dayNightSettingsScreenViewBase()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::mainScreenViewBase()
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
</UL>

<P><STRONG><a name="[563]"></a>touchgfx::Screen::Screen__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, screen.o(i._ZN8touchgfx6ScreenC1Ev), UNUSED)

<P><STRONG><a name="[1e8]"></a>touchgfx::Screen::~Screen()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6ScreenD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> screen.o(.constdata__ZTVN8touchgfx6ScreenE)
</UL>
<P><STRONG><a name="[564]"></a>touchgfx::Screen::~Screen__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen.o(i._ZN8touchgfx6ScreenD1Ev), UNUSED)

<P><STRONG><a name="[3a7]"></a>touchgfx::Slider::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&)</STRONG> (Thumb, 102 bytes, Stack size 24 bytes, slider.o(i._ZN8touchgfx6Slider10setBitmapsERKNS_6BitmapES3_S3_))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::Slider::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
</UL>

<P><STRONG><a name="[1f5]"></a>touchgfx::Slider::setValueRange(int, int)</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, slider.o(i._ZN8touchgfx6Slider13setValueRangeEii))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Slider::setValueRange(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::Slider()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[1f4]"></a>touchgfx::Slider::setValueRange(int, int, int)</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, slider.o(i._ZN8touchgfx6Slider13setValueRangeEiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Slider::setValueRange(int, int, int) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[1ee]"></a>touchgfx::Slider::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 44 bytes, Stack size 16 bytes, slider.o(i._ZN8touchgfx6Slider15handleDragEventERKNS_9DragEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Slider::handleDragEvent(const touchgfx::DragEvent&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[1ed]"></a>touchgfx::Slider::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 122 bytes, Stack size 16 bytes, slider.o(i._ZN8touchgfx6Slider16handleClickEventERKNS_10ClickEventE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Slider::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[3a8]"></a>touchgfx::Slider::setNewValueCallback(touchgfx::GenericCallback&lang;const touchgfx::Slider&, int&rang;&)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, temphumisettingsscreenviewbase.o(i._ZN8touchgfx6Slider19setNewValueCallbackERNS_15GenericCallbackIRKS0_iEE))
<BR><BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
</UL>

<P><STRONG><a name="[1f3]"></a>touchgfx::Slider::setupVerticalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 158 bytes, Stack size 40 bytes, slider.o(i._ZN8touchgfx6Slider19setupVerticalSliderEttttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::Slider::setupVerticalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[18f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setXY(short, short)
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[1f7]"></a>touchgfx::Slider::updateIndicatorPosition(short)</STRONG> (Thumb, 242 bytes, Stack size 32 bytes, slider.o(i._ZN8touchgfx6Slider23updateIndicatorPositionEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::Slider::updateIndicatorPosition(short) &rArr; touchgfx::Drawable::setPosition(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[188]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::invalidate() const
<LI><a href="#[197]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::moveTo(short, short)
<LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[1f6]"></a>touchgfx::Slider::setValue(int)</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, slider.o(i._ZN8touchgfx6Slider8setValueEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Slider::setValue(int)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
<LI><a href="#[146]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::setupScreen()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[3a5]"></a>touchgfx::Slider::Slider()</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, slider.o(i._ZN8touchgfx6SliderC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::Slider::Slider() &rArr; touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[1f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::add(touchgfx::Drawable&)
<LI><a href="#[1f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setValueRange(int, int)
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::Container()
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
</UL>

<P><STRONG><a name="[565]"></a>touchgfx::Slider::Slider__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, slider.o(i._ZN8touchgfx6SliderC1Ev), UNUSED)

<P><STRONG><a name="[1e9]"></a>touchgfx::Slider::~Slider()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, slider.o(i._ZN8touchgfx6SliderD1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::~tempHumiSettingsScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[566]"></a>touchgfx::Slider::~Slider__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, slider.o(i._ZN8touchgfx6SliderD1Ev), UNUSED)

<P><STRONG><a name="[189]"></a>touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx6Widget12getLastChildEssPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Widget::getLastChild(short, short, touchgfx::Drawable**)
</UL>
<BR>[Address Reference Count : 12]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[336]"></a>touchgfx::Widget::Widget__sub_object()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx6WidgetC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::opConfigSettingsScreenViewBase()
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase()
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::dayNightSettingsScreenViewBase()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::mainScreenViewBase()
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
</UL>

<P><STRONG><a name="[567]"></a>touchgfx::Widget::~Widget()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, datetimesettingsscreenview.o(i._ZN8touchgfx6WidgetD2Ev), UNUSED)

<P><STRONG><a name="[1fd]"></a>touchgfx::Widget::~Widget__sub_object()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, datetimesettingsscreenview.o(i._ZN8touchgfx6WidgetD2Ev))
<BR><BR>[Called By]<UL><LI><a href="#[223]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::~TextArea()
<LI><a href="#[1e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::~Button()
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::~dateTimeSettingsScreenViewBase()
<LI><a href="#[1d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::~Box()
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::~mainScreenViewBase()
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::~dayNightSettingsScreenViewBase()
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::~tempHumiSettingsScreenViewBase()
<LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::~settingsScreenViewBase()
<LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase()
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::~opConfigSettingsScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
</UL>
<P><STRONG><a name="[44f]"></a>touchgfx::memset(void*, unsigned char, unsigned)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, utils.o(i._ZN8touchgfx6memsetEPvhj))
<BR><BR>[Called By]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[445]"></a>touchgfx::Unicode::composeString(const unsigned short*&, unsigned short, const unsigned short*, bool, bool, int, bool, int, bool, int&, unsigned short, unsigned short*)</STRONG> (Thumb, 344 bytes, Stack size 52 bytes, unicode.o(i._ZN8touchgfx7Unicode13composeStringERPKttS2_bbibibRitPt))
<BR><BR>[Stack]<UL><LI>Max Depth = 52<LI>Call Chain = touchgfx::Unicode::composeString(const unsigned short*&, unsigned short, const unsigned short*, bool, bool, int, bool, int, bool, int&, unsigned short, unsigned short*)
</UL>
<BR>[Calls]<UL><LI><a href="#[446]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strlen(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[447]"></a>touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)</STRONG> (Thumb, 234 bytes, Stack size 32 bytes, unicode.o(i._ZN8touchgfx7Unicode22parseFlagsAndPrecisionERPKtRtRbS5_S5_S5_RiS5_S6_))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
</UL>
<BR>[Calls]<UL><LI><a href="#[448]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::atoi(const unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[448]"></a>touchgfx::Unicode::atoi(const unsigned short*)</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, unicode.o(i._ZN8touchgfx7Unicode4atoiEPKt))
<BR><BR>[Called By]<UL><LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
</UL>

<P><STRONG><a name="[449]"></a>touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int)</STRONG> (Thumb, 96 bytes, Stack size 56 bytes, unicode.o(i._ZN8touchgfx7Unicode4itoaEiPtti))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[44b]"></a>touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int)</STRONG> (Thumb, 72 bytes, Stack size 52 bytes, unicode.o(i._ZN8touchgfx7Unicode4utoaEjPtti))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list)
</UL>

<P><STRONG><a name="[44d]"></a>touchgfx::Unicode::strlen(const char*)</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, unicode.o(i._ZN8touchgfx7Unicode6strlenEPKc))
<BR><BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list)
</UL>

<P><STRONG><a name="[446]"></a>touchgfx::Unicode::strlen(const unsigned short*)</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, unicode.o(i._ZN8touchgfx7Unicode6strlenEPKt))
<BR><BR>[Called By]<UL><LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::composeString(const unsigned short*&, unsigned short, const unsigned short*, bool, bool, int, bool, int, bool, int&, unsigned short, unsigned short*)
</UL>

<P><STRONG><a name="[44a]"></a>touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, unicode.o(i._ZN8touchgfx7Unicode7strncpyEPtPKct))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list)
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int)
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int)
</UL>

<P><STRONG><a name="[314]"></a>touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)</STRONG> (Thumb, 18 bytes, Stack size 24 bytes, unicode.o(i._ZN8touchgfx7Unicode8snprintfEPttPKcz))
<BR><BR>[Stack]<UL><LI>Max Depth = 424 + Unknown Stack Size
<LI>Call Chain = touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list)
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setMonth(int)
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setYear(int)
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setHour(int)
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setMin(int)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setDay(int)
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setDate(int, int, int, int, int)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setTemperature(int)
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setHumidity(int)
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::setDayEnd(int, int)
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::setDayBegin(int, int)
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::setNightTempTxt(int)
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::setNightHumiTxt(int)
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::setDayTempTxt(int)
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::setDayHumiTxt(int)
</UL>

<P><STRONG><a name="[44c]"></a>touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list)</STRONG> (Thumb, 52 bytes, Stack size 144 bytes, unicode.o(i._ZN8touchgfx7Unicode9vsnprintfEPttPKcSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 400 + Unknown Stack Size
<LI>Call Chain = touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
<LI><a href="#[44e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list)
<LI><a href="#[44a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
<LI><a href="#[44d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::strlen(const char*)
</UL>
<BR>[Called By]<UL><LI><a href="#[314]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...)
</UL>

<P><STRONG><a name="[44e]"></a>touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list)</STRONG> (Thumb, 580 bytes, Stack size 192 bytes, unicode.o(i._ZN8touchgfx7Unicode9vsnprintfEPttPKtSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 256<LI>Call Chain = touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[44f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::memset(void*, unsigned char, unsigned)
<LI><a href="#[44b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::utoa(unsigned, unsigned short*, unsigned short, int)
<LI><a href="#[449]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int)
<LI><a href="#[447]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::parseFlagsAndPrecision(const unsigned short*&, unsigned short&, bool&, bool&, bool&, bool&, int&, bool&, int&)
<LI><a href="#[445]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::composeString(const unsigned short*&, unsigned short, const unsigned short*, bool, bool, int, bool, int, bool, int&, unsigned short, unsigned short*)
</UL>
<BR>[Called By]<UL><LI><a href="#[44c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list)
</UL>

<P><STRONG><a name="[450]"></a>touchgfx::hw_init()</STRONG> (Thumb, 360 bytes, Stack size 24 bytes, boardconfiguration.o(i._ZN8touchgfx7hw_initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 320<LI>Call Chain = touchgfx::hw_init() &rArr; SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_LayerInit(unsigned short, unsigned)
<LI><a href="#[452]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SCB_EnableDCache()
<LI><a href="#[431]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::init()
<LI><a href="#[2e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_RTC_Init
<LI><a href="#[2e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;MX_GPIO_Init
<LI><a href="#[451]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_DisableIRQ
<LI><a href="#[453]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_MPU_ConfigRegion
<LI><a href="#[2ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_Init
<LI><a href="#[273]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_SDRAM_Init
<LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_QSPI_Init
<LI><a href="#[27a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_QSPI_EnableMemoryMappedMode
<LI><a href="#[26f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_Init
<LI><a href="#[26d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_DisplayOn
<LI><a href="#[2e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;SystemClock_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[1fe]"></a>touchgfx::Callback&lang;Screen1ViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::~Screen1ViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTVN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvEE)
</UL>
<P><STRONG><a name="[568]"></a>touchgfx::Callback&lang;Screen1ViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, screen1viewbase.o(i._ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvED1Ev), UNUSED)

<P><STRONG><a name="[201]"></a>touchgfx::Callback&lang;mainScreenViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, mainscreenviewbase.o(i._ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::~mainScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvEE)
</UL>
<P><STRONG><a name="[569]"></a>touchgfx::Callback&lang;mainScreenViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, mainscreenviewbase.o(i._ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvED1Ev), UNUSED)

<P><STRONG><a name="[204]"></a>touchgfx::Callback&lang;settingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, settingsscreenviewbase.o(i._ZN8touchgfx8CallbackI22settingsScreenViewBaseRKNS_14AbstractButtonEvED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[11b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::~settingsScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI22settingsScreenViewBaseRKNS_14AbstractButtonEvEE)
</UL>
<P><STRONG><a name="[56a]"></a>touchgfx::Callback&lang;settingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, settingsscreenviewbase.o(i._ZN8touchgfx8CallbackI22settingsScreenViewBaseRKNS_14AbstractButtonEvED1Ev), UNUSED)

<P><STRONG><a name="[207]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::~Callback()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx8CallbackI23FrontendApplicationBasevvED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionWest()
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotomainScreenScreenSlideTransitionWest()
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gototempHumiSettingsScreenScreenSlideTransitionEast()
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoopConfigSettingsScreenScreenSlideTransitionEast()
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotodayNightSettingsScreenScreenSlideTransitionEast()
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotodateTimeSettingsScreenScreenSlideTransitionEast()
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionEast()
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotomainScreenScreenNoTransition()
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransition()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvEE)
</UL>
<P><STRONG><a name="[56b]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::~Callback__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx8CallbackI23FrontendApplicationBasevvED1Ev), UNUSED)

<P><STRONG><a name="[364]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::operator =(const touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;&)</STRONG> (Thumb, 14 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx8CallbackI23FrontendApplicationBasevvEaSERKS2_))
<BR><BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionWest()
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotomainScreenScreenSlideTransitionWest()
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gototempHumiSettingsScreenScreenSlideTransitionEast()
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoopConfigSettingsScreenScreenSlideTransitionEast()
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotodayNightSettingsScreenScreenSlideTransitionEast()
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotodateTimeSettingsScreenScreenSlideTransitionEast()
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionEast()
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotomainScreenScreenNoTransition()
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransition()
</UL>

<P><STRONG><a name="[20a]"></a>touchgfx::Callback&lang;dateTimeSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx8CallbackI30dateTimeSettingsScreenViewBaseRKNS_14AbstractButtonEvED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::~dateTimeSettingsScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30dateTimeSettingsScreenViewBaseRKNS_14AbstractButtonEvEE)
</UL>
<P><STRONG><a name="[56c]"></a>touchgfx::Callback&lang;dateTimeSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx8CallbackI30dateTimeSettingsScreenViewBaseRKNS_14AbstractButtonEvED1Ev), UNUSED)

<P><STRONG><a name="[20d]"></a>touchgfx::Callback&lang;dayNightSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, daynightsettingsscreenviewbase.o(i._ZN8touchgfx8CallbackI30dayNightSettingsScreenViewBaseRKNS_14AbstractButtonEvED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::~dayNightSettingsScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30dayNightSettingsScreenViewBaseRKNS_14AbstractButtonEvEE)
</UL>
<P><STRONG><a name="[56d]"></a>touchgfx::Callback&lang;dayNightSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, daynightsettingsscreenviewbase.o(i._ZN8touchgfx8CallbackI30dayNightSettingsScreenViewBaseRKNS_14AbstractButtonEvED1Ev), UNUSED)

<P><STRONG><a name="[210]"></a>touchgfx::Callback&lang;opConfigSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, opconfigsettingsscreenviewbase.o(i._ZN8touchgfx8CallbackI30opConfigSettingsScreenViewBaseRKNS_14AbstractButtonEvED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::~opConfigSettingsScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30opConfigSettingsScreenViewBaseRKNS_14AbstractButtonEvEE)
</UL>
<P><STRONG><a name="[56e]"></a>touchgfx::Callback&lang;opConfigSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, opconfigsettingsscreenviewbase.o(i._ZN8touchgfx8CallbackI30opConfigSettingsScreenViewBaseRKNS_14AbstractButtonEvED1Ev), UNUSED)

<P><STRONG><a name="[213]"></a>touchgfx::Callback&lang;tempHumiSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, temphumisettingsscreenviewbase.o(i._ZN8touchgfx8CallbackI30tempHumiSettingsScreenViewBaseRKNS_14AbstractButtonEvED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::~tempHumiSettingsScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30tempHumiSettingsScreenViewBaseRKNS_14AbstractButtonEvEE)
</UL>
<P><STRONG><a name="[56f]"></a>touchgfx::Callback&lang;tempHumiSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::~Callback__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, temphumisettingsscreenviewbase.o(i._ZN8touchgfx8CallbackI30tempHumiSettingsScreenViewBaseRKNS_14AbstractButtonEvED1Ev), UNUSED)

<P><STRONG><a name="[216]"></a>touchgfx::Callback&lang;tempHumiSettingsScreenViewBase, const touchgfx::Slider&, int&rang;::~Callback()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, temphumisettingsscreenviewbase.o(i._ZN8touchgfx8CallbackI30tempHumiSettingsScreenViewBaseRKNS_6SliderEiED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::~tempHumiSettingsScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30tempHumiSettingsScreenViewBaseRKNS_6SliderEiEE)
</UL>
<P><STRONG><a name="[570]"></a>touchgfx::Callback&lang;tempHumiSettingsScreenViewBase, const touchgfx::Slider&, int&rang;::~Callback__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, temphumisettingsscreenviewbase.o(i._ZN8touchgfx8CallbackI30tempHumiSettingsScreenViewBaseRKNS_6SliderEiED1Ev), UNUSED)

<P><STRONG><a name="[219]"></a>touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::Drawable&, void&rang;::~Callback()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[1a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::~SlideTransition()
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::init()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvEE)
</UL>
<P><STRONG><a name="[571]"></a>touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::Drawable&, void&rang;::~Callback__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvED1Ev), UNUSED)

<P><STRONG><a name="[21b]"></a>touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, touchgfx::Drawable&, void&rang;::~Callback()</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvED1Ev))
<BR><BR>[Called By]<UL><LI><a href="#[1ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::~SlideTransition()
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::init()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvEE)
</UL>
<P><STRONG><a name="[572]"></a>touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, touchgfx::Drawable&, void&rang;::~Callback__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvED1Ev), UNUSED)

<P><STRONG><a name="[18c]"></a>touchgfx::Drawable::setPosition(short, short, short, short)</STRONG> (Thumb, 52 bytes, Stack size 24 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable11setPositionEssss))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Drawable::setPosition(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::settingsScreenViewBase()
<LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::opConfigSettingsScreenViewBase()
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase()
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::dayNightSettingsScreenViewBase()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::mainScreenViewBase()
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::SlideTransition(unsigned char)
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::SlideTransition(unsigned char)
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::updateIndicatorPosition(short)
</UL>
<BR>[Address Reference Count : 15]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[196]"></a>touchgfx::Drawable::moveRelative(short, short)</STRONG> (Thumb, 92 bytes, Stack size 24 bytes, drawable.o(i._ZN8touchgfx8Drawable12moveRelativeEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Drawable::moveRelative(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
</UL>
<BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::handleTickEvent()
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::handleTickEvent()
</UL>
<BR>[Address Reference Count : 15]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[32b]"></a>touchgfx::Drawable::setTouchable(bool)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, mainscreenview.o(i._ZN8touchgfx8Drawable12setTouchableEb))
<BR><BR>[Called By]<UL><LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::manualOverrideBtnClicked()
</UL>

<P><STRONG><a name="[443]"></a>touchgfx::Drawable::getCachedAbsX()</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, screen.o(i._ZN8touchgfx8Drawable13getCachedAbsXEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Drawable::getCachedAbsX() &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[442]"></a>touchgfx::Drawable::getCachedAbsY()</STRONG> (Thumb, 38 bytes, Stack size 16 bytes, screen.o(i._ZN8touchgfx8Drawable13getCachedAbsYEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Drawable::getCachedAbsY() &rArr; touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[198]"></a>touchgfx::Drawable::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable14setupDrawChainERKNS_4RectEPPS0_))
<BR>[Address Reference Count : 13]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[194]"></a>touchgfx::Drawable::handleDragEvent(const touchgfx::DragEvent&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleDragEventERKNS_9DragEventE))
<BR>[Address Reference Count : 14]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[195]"></a>touchgfx::Drawable::handleTickEvent()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable15handleTickEventEv))
<BR>[Address Reference Count : 15]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[1a3]"></a>touchgfx::Drawable::handleClickEvent(const touchgfx::ClickEvent&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable16handleClickEventERKNS_10ClickEventE))
<BR>[Address Reference Count : 9]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[193]"></a>touchgfx::Drawable::handleGestureEvent(const touchgfx::GestureEvent&)</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable18handleGestureEventERKNS_12GestureEventE))
<BR>[Address Reference Count : 15]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[441]"></a>touchgfx::Drawable::getCachedVisibleRect()</STRONG> (Thumb, 56 bytes, Stack size 24 bytes, screen.o(i._ZN8touchgfx8Drawable20getCachedVisibleRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Drawable::getCachedVisibleRect() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[18d]"></a>touchgfx::Drawable::setX(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setXEs))
<BR>[Address Reference Count : 15]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[18e]"></a>touchgfx::Drawable::setY(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable4setYEs))
<BR>[Address Reference Count : 15]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[18f]"></a>touchgfx::Drawable::setXY(short, short)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable5setXYEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::setXY(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::settingsScreenViewBase()
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::opConfigSettingsScreenViewBase()
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase()
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::dayNightSettingsScreenViewBase()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::mainScreenViewBase()
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
<LI><a href="#[1f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setupVerticalSlider(unsigned short, unsigned short, unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Address Reference Count : 15]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[197]"></a>touchgfx::Drawable::moveTo(short, short)</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable6moveToEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::moveTo(short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::updateIndicatorPosition(short)
</UL>
<BR>[Address Reference Count : 15]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[190]"></a>touchgfx::Drawable::setWidth(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable8setWidthEs))
<BR>[Address Reference Count : 15]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[191]"></a>touchgfx::Drawable::setHeight(short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx8Drawable9setHeightEs))
<BR>[Address Reference Count : 15]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[35e]"></a>touchgfx::Drawable::Drawable__sub_object()</STRONG> (Thumb, 68 bytes, Stack size 16 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx8DrawableC2Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Drawable::Drawable__sub_object() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::settingsScreenViewBase()
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
<LI><a href="#[332]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::Button()
<LI><a href="#[444]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::Container()
<LI><a href="#[434]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::Image(const touchgfx::Bitmap&)
</UL>

<P><STRONG><a name="[423]"></a>touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)</STRONG> (Thumb, 122 bytes, Stack size 40 bytes, gestures.o(i._ZN8touchgfx8Gestures17registerDragEventEtttt))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[454]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1 touchgfx::abs&lang;short&rang;(T1)
</UL>
<BR>[Called By]<UL><LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[424]"></a>touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short)</STRONG> (Thumb, 142 bytes, Stack size 48 bytes, gestures.o(i._ZN8touchgfx8Gestures18registerClickEventENS_10ClickEvent14ClickEventTypeEtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 60<LI>Call Chain = touchgfx::Gestures::registerClickEvent(touchgfx::ClickEvent::ClickEventType, unsigned short, unsigned short) &rArr; touchgfx::GestureEvent::GestureEvent(touchgfx::GestureEvent::GestureType, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[455]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GestureEvent::GestureEvent(touchgfx::GestureEvent::GestureType, short, short, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::noTouch()
<LI><a href="#[d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::touch(int, int)
</UL>

<P><STRONG><a name="[420]"></a>touchgfx::Gestures::registerEventListener(touchgfx::UIEventListener&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, gestures.o(i._ZN8touchgfx8Gestures21registerEventListenerERNS_15UIEventListenerE))
<BR><BR>[Called By]<UL><LI><a href="#[c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::registerEventListener(touchgfx::UIEventListener&)
</UL>

<P><STRONG><a name="[421]"></a>touchgfx::Gestures::tick()</STRONG> (Thumb, 28 bytes, Stack size 0 bytes, gestures.o(i._ZN8touchgfx8Gestures4tickEv))
<BR><BR>[Called By]<UL><LI><a href="#[d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::tick()
</UL>

<P><STRONG><a name="[456]"></a>touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 368 bytes, Stack size 72 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp16blitCopyARGB8888EPKjRKNS_4RectES5_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[21d]"></a>touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)</STRONG> (Thumb, 412 bytes, Stack size 64 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp17drawPartialBitmapERKNS_6BitmapEssRKNS_4RectEhb))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool) &rArr; touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[457]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getFormat() const
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[458]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getData() const
<LI><a href="#[433]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::hasTransparentPixels() const
<LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
<LI><a href="#[459]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getAlphaData() const
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
<LI><a href="#[45b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[456]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::blitCopyARGB8888(const unsigned*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[45b]"></a>touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char)</STRONG> (Thumb, 454 bytes, Stack size 56 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp21blitCopyAlphaPerPixelEPKtPKhRKNS_4RectES7_h))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::blitCopyAlphaPerPixel(const unsigned short*, const unsigned char*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[21f]"></a>touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&)</STRONG> (Thumb, 148 bytes, Stack size 32 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp29copyFrameBufferRegionToMemoryERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::LCD16bpp::copyFrameBufferRegionToMemory(const touchgfx::Rect&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[21e]"></a>touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool)</STRONG> (Thumb, 596 bytes, Stack size 72 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8blitCopyEPKtRKNS_4RectES5_hb))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = touchgfx::LCD16bpp::blitCopy(const unsigned short*, const touchgfx::Rect&, const touchgfx::Rect&, unsigned char, bool) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[220]"></a>touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)</STRONG> (Thumb, 316 bytes, Stack size 56 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8fillRectERKNS_4RectENS_9colortypeEh))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[45d]"></a>touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation)</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp8nextLineEbNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation)
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[222]"></a>touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)</STRONG> (Thumb, 760 bytes, Stack size 96 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp9drawGlyphEPtNS_4RectEssttRKS2_PKNS_9GlyphNodeEPKhNS_9colortypeEhhNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&) &rArr; touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&, const touchgfx::Rect&)
</UL>
<BR>[Calls]<UL><LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realX(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[415]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(short&, short&)
<LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
<LI><a href="#[45c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation)
<LI><a href="#[45d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::nextLine(bool, touchgfx::TextRotation)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[45c]"></a>touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation)</STRONG> (Thumb, 60 bytes, Stack size 8 bytes, lcd16bpp.o(i._ZN8touchgfx8LCD16bpp9nextPixelEbNS_12TextRotationE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::LCD16bpp::nextPixel(bool, touchgfx::TextRotation)
</UL>
<BR>[Called By]<UL><LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
</UL>

<P><STRONG><a name="[90]"></a>touchgfx::LCD16bpp::~LCD16bpp()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, boardconfiguration.o(i._ZN8touchgfx8LCD16bppD1Ev))
<BR>[Address Reference Count : 2]<UL><LI> boardconfiguration.o(i.__sti___22_BoardConfiguration_cpp_dceb80ee)
<LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[573]"></a>touchgfx::LCD16bpp::~LCD16bpp__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, boardconfiguration.o(i._ZN8touchgfx8LCD16bppD1Ev), UNUSED)

<P><STRONG><a name="[341]"></a>touchgfx::TextArea::setTypedText(touchgfx::TypedText)</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, textarea.o(i._ZN8touchgfx8TextArea12setTypedTextENS_9TypedTextE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextArea::setTypedText(touchgfx::TypedText) &rArr; touchgfx::TextArea::resizeToCurrentText()
</UL>
<BR>[Calls]<UL><LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::opConfigSettingsScreenViewBase()
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase()
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::dayNightSettingsScreenViewBase()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::mainScreenViewBase()
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
</UL>

<P><STRONG><a name="[1d4]"></a>touchgfx::TextArea::getTextHeight()</STRONG> (Thumb, 36 bytes, Stack size 16 bytes, textarea.o(i._ZN8touchgfx8TextArea13getTextHeightEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 256 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::getTextHeight() &rArr; touchgfx::TextArea::getTextHeightInternal(const unsigned short*, ...) const &rArr; touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short) &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::getNextChar() &rArr; touchgfx::TextProvider::getNextCharInternal()
</UL>
<BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextHeightInternal(const unsigned short*, ...) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[33f]"></a>touchgfx::TextArea::setLinespacing(unsigned short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx8TextArea14setLinespacingEt))
<BR><BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::opConfigSettingsScreenViewBase()
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase()
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::dayNightSettingsScreenViewBase()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::mainScreenViewBase()
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
</UL>

<P><STRONG><a name="[45e]"></a>touchgfx::TextArea::resizeToCurrentText()</STRONG> (Thumb, 88 bytes, Stack size 16 bytes, textarea.o(i._ZN8touchgfx8TextArea19resizeToCurrentTextEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::TextArea::resizeToCurrentText()
</UL>
<BR>[Calls]<UL><LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
</UL>
<BR>[Called By]<UL><LI><a href="#[341]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::setTypedText(touchgfx::TypedText)
</UL>

<P><STRONG><a name="[342]"></a>touchgfx::TextArea::setAlpha(unsigned char)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx8TextArea8setAlphaEh))
<BR><BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::opConfigSettingsScreenViewBase()
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase()
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::dayNightSettingsScreenViewBase()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::mainScreenViewBase()
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
</UL>

<P><STRONG><a name="[33e]"></a>touchgfx::TextArea::setColor(touchgfx::colortype)</STRONG> (Thumb, 8 bytes, Stack size 12 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx8TextArea8setColorENS_9colortypeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 12<LI>Call Chain = touchgfx::TextArea::setColor(touchgfx::colortype)
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::opConfigSettingsScreenViewBase()
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase()
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::dayNightSettingsScreenViewBase()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::mainScreenViewBase()
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
</UL>

<P><STRONG><a name="[338]"></a>touchgfx::TextArea::TextArea()</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx8TextAreaC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = touchgfx::TextArea::TextArea() &rArr; touchgfx::Widget::Widget__sub_object() &rArr; touchgfx::Drawable::Drawable__sub_object() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::colortype::colortype(unsigned)
<LI><a href="#[340]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::TypedText(unsigned short)
<LI><a href="#[336]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::Widget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::opConfigSettingsScreenViewBase()
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase()
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::dayNightSettingsScreenViewBase()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::mainScreenViewBase()
<LI><a href="#[33a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::TextAreaWithOneWildcard()
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
</UL>

<P><STRONG><a name="[574]"></a>touchgfx::TextArea::TextArea__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx8TextAreaC1Ev), UNUSED)

<P><STRONG><a name="[223]"></a>touchgfx::TextArea::~TextArea()</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, datetimesettingsscreenview.o(i._ZN8touchgfx8TextAreaD1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::TextArea::~TextArea()
</UL>
<BR>[Calls]<UL><LI><a href="#[1fd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Widget::~Widget__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[1d2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::~TextAreaWithWildcardBase()
<LI><a href="#[14c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::~dateTimeSettingsScreenViewBase()
<LI><a href="#[fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::~mainScreenViewBase()
<LI><a href="#[157]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::~dayNightSettingsScreenViewBase()
<LI><a href="#[16a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::~tempHumiSettingsScreenViewBase()
<LI><a href="#[160]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::~opConfigSettingsScreenViewBase()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[575]"></a>touchgfx::TextArea::~TextArea__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, datetimesettingsscreenview.o(i._ZN8touchgfx8TextAreaD1Ev), UNUSED)

<P><STRONG><a name="[40e]"></a>touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)</STRONG> (Thumb, 42 bytes, Stack size 20 bytes, constfont.o(i._ZN8touchgfx9ConstFontC2EPKNS_9GlyphNodeEtthhhhtt))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[2f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::InternalFlashFont::InternalFlashFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*, const touchgfx::KerningNode*, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[1f2]"></a>touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void&rang;*)</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, container.o(i._ZN8touchgfx9Container12forEachChildEPNS_15GenericCallbackIRNS_8DrawableEvEE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Container::forEachChild(touchgfx::GenericCallback&lang;touchgfx::Drawable&, void&rang;*)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[1ec]"></a>touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)</STRONG> (Thumb, 100 bytes, Stack size 24 bytes, container.o(i._ZN8touchgfx9Container12getLastChildEssPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[1ef]"></a>touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)</STRONG> (Thumb, 88 bytes, Stack size 24 bytes, container.o(i._ZN8touchgfx9Container14setupDrawChainERKNS_4RectEPPNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**) &rArr; touchgfx::Rect::operator &(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[43f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::startSMOC(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[1f0]"></a>touchgfx::Container::add(touchgfx::Drawable&)</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, container.o(i._ZN8touchgfx9Container3addERNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Container::add(touchgfx::Drawable&) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[30d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1ViewBase::Screen1ViewBase()
<LI><a href="#[344]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::add(touchgfx::Drawable&)
<LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::Slider()
</UL>
<BR>[Address Reference Count : 2]<UL><LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[1f1]"></a>touchgfx::Container::remove(touchgfx::Drawable&)</STRONG> (Thumb, 48 bytes, Stack size 0 bytes, container.o(i._ZN8touchgfx9Container6removeERNS_8DrawableE))
<BR>[Address Reference Count : 2]<UL><LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[444]"></a>touchgfx::Container::Container()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, slider.o(i._ZN8touchgfx9ContainerC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Container::Container() &rArr; touchgfx::Drawable::Drawable__sub_object() &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[35e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::Drawable__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[3a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::Slider()
</UL>

<P><STRONG><a name="[576]"></a>touchgfx::Container::Container__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, slider.o(i._ZN8touchgfx9ContainerC1Ev), UNUSED)

<P><STRONG><a name="[22e]"></a>touchgfx::Presenter::deactivate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenpresenter.o(i._ZN8touchgfx9Presenter10deactivateEv))
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenpresenter.o(.constdata__ZTVN8touchgfx9PresenterE)
</UL>
<P><STRONG><a name="[22d]"></a>touchgfx::Presenter::activate()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenpresenter.o(i._ZN8touchgfx9Presenter8activateEv))
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenpresenter.o(.constdata__ZTVN8touchgfx9PresenterE)
</UL>
<P><STRONG><a name="[22f]"></a>touchgfx::Presenter::~Presenter()</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, datetimesettingsscreenpresenter.o(i._ZN8touchgfx9PresenterD1Ev))
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenpresenter.o(.constdata__ZTVN8touchgfx9PresenterE)
</UL>
<P><STRONG><a name="[577]"></a>touchgfx::Presenter::~Presenter__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, datetimesettingsscreenpresenter.o(i._ZN8touchgfx9PresenterD1Ev), UNUSED)

<P><STRONG><a name="[340]"></a>touchgfx::TypedText::TypedText(unsigned short)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx9TypedTextC1Et))
<BR><BR>[Called By]<UL><LI><a href="#[346]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenViewBase::settingsScreenViewBase()
<LI><a href="#[395]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenViewBase::opConfigSettingsScreenViewBase()
<LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase()
<LI><a href="#[38d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenViewBase::dayNightSettingsScreenViewBase()
<LI><a href="#[32e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenViewBase::mainScreenViewBase()
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
<LI><a href="#[3a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase()
</UL>

<P><STRONG><a name="[578]"></a>touchgfx::TypedText::TypedText__sub_object(unsigned short)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx9TypedTextC1Et), UNUSED)

<P><STRONG><a name="[3a4]"></a>touchgfx::colortype::colortype(unsigned)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx9colortypeC1Ej))
<BR><BR>[Called By]<UL><LI><a href="#[381]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase()
<LI><a href="#[338]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::TextArea()
<LI><a href="#[3a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Box::Box()
</UL>

<P><STRONG><a name="[579]"></a>touchgfx::colortype::colortype__sub_object(unsigned)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, datetimesettingsscreenviewbase.o(i._ZN8touchgfx9colortypeC1Ej), UNUSED)

<P><STRONG><a name="[3c8]"></a>clockTime::isDay(clockTime&, clockTime&)</STRONG> (Thumb, 154 bytes, Stack size 36 bytes, clocktime.o(i._ZN9clockTime5isDayERS_S0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 36<LI>Call Chain = clockTime::isDay(clockTime&, clockTime&)
</UL>
<BR>[Calls]<UL><LI><a href="#[3ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clockTime::getMin()
<LI><a href="#[463]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clockTime::incHour()
<LI><a href="#[462]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clockTime::incMin()
<LI><a href="#[461]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clockTime::equals(clockTime&)
</UL>
<BR>[Called By]<UL><LI><a href="#[3ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::tempAction()
<LI><a href="#[3c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::humiAction()
</UL>

<P><STRONG><a name="[461]"></a>clockTime::equals(clockTime&)</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, clocktime.o(i._ZN9clockTime6equalsERS_))
<BR><BR>[Called By]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clockTime::isDay(clockTime&, clockTime&)
</UL>

<P><STRONG><a name="[3ce]"></a>clockTime::getMin()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, clocktime.o(i._ZN9clockTime6getMinEv))
<BR><BR>[Called By]<UL><LI><a href="#[3b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getDayBeginMin()
<LI><a href="#[3b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getDayEndMin()
<LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clockTime::isDay(clockTime&, clockTime&)
</UL>

<P><STRONG><a name="[462]"></a>clockTime::incMin()</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, clocktime.o(i._ZN9clockTime6incMinEv))
<BR><BR>[Called By]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clockTime::isDay(clockTime&, clockTime&)
</UL>

<P><STRONG><a name="[3d1]"></a>clockTime::setMin(int)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, model.o(i._ZN9clockTime6setMinEi))
<BR><BR>[Called By]<UL><LI><a href="#[3b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeDayBeginMin(int)
<LI><a href="#[3b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeDayEndMin(int)
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::tick()
</UL>

<P><STRONG><a name="[3cf]"></a>clockTime::getHour()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, clocktime.o(i._ZN9clockTime7getHourEv))
<BR><BR>[Called By]<UL><LI><a href="#[3b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getDayBeginHour()
<LI><a href="#[3b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::getDayEndHour()
</UL>

<P><STRONG><a name="[463]"></a>clockTime::incHour()</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, clocktime.o(i._ZN9clockTime7incHourEv))
<BR><BR>[Called By]<UL><LI><a href="#[3c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;clockTime::isDay(clockTime&, clockTime&)
</UL>

<P><STRONG><a name="[3d2]"></a>clockTime::setHour(int)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, model.o(i._ZN9clockTime7setHourEi))
<BR><BR>[Called By]<UL><LI><a href="#[3b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeDayBeginHour(int)
<LI><a href="#[3b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::changeDayEndHour(int)
<LI><a href="#[347]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::tick()
</UL>

<P><STRONG><a name="[3d6]"></a>clockTime::clockTime(int, int)</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, model.o(i._ZN9clockTimeC1Eii))
<BR><BR>[Called By]<UL><LI><a href="#[311]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::Model()
</UL>

<P><STRONG><a name="[57a]"></a>clockTime::clockTime__sub_object(int, int)</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, model.o(i._ZN9clockTimeC1Eii), UNUSED)

<P><STRONG><a name="[d4]"></a>STM32F7HAL::getTFTFrameBuffer() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f7hal.o(i._ZNK10STM32F7HAL17getTFTFrameBufferEv))
<BR>[Address Reference Count : 1]<UL><LI> stm32f7hal.o(.constdata__ZTV10STM32F7HAL)
</UL>
<P><STRONG><a name="[31a]"></a>touchgfx::ToggleButton::getState() const</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, mainscreenview.o(i._ZNK8touchgfx12ToggleButton8getStateEv))
<BR><BR>[Called By]<UL><LI><a href="#[142]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::op3HeaterBtnClicked()
<LI><a href="#[13f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::op2HeaterBtnClicked()
<LI><a href="#[13c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::op1HeaterBtnClicked()
<LI><a href="#[144]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::op3LightBtnClicked()
<LI><a href="#[141]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::op2LightBtnClicked()
<LI><a href="#[13e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::op1LightBtnClicked()
<LI><a href="#[143]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::op3HumiBtnClicked()
<LI><a href="#[140]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::op2HumiBtnClicked()
<LI><a href="#[13d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::op1HumiBtnClicked()
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::manualOverrideBtnClicked()
<LI><a href="#[ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::humidifierOpBtnClicked()
<LI><a href="#[f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::heaterOpBtnClicked()
<LI><a href="#[f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::lightOpBtnClicked()
<LI><a href="#[ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setupScreen()
</UL>

<P><STRONG><a name="[19d]"></a>touchgfx::ButtonWithIcon::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 226 bytes, Stack size 64 bytes, buttonwithicon.o(i._ZNK8touchgfx14ButtonWithIcon4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = touchgfx::ButtonWithIcon::draw(const touchgfx::Rect&) const &rArr; touchgfx::Button::draw(const touchgfx::Rect&) const &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(const touchgfx::Rect&) const
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Address Reference Count : 1]<UL><LI> buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
</UL>
<P><STRONG><a name="[1a2]"></a>touchgfx::SnapshotWidget::getSolidRect() const</STRONG> (Thumb, 36 bytes, Stack size 8 bytes, snapshotwidget.o(i._ZNK8touchgfx14SnapshotWidget12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::SnapshotWidget::getSolidRect() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
</UL>
<P><STRONG><a name="[1a1]"></a>touchgfx::SnapshotWidget::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 70 bytes, Stack size 32 bytes, snapshotwidget.o(i._ZNK8touchgfx14SnapshotWidget4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::SnapshotWidget::draw(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
</UL>
<P><STRONG><a name="[1a7]"></a>touchgfx::ButtonWithLabel::getSolidRect() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, buttonwithlabel.o(i._ZNK8touchgfx15ButtonWithLabel12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::ButtonWithLabel::getSolidRect() const &rArr; touchgfx::Button::getSolidRect() const &rArr; touchgfx::Bitmap::getSolidRect() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::getSolidRect() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
</UL>
<P><STRONG><a name="[1a6]"></a>touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 372 bytes, Stack size 80 bytes, buttonwithlabel.o(i._ZNK8touchgfx15ButtonWithLabel4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 192 + Unknown Stack Size
<LI>Call Chain = touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const &rArr; touchgfx::Button::draw(const touchgfx::Rect&) const &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, touchgfx::LCD::StringVisuals&, const unsigned short*, ...)
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::assertValid() const
<LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(const touchgfx::Rect&) const
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
</UL>
<P><STRONG><a name="[1bf]"></a>touchgfx::InternalFlashFont::getKerning(unsigned short, const touchgfx::GlyphNode*) const</STRONG> (Thumb, 48 bytes, Stack size 8 bytes, internalflashfont.o(i._ZNK8touchgfx17InternalFlashFont10getKerningEtPKNS_9GlyphNodeE))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::InternalFlashFont::getKerning(unsigned short, const touchgfx::GlyphNode*) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
</UL>
<P><STRONG><a name="[1c1]"></a>touchgfx::InternalFlashFont::getPixelData(const touchgfx::GlyphNode*) const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, internalflashfont.o(i._ZNK8touchgfx17InternalFlashFont12getPixelDataEPKNS_9GlyphNodeE))
<BR>[Address Reference Count : 1]<UL><LI> internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
</UL>
<P><STRONG><a name="[1d1]"></a>touchgfx::TextAreaWithOneWildcard::getTextWidth() const</STRONG> (Thumb, 68 bytes, Stack size 24 bytes, datetimesettingsscreenviewbase.o(i._ZNK8touchgfx23TextAreaWithOneWildcard12getTextWidthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 104 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextAreaWithOneWildcard::getTextWidth() const &rArr; touchgfx::TypedText::getText() const &rArr; touchgfx::TypedText::assertValid() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[1ce]"></a>touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 168 bytes, Stack size 72 bytes, datetimesettingsscreenviewbase.o(i._ZNK8touchgfx23TextAreaWithOneWildcard4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 152 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const &rArr; touchgfx::TypedText::getText() const &rArr; touchgfx::TypedText::assertValid() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, touchgfx::LCD::StringVisuals&, const unsigned short*, ...)
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::assertValid() const
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
<LI><a href="#[467]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::StringVisuals::StringVisuals(const touchgfx::Font*, touchgfx::colortype, unsigned char, unsigned char, unsigned short, touchgfx::TextRotation, unsigned char, unsigned char, touchgfx::WideTextAction)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
</UL>
<P><STRONG><a name="[419]"></a>touchgfx::TextAreaWithWildcardBase::calculateTextHeight(const unsigned short*, ...) const</STRONG> (Thumb, 128 bytes, Stack size 64 bytes, textareawithwildcard.o(i._ZNK8touchgfx24TextAreaWithWildcardBase19calculateTextHeightEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextAreaWithWildcardBase::calculateTextHeight(const unsigned short*, ...) const &rArr; touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short) &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::getNextChar() &rArr; touchgfx::TextProvider::getNextCharInternal()
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::assertValid() const
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list)
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::getTextHeight()
</UL>

<P><STRONG><a name="[1da]"></a>touchgfx::Box::getSolidRect() const</STRONG> (Thumb, 56 bytes, Stack size 20 bytes, box.o(i._ZNK8touchgfx3Box12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::Box::getSolidRect() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[1d9]"></a>touchgfx::Box::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, box.o(i._ZNK8touchgfx3Box4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Box::draw(const touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
</UL>
<P><STRONG><a name="[41d]"></a>touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, hal.o(i._ZNK8touchgfx3HAL13getDstAddressEttPt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::HAL::getDstAddress(unsigned short, unsigned short, unsigned short*) const
</UL>
<BR>[Called By]<UL><LI><a href="#[c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitFill(touchgfx::colortype, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
<LI><a href="#[c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopy(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char, bool)
<LI><a href="#[c8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::copyFBRegionToMemory(touchgfx::Rect)
<LI><a href="#[c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyARGB8888(const unsigned short*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, unsigned char)
<LI><a href="#[c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::blitCopyGlyph(const unsigned char*, unsigned short, unsigned short, unsigned short, unsigned short, unsigned short, touchgfx::colortype, unsigned char, touchgfx::BlitOperations)
</UL>

<P><STRONG><a name="[1bc]"></a>touchgfx::Font::getFontHeight() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, font.o(i._ZNK8touchgfx4Font13getFontHeightEv))
<BR>[Address Reference Count : 2]<UL><LI> internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[1b9]"></a>touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const</STRONG> (Thumb, 34 bytes, Stack size 24 bytes, font.o(i._ZNK8touchgfx4Font14getStringWidthEhPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Font::getStringWidth(unsigned char, const unsigned short*, ...) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[1be]"></a>touchgfx::Font::getBitsPerPixel() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, font.o(i._ZNK8touchgfx4Font15getBitsPerPixelEv))
<BR>[Address Reference Count : 2]<UL><LI> internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[1b8]"></a>touchgfx::Font::getEllipsisChar() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, font.o(i._ZNK8touchgfx4Font15getEllipsisCharEv))
<BR>[Address Reference Count : 2]<UL><LI> internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[1b7]"></a>touchgfx::Font::getFallbackChar() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, font.o(i._ZNK8touchgfx4Font15getFallbackCharEv))
<BR>[Address Reference Count : 2]<UL><LI> internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[1ba]"></a>touchgfx::Font::getSpacingAbove(const unsigned short*, ...) const</STRONG> (Thumb, 82 bytes, Stack size 56 bytes, font.o(i._ZNK8touchgfx4Font15getSpacingAboveEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::Font::getSpacingAbove(const unsigned short*, ...) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::getNextChar() &rArr; touchgfx::TextProvider::getNextCharInternal()
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list)
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::top() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[1bb]"></a>touchgfx::Font::getMaxTextHeight(const unsigned short*, ...) const</STRONG> (Thumb, 100 bytes, Stack size 56 bytes, font.o(i._ZNK8touchgfx4Font16getMaxTextHeightEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::Font::getMaxTextHeight(const unsigned short*, ...) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::getNextChar() &rArr; touchgfx::TextProvider::getNextCharInternal()
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list)
<LI><a href="#[468]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GlyphNode::top() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[1c0]"></a>touchgfx::Font::getNumberOfLines(const unsigned short*, ...) const</STRONG> (Thumb, 56 bytes, Stack size 48 bytes, font.o(i._ZNK8touchgfx4Font16getNumberOfLinesEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::Font::getNumberOfLines(const unsigned short*, ...) const &rArr; touchgfx::TextProvider::TextProvider() &rArr; touchgfx::TextProvider::initializeInternal() &rArr; touchgfx::TextProvider::getNextCharInternal()
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[3fe]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextChar()
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[11]"></a>touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const</STRONG> (Thumb, 126 bytes, Stack size 56 bytes, font.o(i._ZNK8touchgfx4Font17getStringWidthLTREhPKtSt9__va_list))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = touchgfx::Font::getStringWidthLTR(unsigned char, const unsigned short*, std::__va_list) const &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::getNextChar() &rArr; touchgfx::TextProvider::getNextCharInternal()
</UL>
<BR>[Calls]<UL><LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[400]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::getNextLigature(unsigned char)
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> texts.o(.data)
</UL>
<P><STRONG><a name="[1bd]"></a>touchgfx::Font::getMinimumTextHeight() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, font.o(i._ZNK8touchgfx4Font20getMinimumTextHeightEv))
<BR>[Address Reference Count : 2]<UL><LI> internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[1b6]"></a>touchgfx::Font::getGlyph(unsigned short) const</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, font.o(i._ZNK8touchgfx4Font8getGlyphEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Font::getGlyph(unsigned short) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[42c]"></a>touchgfx::Rect::right() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZNK8touchgfx4Rect5rightEv))
<BR><BR>[Called By]<UL><LI><a href="#[42e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realX(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(const touchgfx::Rect&) const
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::includes(const touchgfx::Rect&) const
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::expandToFit(const touchgfx::Rect&)
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(short, short) const
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[3f5]"></a>touchgfx::Rect::bottom() const</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZNK8touchgfx4Rect6bottomEv))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
<LI><a href="#[12]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringLTR(const touchgfx::Rect&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals&, const unsigned short*, std::__va_list)
<LI><a href="#[42f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::realY(const touchgfx::Rect&, short, short, touchgfx::TextRotation)
<LI><a href="#[222]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawGlyph(unsigned short*, touchgfx::Rect, short, short, unsigned short, unsigned short, const touchgfx::Rect&, const touchgfx::GlyphNode*, const unsigned char*, touchgfx::colortype, unsigned char, unsigned char, touchgfx::TextRotation)
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[3f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(const touchgfx::Rect&) const
<LI><a href="#[3ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::includes(const touchgfx::Rect&) const
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::expandToFit(const touchgfx::Rect&)
<LI><a href="#[1ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::getLastChild(short, short, touchgfx::Drawable**)
<LI><a href="#[43d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::intersect(short, short) const
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[3ed]"></a>touchgfx::Rect::isEmpty() const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZNK8touchgfx4Rect7isEmptyEv))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::enableFl(touchgfx::Rect&)
<LI><a href="#[220]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::fillRect(const touchgfx::Rect&, touchgfx::colortype, unsigned char)
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[3f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::expandToFit(const touchgfx::Rect&)
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::draw(const touchgfx::Rect&) const
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[3ee]"></a>touchgfx::Rect::includes(const touchgfx::Rect&) const</STRONG> (Thumb, 74 bytes, Stack size 16 bytes, application.o(i._ZNK8touchgfx4Rect8includesERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Rect::includes(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
</UL>
<BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>

<P><STRONG><a name="[3f0]"></a>touchgfx::Rect::intersect(const touchgfx::Rect&) const</STRONG> (Thumb, 70 bytes, Stack size 16 bytes, application.o(i._ZNK8touchgfx4Rect9intersectERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
</UL>
<BR>[Called By]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[43d]"></a>touchgfx::Rect::intersect(short, short) const</STRONG> (Thumb, 52 bytes, Stack size 16 bytes, screen.o(i._ZNK8touchgfx4Rect9intersectEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Rect::intersect(short, short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::bottom() const
<LI><a href="#[42c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::right() const
</UL>
<BR>[Called By]<UL><LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)
</UL>

<P><STRONG><a name="[3f7]"></a>touchgfx::Rect::operator &(const touchgfx::Rect&) const</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, application.o(i._ZNK8touchgfx4RectanERKS0_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::Rect::operator &(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
<LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::draw(touchgfx::Rect&)
<LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
<LI><a href="#[3f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::enableFl(touchgfx::Rect&)
<LI><a href="#[1ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::draw(const touchgfx::Rect&) const
<LI><a href="#[1ef]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Container::setupDrawChain(const touchgfx::Rect&, touchgfx::Drawable**)
<LI><a href="#[440]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::JSMOC(const touchgfx::Rect&, touchgfx::Drawable*)
</UL>

<P><STRONG><a name="[1e5]"></a>touchgfx::Image::getSolidRect() const</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, image.o(i._ZNK8touchgfx5Image12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::Image::getSolidRect() const &rArr; touchgfx::Bitmap::getSolidRect() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[1e4]"></a>touchgfx::Image::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 152 bytes, Stack size 64 bytes, image.o(i._ZNK8touchgfx5Image4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120 + Unknown Stack Size
<LI>Call Chain = touchgfx::Image::draw(const touchgfx::Rect&) const &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
</UL>
<P><STRONG><a name="[459]"></a>touchgfx::Bitmap::getAlphaData() const</STRONG> (Thumb, 70 bytes, Stack size 0 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap12getAlphaDataEv))
<BR><BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[45a]"></a>touchgfx::Bitmap::getSolidRect() const</STRONG> (Thumb, 116 bytes, Stack size 16 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 64 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getSolidRect() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[186]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::getSolidRect() const
<LI><a href="#[1e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::getSolidRect() const
</UL>

<P><STRONG><a name="[433]"></a>touchgfx::Bitmap::hasTransparentPixels() const</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap20hasTransparentPixelsEv))
<BR><BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[458]"></a>touchgfx::Bitmap::getData() const</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap7getDataEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getData() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[405]"></a>touchgfx::Bitmap::getWidth() const</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap8getWidthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getWidth() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::draw(const touchgfx::Rect&) const
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(const touchgfx::Rect&) const
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[457]"></a>touchgfx::Bitmap::getFormat() const</STRONG> (Thumb, 112 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap9getFormatEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Bitmap::getFormat() const
</UL>
<BR>[Calls]<UL><LI><a href="#[469]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::lcd()
</UL>
<BR>[Called By]<UL><LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
</UL>

<P><STRONG><a name="[406]"></a>touchgfx::Bitmap::getHeight() const</STRONG> (Thumb, 68 bytes, Stack size 8 bytes, bitmap.o(i._ZNK8touchgfx6Bitmap9getHeightEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[1e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::setBitmap(const touchgfx::Bitmap&)
<LI><a href="#[19f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[19e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[3a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&)
<LI><a href="#[21d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD16bpp::drawPartialBitmap(const touchgfx::Bitmap&, short, short, const touchgfx::Rect&, unsigned char, bool)
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::draw(const touchgfx::Rect&) const
<LI><a href="#[185]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Button::draw(const touchgfx::Rect&) const
<LI><a href="#[1e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Image::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[402]"></a>touchgfx::Bitmap::operator !=(const touchgfx::Bitmap&) const</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, togglebutton.o(i._ZNK8touchgfx6BitmapneERKS0_))
<BR><BR>[Called By]<UL><LI><a href="#[316]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ToggleButton::forceState(bool)
</UL>

<P><STRONG><a name="[186]"></a>touchgfx::Button::getSolidRect() const</STRONG> (Thumb, 64 bytes, Stack size 24 bytes, button.o(i._ZNK8touchgfx6Button12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = touchgfx::Button::getSolidRect() const &rArr; touchgfx::Bitmap::getSolidRect() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[45a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getSolidRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::getSolidRect() const
</UL>
<BR>[Address Reference Count : 3]<UL><LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
<LI> togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[185]"></a>touchgfx::Button::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 178 bytes, Stack size 56 bytes, button.o(i._ZNK8touchgfx6Button4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 112 + Unknown Stack Size
<LI>Call Chain = touchgfx::Button::draw(const touchgfx::Rect&) const &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[406]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getHeight() const
<LI><a href="#[405]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::getWidth() const
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
<LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const
<LI><a href="#[19d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithIcon::draw(const touchgfx::Rect&) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[1f9]"></a>touchgfx::Slider::positionToValue(short) const</STRONG> (Thumb, 102 bytes, Stack size 16 bytes, slider.o(i._ZNK8touchgfx6Slider15positionToValueEs))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Slider::positionToValue(short) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[1f8]"></a>touchgfx::Slider::valueToPosition(int) const</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, slider.o(i._ZNK8touchgfx6Slider15valueToPositionEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Slider::valueToPosition(int) const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[1fc]"></a>touchgfx::Slider::getValueRangeSize() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, slider.o(i._ZNK8touchgfx6Slider17getValueRangeSizeEv))
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[1fa]"></a>touchgfx::Slider::getIndicatorRadius() const</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, slider.o(i._ZNK8touchgfx6Slider18getIndicatorRadiusEv))
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[1fb]"></a>touchgfx::Slider::getIndicatorPositionRangeSize() const</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, slider.o(i._ZNK8touchgfx6Slider29getIndicatorPositionRangeSizeEv))
<BR>[Address Reference Count : 1]<UL><LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[188]"></a>touchgfx::Drawable::invalidate() const</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, drawable.o(i._ZNK8touchgfx8Drawable10invalidateEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::Drawable::invalidate() const
</UL>
<BR>[Called By]<UL><LI><a href="#[374]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setMonth(int)
<LI><a href="#[372]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setYear(int)
<LI><a href="#[378]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setHour(int)
<LI><a href="#[37a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setMin(int)
<LI><a href="#[376]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::setDay(int)
<LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setDate(int, int, int, int, int)
<LI><a href="#[328]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setHeaterOpBtnState(bool)
<LI><a href="#[327]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setLightOpBtnState(bool)
<LI><a href="#[325]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setHumiOpBtnState(bool)
<LI><a href="#[322]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setTemperature(int)
<LI><a href="#[313]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setHumidity(int)
<LI><a href="#[387]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::setDayEnd(int, int)
<LI><a href="#[382]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::setDayBegin(int, int)
<LI><a href="#[ee]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::manualOverrideBtnClicked()
<LI><a href="#[39d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::setNightTempTxt(int)
<LI><a href="#[39c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::setNightHumiTxt(int)
<LI><a href="#[39b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::setDayTempTxt(int)
<LI><a href="#[39a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::setDayHumiTxt(int)
<LI><a href="#[1f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Slider::updateIndicatorPosition(short)
</UL>
<BR>[Address Reference Count : 15]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[18a]"></a>touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const</STRONG> (Thumb, 62 bytes, Stack size 16 bytes, drawable.o(i._ZNK8touchgfx8Drawable14getVisibleRectERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::Drawable::getVisibleRect(touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 15]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[187]"></a>touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const</STRONG> (Thumb, 82 bytes, Stack size 32 bytes, drawable.o(i._ZNK8touchgfx8Drawable14invalidateRectERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = touchgfx::Drawable::invalidateRect(touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[432]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &=(const touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 15]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[43c]"></a>touchgfx::Drawable::getAbsoluteRect() const</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, drawable.o(i._ZNK8touchgfx8Drawable15getAbsoluteRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Drawable::getAbsoluteRect() const
</UL>
<BR>[Called By]<UL><LI><a href="#[e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleGestureEvent(const touchgfx::GestureEvent&)
<LI><a href="#[de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleClickEvent(const touchgfx::ClickEvent&)
<LI><a href="#[df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::handleDragEvent(const touchgfx::DragEvent&)
<LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const
<LI><a href="#[442]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedAbsY()
<LI><a href="#[443]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getCachedAbsX()
</UL>

<P><STRONG><a name="[18b]"></a>touchgfx::Drawable::translateRectToAbsolute(touchgfx::Rect&) const</STRONG> (Thumb, 30 bytes, Stack size 0 bytes, drawable.o(i._ZNK8touchgfx8Drawable23translateRectToAbsoluteERNS_4RectE))
<BR>[Address Reference Count : 15]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> button.o(.constdata__ZTVN8touchgfx6ButtonE)
<LI> buttonwithicon.o(.constdata__ZTVN8touchgfx14ButtonWithIconE)
<LI> buttonwithlabel.o(.constdata__ZTVN8touchgfx15ButtonWithLabelE)
<LI> box.o(.constdata__ZTVN8touchgfx3BoxE)
<LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> image.o(.constdata__ZTVN8touchgfx5ImageE)
<LI> snapshotwidget.o(.constdata__ZTVN8touchgfx14SnapshotWidgetE)
<LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
<LI> togglebutton.o(.constdata__ZTVN8touchgfx12ToggleButtonE)
</UL>
<P><STRONG><a name="[4b4]"></a>touchgfx::Drawable::getY() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, frontendapplicationbase.o(i._ZNK8touchgfx8Drawable4getYEv))
<BR><BR>[Called By]<UL><LI><a href="#[1af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::handleTickEvent()
<LI><a href="#[1a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::handleTickEvent()
</UL>

<P><STRONG><a name="[221]"></a>touchgfx::LCD16bpp::bitDepth() const</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, lcd16bpp.o(i._ZNK8touchgfx8LCD16bpp8bitDepthEv))
<BR>[Address Reference Count : 1]<UL><LI> lcd16bpp.o(.constdata__ZTVN8touchgfx8LCD16bppE)
</UL>
<P><STRONG><a name="[1cf]"></a>touchgfx::TextArea::getSolidRect() const</STRONG> (Thumb, 24 bytes, Stack size 16 bytes, datetimesettingsscreenviewbase.o(i._ZNK8touchgfx8TextArea12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::TextArea::getSolidRect() const &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Address Reference Count : 3]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx23TextAreaWithOneWildcardE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[1d5]"></a>touchgfx::TextArea::getTextWidth() const</STRONG> (Thumb, 54 bytes, Stack size 16 bytes, textarea.o(i._ZNK8touchgfx8TextArea12getTextWidthEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 96 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::getTextWidth() const &rArr; touchgfx::TypedText::getText() const &rArr; touchgfx::TypedText::assertValid() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[45f]"></a>touchgfx::TextArea::getTextHeightInternal(const unsigned short*, ...) const</STRONG> (Thumb, 100 bytes, Stack size 64 bytes, textarea.o(i._ZNK8touchgfx8TextArea21getTextHeightInternalEPKtz))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::getTextHeightInternal(const unsigned short*, ...) const &rArr; touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short) &rArr; touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool) &rArr; touchgfx::TextProvider::getNextLigature(unsigned char) &rArr; touchgfx::TextProvider::getNextChar() &rArr; touchgfx::TextProvider::getNextCharInternal()
</UL>
<BR>[Calls]<UL><LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[401]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::TextProvider()
<LI><a href="#[3fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextProvider::initialize(const unsigned short*, std::__va_list)
<LI><a href="#[426]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::getNumLines(touchgfx::TextProvider&, touchgfx::WideTextAction, unsigned char, const touchgfx::Font*, short)
</UL>
<BR>[Called By]<UL><LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextHeight()
</UL>

<P><STRONG><a name="[1d3]"></a>touchgfx::TextArea::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 162 bytes, Stack size 80 bytes, textarea.o(i._ZNK8touchgfx8TextArea4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 160 + Unknown Stack Size
<LI>Call Chain = touchgfx::TextArea::draw(const touchgfx::Rect&) const &rArr; touchgfx::TypedText::getText() const &rArr; touchgfx::TypedText::assertValid() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[43c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getAbsoluteRect() const
<LI><a href="#[464]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawString(touchgfx::Rect, const touchgfx::Rect&, touchgfx::LCD::StringVisuals&, const unsigned short*, ...)
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::assertValid() const
<LI><a href="#[417]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::hasValidId() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx24TextAreaWithWildcardBaseE)
<LI> textarea.o(.constdata__ZTVN8touchgfx8TextAreaE)
</UL>
<P><STRONG><a name="[46a]"></a>touchgfx::ConstFont::find(unsigned short) const</STRONG> (Thumb, 68 bytes, Stack size 20 bytes, constfont.o(i._ZNK8touchgfx9ConstFont4findEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Called By]<UL><LI><a href="#[1b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const
</UL>

<P><STRONG><a name="[1b5]"></a>touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const</STRONG> (Thumb, 80 bytes, Stack size 24 bytes, constfont.o(i._ZNK8touchgfx9ConstFont8getGlyphEtRPKhRh))
<BR><BR>[Stack]<UL><LI>Max Depth = 44<LI>Call Chain = touchgfx::ConstFont::getGlyph(unsigned short, const unsigned char*&, unsigned char&) const &rArr; touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Calls]<UL><LI><a href="#[46a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ConstFont::find(unsigned short) const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> internalflashfont.o(.constdata__ZTVN8touchgfx17InternalFlashFontE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
</UL>
<P><STRONG><a name="[1eb]"></a>touchgfx::Container::getSolidRect() const</STRONG> (Thumb, 14 bytes, Stack size 8 bytes, container.o(i._ZNK8touchgfx9Container12getSolidRectEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Container::getSolidRect() const
</UL>
<BR>[Address Reference Count : 2]<UL><LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[1ea]"></a>touchgfx::Container::draw(const touchgfx::Rect&) const</STRONG> (Thumb, 94 bytes, Stack size 24 bytes, container.o(i._ZNK8touchgfx9Container4drawERKNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = touchgfx::Container::draw(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
</UL>
<BR>[Called By]<UL><LI><a href="#[da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::draw(touchgfx::Rect&)
</UL>
<BR>[Address Reference Count : 2]<UL><LI> container.o(.constdata__ZTVN8touchgfx9ContainerE)
<LI> slider.o(.constdata__ZTVN8touchgfx6SliderE)
</UL>
<P><STRONG><a name="[468]"></a>touchgfx::GlyphNode::top() const</STRONG> (Thumb, 32 bytes, Stack size 0 bytes, font.o(i._ZNK8touchgfx9GlyphNode3topEv))
<BR><BR>[Called By]<UL><LI><a href="#[1bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getMaxTextHeight(const unsigned short*, ...) const
<LI><a href="#[1ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Font::getSpacingAbove(const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[42a]"></a>touchgfx::GlyphNode::advance() const</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, lcd.o(i._ZNK8touchgfx9GlyphNode7advanceEv))
<BR><BR>[Called By]<UL><LI><a href="#[427]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::WideTextInternalStruct(touchgfx::TextProvider&, unsigned short, unsigned char, const touchgfx::Font*, touchgfx::WideTextAction)
<LI><a href="#[428]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::WideTextInternalStruct::getStringLengthForLine(bool)
<LI><a href="#[42b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::drawStringInternal(unsigned short*, const touchgfx::Rect*, short, short&, const touchgfx::Rect&, const touchgfx::LCD::StringVisuals*, unsigned char, touchgfx::TextProvider&, int, bool)
<LI><a href="#[429]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::LCD::stringWidth(touchgfx::TextProvider&, const touchgfx::Font&, int, unsigned char)
</UL>

<P><STRONG><a name="[417]"></a>touchgfx::TypedText::hasValidId() const</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, datetimesettingsscreenviewbase.o(i._ZNK8touchgfx9TypedText10hasValidIdEv))
<BR><BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextHeight()
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::getTextWidth() const
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::getTextHeight()
<LI><a href="#[45e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::resizeToCurrentText()
</UL>

<P><STRONG><a name="[409]"></a>touchgfx::TypedText::assertValid() const</STRONG> (Thumb, 50 bytes, Stack size 8 bytes, datetimesettingsscreenviewbase.o(i._ZNK8touchgfx9TypedText11assertValidEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 72 + Unknown Stack Size
<LI>Call Chain = touchgfx::TypedText::assertValid() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::calculateTextHeight(const unsigned short*, ...) const
<LI><a href="#[418]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getText() const
<LI><a href="#[465]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getFont() const
<LI><a href="#[466]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::getTextDirection() const
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const
<LI><a href="#[408]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::updateTextPosition()
<LI><a href="#[1a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::ButtonWithLabel::draw(const touchgfx::Rect&) const
</UL>

<P><STRONG><a name="[466]"></a>touchgfx::TypedText::getTextDirection() const</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, datetimesettingsscreenviewbase.o(i._ZNK8touchgfx9TypedText16getTextDirectionEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::TypedText::getTextDirection() const &rArr; touchgfx::TypedText::assertValid() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::assertValid() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::getTextWidth() const
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextHeightInternal(const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[465]"></a>touchgfx::TypedText::getFont() const</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, datetimesettingsscreenviewbase.o(i._ZNK8touchgfx9TypedText7getFontEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::TypedText::getFont() const &rArr; touchgfx::TypedText::assertValid() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::assertValid() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
<LI><a href="#[419]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithWildcardBase::calculateTextHeight(const unsigned short*, ...) const
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::getTextWidth() const
<LI><a href="#[45f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextHeightInternal(const unsigned short*, ...) const
</UL>

<P><STRONG><a name="[418]"></a>touchgfx::TypedText::getText() const</STRONG> (Thumb, 28 bytes, Stack size 8 bytes, datetimesettingsscreenviewbase.o(i._ZNK8touchgfx9TypedText7getTextEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 80 + Unknown Stack Size
<LI>Call Chain = touchgfx::TypedText::getText() const &rArr; touchgfx::TypedText::assertValid() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[409]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TypedText::assertValid() const
</UL>
<BR>[Called By]<UL><LI><a href="#[1d3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::draw(const touchgfx::Rect&) const
<LI><a href="#[1d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextWidth() const
<LI><a href="#[1d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextArea::getTextHeight()
<LI><a href="#[1ce]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::draw(const touchgfx::Rect&) const
<LI><a href="#[1d1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::getTextWidth() const
<LI><a href="#[1d0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::TextAreaWithOneWildcard::getTextHeight()
</UL>

<P><STRONG><a name="[302]"></a>touchgfx::colortype::operator unsigned short() const</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, stm32f7dma.o(i._ZNK8touchgfx9colortypecvtEv))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupFillWithAlpha(const touchgfx::BlitOp&)
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataFill(const touchgfx::BlitOp&)
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataCopy(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[117]"></a>thunk{-4} to mainScreenPresenter::dateChanged(int, int, int, int, int)</STRONG> (Thumb, 38 bytes, Stack size 40 bytes, mainscreenpresenter.o(i._ZThn4_N19mainScreenPresenter11dateChangedEiiiii))
<BR><BR>[Stack]<UL><LI>Max Depth = 512 + Unknown Stack Size
<LI>Call Chain = thunk{-4} to mainScreenPresenter::dateChanged(int, int, int, int, int) &rArr; mainScreenView::setDate(int, int, int, int, int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[320]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::setDate(int, int, int, int, int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
</UL>
<P><STRONG><a name="[116]"></a>thunk{-4} to mainScreenPresenter::humidityChanged(int)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, mainscreenpresenter.o(i._ZThn4_N19mainScreenPresenter15humidityChangedEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = thunk{-4} to mainScreenPresenter::humidityChanged(int) &rArr; mainScreenPresenter::humidityChanged(int) &rArr; mainScreenView::setHumidity(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[111]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::humidityChanged(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
</UL>
<P><STRONG><a name="[11a]"></a>thunk{-4} to mainScreenPresenter::heatOpStateChanged(bool)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, mainscreenpresenter.o(i._ZThn4_N19mainScreenPresenter18heatOpStateChangedEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = thunk{-4} to mainScreenPresenter::heatOpStateChanged(bool) &rArr; mainScreenPresenter::heatOpStateChanged(bool) &rArr; mainScreenView::setHeaterOpBtnState(bool) &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[114]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::heatOpStateChanged(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
</UL>
<P><STRONG><a name="[119]"></a>thunk{-4} to mainScreenPresenter::humiOpStateChanged(bool)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, mainscreenpresenter.o(i._ZThn4_N19mainScreenPresenter18humiOpStateChangedEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = thunk{-4} to mainScreenPresenter::humiOpStateChanged(bool) &rArr; mainScreenPresenter::humiOpStateChanged(bool) &rArr; mainScreenView::setHumiOpBtnState(bool) &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[113]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::humiOpStateChanged(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
</UL>
<P><STRONG><a name="[115]"></a>thunk{-4} to mainScreenPresenter::temperatureChanged(int)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, mainscreenpresenter.o(i._ZThn4_N19mainScreenPresenter18temperatureChangedEi))
<BR><BR>[Stack]<UL><LI>Max Depth = 472 + Unknown Stack Size
<LI>Call Chain = thunk{-4} to mainScreenPresenter::temperatureChanged(int) &rArr; mainScreenPresenter::temperatureChanged(int) &rArr; mainScreenView::setTemperature(int) &rArr; touchgfx::Unicode::snprintf(unsigned short*, unsigned short, const char*, ...) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const char*, std::__va_list) &rArr; touchgfx::Unicode::vsnprintf(unsigned short*, unsigned short, const unsigned short*, std::__va_list) &rArr; touchgfx::Unicode::itoa(int, unsigned short*, unsigned short, int) &rArr; touchgfx::Unicode::strncpy(unsigned short*, const char*, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[110]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::temperatureChanged(int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
</UL>
<P><STRONG><a name="[118]"></a>thunk{-4} to mainScreenPresenter::lightOpStateChanged(bool)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, mainscreenpresenter.o(i._ZThn4_N19mainScreenPresenter19lightOpStateChangedEb))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = thunk{-4} to mainScreenPresenter::lightOpStateChanged(bool) &rArr; mainScreenPresenter::lightOpStateChanged(bool) &rArr; mainScreenView::setLightOpBtnState(bool) &rArr; touchgfx::Drawable::invalidate() const
</UL>
<BR>[Calls]<UL><LI><a href="#[112]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::lightOpStateChanged(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenpresenter.o(.constdata__ZTV19mainScreenPresenter)
</UL>
<P><STRONG><a name="[308]"></a>__aeabi_vec_ctor_nocookie_nodtor</STRONG> (Thumb, 36 bytes, Stack size 24 bytes, aeabi_vec_ctor_nocookie_nodtor.o(i.__aeabi_vec_ctor_nocookie_nodtor))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::STM32F7DMA()
<LI><a href="#[3f4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector()
</UL>

<P><STRONG><a name="[2f3]"></a>__cxa_guard_acquire</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, cxa_guard_acquire.o(i.__cxa_guard_acquire))
<BR><BR>[Called By]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_46_4bpp()
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_34_4bpp()
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_17_8bpp()
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_12_4bpp()
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_segoeui_67_4bpp()
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_segoeui_40_8bpp()
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_segoeui_28_8bpp()
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_segoeui_18_8bpp()
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_segoeui_17_8bpp()
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::getHAL&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short)
<LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[181]"></a>__cxa_pure_virtual</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, pure_virt.o(i.__cxa_pure_virtual))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = __cxa_pure_virtual &rArr; __rt_SIGPVFN &rArr; __rt_SIGPVFN_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[25d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_SIGPVFN
</UL>
<BR>[Address Reference Count : 15]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx6WidgetE)
<LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx15GenericCallbackIRKNS_14AbstractButtonEvEE)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx15GenericCallbackIvvEE)
<LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx15GenericCallbackIRNS_8DrawableEvEE)
<LI> temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx15GenericCallbackIRKNS_6SliderEiEE)
<LI> boardconfiguration.o(.constdata__ZTVN8touchgfx15TouchControllerE)
<LI> boardconfiguration.o(.constdata__ZTVN8touchgfx18MCUInstrumentationE)
<LI> boardconfiguration.o(.constdata__ZTVN8touchgfx12FontProviderE)
<LI> boardconfiguration.o(.constdata__ZTVN8touchgfx3LCDE)
<LI> abstractpartition.o(.constdata__ZTVN8touchgfx17AbstractPartitionE)
<LI> abstractbutton.o(.constdata__ZTVN8touchgfx14AbstractButtonE)
<LI> drawable.o(.constdata__ZTVN8touchgfx8DrawableE)
<LI> dma.o(.constdata__ZTVN8touchgfx13DMA_InterfaceE)
<LI> constfont.o(.constdata__ZTVN8touchgfx9ConstFontE)
<LI> hal.o(.constdata__ZTVN8touchgfx3HALE)
</UL>
<P><STRONG><a name="[13]"></a>ft5336_Init</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, ft5336.o(i.ft5336_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 112<LI>Call Chain = ft5336_Init &rArr; ft5336_I2C_InitializeIfRequired &rArr; TS_IO_Init &rArr; I2Cx_Init &rArr; I2Cx_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Delay
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_I2C_InitializeIfRequired
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ft5336.o(.data)
</UL>
<P><STRONG><a name="[14]"></a>ft5336_ReadID</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, ft5336.o(i.ft5336_ReadID))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = ft5336_ReadID &rArr; TS_IO_Read &rArr; I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Read
<LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_I2C_InitializeIfRequired
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ft5336.o(.data)
</UL>
<P><STRONG><a name="[15]"></a>ft5336_Reset</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ft5336.o(i.ft5336_Reset))
<BR>[Address Reference Count : 1]<UL><LI> ft5336.o(.data)
</UL>
<P><STRONG><a name="[1a]"></a>ft5336_TS_ClearIT</STRONG> (Thumb, 2 bytes, Stack size 0 bytes, ft5336.o(i.ft5336_TS_ClearIT))
<BR>[Address Reference Count : 1]<UL><LI> ft5336.o(.data)
</UL>
<P><STRONG><a name="[17]"></a>ft5336_TS_DetectTouch</STRONG> (Thumb, 58 bytes, Stack size 16 bytes, ft5336.o(i.ft5336_TS_DetectTouch))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = ft5336_TS_DetectTouch &rArr; TS_IO_Read &rArr; I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ft5336.o(.data)
</UL>
<P><STRONG><a name="[1c]"></a>ft5336_TS_DisableIT</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ft5336.o(i.ft5336_TS_DisableIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = ft5336_TS_DisableIT &rArr; TS_IO_Write &rArr; I2Cx_WriteMultiple &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Write
</UL>
<BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_TS_Start
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ft5336.o(.data)
</UL>
<P><STRONG><a name="[19]"></a>ft5336_TS_EnableIT</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, ft5336.o(i.ft5336_TS_EnableIT))
<BR><BR>[Stack]<UL><LI>Max Depth = 208<LI>Call Chain = ft5336_TS_EnableIT &rArr; TS_IO_Write &rArr; I2Cx_WriteMultiple &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Write
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ft5336.o(.data)
</UL>
<P><STRONG><a name="[28f]"></a>ft5336_TS_GetGestureID</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, ft5336.o(i.ft5336_TS_GetGestureID))
<BR><BR>[Stack]<UL><LI>Max Depth = 200<LI>Call Chain = ft5336_TS_GetGestureID &rArr; TS_IO_Read &rArr; I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[28e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TS_Get_GestureId
</UL>

<P><STRONG><a name="[28d]"></a>ft5336_TS_GetTouchInfo</STRONG> (Thumb, 258 bytes, Stack size 40 bytes, ft5336.o(i.ft5336_TS_GetTouchInfo))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = ft5336_TS_GetTouchInfo &rArr; TS_IO_Read &rArr; I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Read
</UL>
<BR>[Called By]<UL><LI><a href="#[28c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_TS_GetState
</UL>

<P><STRONG><a name="[18]"></a>ft5336_TS_GetXY</STRONG> (Thumb, 346 bytes, Stack size 40 bytes, ft5336.o(i.ft5336_TS_GetXY))
<BR><BR>[Stack]<UL><LI>Max Depth = 224<LI>Call Chain = ft5336_TS_GetXY &rArr; TS_IO_Read &rArr; I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Read
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ft5336.o(.data)
</UL>
<P><STRONG><a name="[1b]"></a>ft5336_TS_ITStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ft5336.o(i.ft5336_TS_ITStatus))
<BR>[Address Reference Count : 1]<UL><LI> ft5336.o(.data)
</UL>
<P><STRONG><a name="[16]"></a>ft5336_TS_Start</STRONG> (Thumb, 22 bytes, Stack size 8 bytes, ft5336.o(i.ft5336_TS_Start))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = ft5336_TS_Start &rArr; ft5336_TS_DisableIT &rArr; TS_IO_Write &rArr; I2Cx_WriteMultiple &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[1c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_TS_DisableIT
<LI><a href="#[46e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_TS_Configure
</UL>
<BR>[Address Reference Count : 1]<UL><LI> ft5336.o(.data)
</UL>
<P><STRONG><a name="[246]"></a>main</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, main.o(i.main))
<BR><BR>[Stack]<UL><LI>Max Depth = 344 + Unknown Stack Size
<LI>Call Chain = main &rArr; touchgfx::hw_init() &rArr; SystemClock_Config &rArr; HAL_RCC_ClockConfig &rArr; HAL_InitTick &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
<LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::touchgfx_init()
</UL>
<BR>[Called By]<UL><LI><a href="#[245]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_entry_main
</UL>

<P><STRONG><a name="[474]"></a>pvPortMalloc</STRONG> (Thumb, 176 bytes, Stack size 24 bytes, heap_2.o(i.pvPortMalloc))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[48b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvHeapInit
<LI><a href="#[48c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationMallocFailedHook
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAllocateTCBAndStack
<LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>

<P><STRONG><a name="[49b]"></a>pvTaskIncrementMutexHeldCount</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, tasks.o(i.pvTaskIncrementMutexHeldCount))
<BR><BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[49e]"></a>pxPortInitialiseStack</STRONG> (Thumb, 34 bytes, Stack size 0 bytes, port.o(i.pxPortInitialiseStack))
<BR><BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>

<P><STRONG><a name="[47a]"></a>uxListRemove</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, list.o(i.uxListRemove))
<BR><BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityInherit
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[481]"></a>vApplicationIdleHook</STRONG> (Thumb, 12 bytes, Stack size 8 bytes, oswrappers.o(i.vApplicationIdleHook))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = vApplicationIdleHook &rArr; vTaskSetApplicationTaskTag
</UL>
<BR>[Calls]<UL><LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetApplicationTaskTag
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[48c]"></a>vApplicationMallocFailedHook</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, oswrappers.o(i.vApplicationMallocFailedHook))
<BR><BR>[Called By]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[495]"></a>vApplicationStackOverflowHook</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, oswrappers.o(i.vApplicationStackOverflowHook))
<BR><BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>

<P><STRONG><a name="[485]"></a>vListInitialise</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, list.o(i.vListInitialise))
<BR><BR>[Called By]<UL><LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
</UL>

<P><STRONG><a name="[483]"></a>vListInitialiseItem</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, list.o(i.vListInitialiseItem))
<BR><BR>[Called By]<UL><LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTCBVariables
</UL>

<P><STRONG><a name="[472]"></a>vListInsert</STRONG> (Thumb, 52 bytes, Stack size 8 bytes, list.o(i.vListInsert))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
</UL>

<P><STRONG><a name="[491]"></a>vListInsertEnd</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, list.o(i.vListInsertEnd))
<BR><BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityInherit
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[479]"></a>vPortEnterCritical</STRONG> (Thumb, 88 bytes, Stack size 0 bytes, port.o(i.vPortEnterCritical))
<BR><BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetApplicationTaskTag
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[47b]"></a>vPortExitCritical</STRONG> (Thumb, 62 bytes, Stack size 0 bytes, port.o(i.vPortExitCritical))
<BR><BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[48d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetApplicationTaskTag
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[475]"></a>vPortFree</STRONG> (Thumb, 56 bytes, Stack size 16 bytes, heap_2.o(i.vPortFree))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
</UL>
<BR>[Called By]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAllocateTCBAndStack
</UL>

<P><STRONG><a name="[497]"></a>vPortSetupTimerInterrupt</STRONG> (Thumb, 26 bytes, Stack size 0 bytes, port.o(i.vPortSetupTimerInterrupt))
<BR><BR>[Called By]<UL><LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>

<P><STRONG><a name="[48e]"></a>vPortValidateInterruptPriority</STRONG> (Thumb, 118 bytes, Stack size 16 bytes, port.o(i.vPortValidateInterruptPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vPortValidateInterruptPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[48f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortGetIPSR
</UL>
<BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
</UL>

<P><STRONG><a name="[48a]"></a>vTaskMissedYield</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, tasks.o(i.vTaskMissedYield))
<BR><BR>[Called By]<UL><LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[490]"></a>vTaskPlaceOnEventList</STRONG> (Thumb, 114 bytes, Stack size 16 bytes, tasks.o(i.vTaskPlaceOnEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vTaskPlaceOnEventList &rArr; prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[471]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAddCurrentTaskToDelayedList
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[492]"></a>vTaskPriorityInherit</STRONG> (Thumb, 164 bytes, Stack size 16 bytes, tasks.o(i.vTaskPriorityInherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vTaskPriorityInherit
</UL>
<BR>[Calls]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[48d]"></a>vTaskSetApplicationTaskTag</STRONG> (Thumb, 28 bytes, Stack size 16 bytes, tasks.o(i.vTaskSetApplicationTaskTag))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = vTaskSetApplicationTaskTag
</UL>
<BR>[Calls]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationIdleHook
</UL>

<P><STRONG><a name="[49c]"></a>vTaskSetTimeOutState</STRONG> (Thumb, 44 bytes, Stack size 0 bytes, tasks.o(i.vTaskSetTimeOutState))
<BR><BR>[Called By]<UL><LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[470]"></a>vTaskStartScheduler</STRONG> (Thumb, 104 bytes, Stack size 24 bytes, tasks.o(i.vTaskStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = vTaskStartScheduler &rArr; xTaskGenericCreate &rArr; prvAllocateTCBAndStack &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
<LI><a href="#[493]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xPortStartScheduler
</UL>
<BR>[Called By]<UL><LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[477]"></a>vTaskSuspendAll</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, tasks.o(i.vTaskSuspendAll))
<BR><BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[24c]"></a>vTaskSwitchContext</STRONG> (Thumb, 200 bytes, Stack size 8 bytes, tasks.o(i.vTaskSwitchContext))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = vTaskSwitchContext &rArr; xTaskCallApplicationTaskHook
</UL>
<BR>[Calls]<UL><LI><a href="#[495]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationStackOverflowHook
<LI><a href="#[494]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCallApplicationTaskHook
<LI><a href="#[496]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;memcmp
</UL>
<BR>[Called By]<UL><LI><a href="#[25]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;PendSV_Handler
</UL>

<P><STRONG><a name="[493]"></a>xPortStartScheduler</STRONG> (Thumb, 208 bytes, Stack size 16 bytes, port.o(i.xPortStartScheduler))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xPortStartScheduler
</UL>
<BR>[Calls]<UL><LI><a href="#[497]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortSetupTimerInterrupt
<LI><a href="#[498]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvEnableVFP
<LI><a href="#[499]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__asm___6_port_c_39a90d8d__prvStartFirstTask
</UL>
<BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
</UL>

<P><STRONG><a name="[3e2]"></a>xQueueGenericCreate</STRONG> (Thumb, 152 bytes, Stack size 32 bytes, queue.o(i.xQueueGenericCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = xQueueGenericCreate &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>
<BR>[Called By]<UL><LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
</UL>

<P><STRONG><a name="[3e6]"></a>xQueueGenericReceive</STRONG> (Thumb, 396 bytes, Stack size 56 bytes, queue.o(i.xQueueGenericReceive))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = xQueueGenericReceive &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[492]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPriorityInherit
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[49b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvTaskIncrementMutexHeldCount
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[486]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueEmpty
<LI><a href="#[47d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataFromQueue
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[3e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::tryTakeFrameBufferSemaphore()
<LI><a href="#[3e8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::takeFrameBufferSemaphore()
<LI><a href="#[3e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::waitForVSync()
</UL>

<P><STRONG><a name="[49a]"></a>xQueueGenericReset</STRONG> (Thumb, 150 bytes, Stack size 16 bytes, queue.o(i.xQueueGenericReset))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = xQueueGenericReset &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[3e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericCreate
</UL>

<P><STRONG><a name="[3e3]"></a>xQueueGenericSend</STRONG> (Thumb, 390 bytes, Stack size 56 bytes, queue.o(i.xQueueGenericSend))
<BR><BR>[Stack]<UL><LI>Max Depth = 96<LI>Call Chain = xQueueGenericSend &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[49d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskCheckForTimeOut
<LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
<LI><a href="#[487]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIsQueueFull
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[3e7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphore()
<LI><a href="#[3e1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::initialize()
</UL>

<P><STRONG><a name="[3e4]"></a>xQueueGenericSendFromISR</STRONG> (Thumb, 264 bytes, Stack size 32 bytes, queue.o(i.xQueueGenericSendFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 72<LI>Call Chain = xQueueGenericSendFromISR &rArr; prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
<LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>
<BR>[Called By]<UL><LI><a href="#[2dc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::signalVSync()
</UL>

<P><STRONG><a name="[3eb]"></a>xQueueGiveFromISR</STRONG> (Thumb, 194 bytes, Stack size 24 bytes, queue.o(i.xQueueGiveFromISR))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xQueueGiveFromISR &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[48e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortValidateInterruptPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[3ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::OSWrappers::giveFrameBufferSemaphoreFromISR()
</UL>

<P><STRONG><a name="[494]"></a>xTaskCallApplicationTaskHook</STRONG> (Thumb, 40 bytes, Stack size 24 bytes, tasks.o(i.xTaskCallApplicationTaskHook))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xTaskCallApplicationTaskHook
</UL>
<BR>[Called By]<UL><LI><a href="#[24c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSwitchContext
</UL>

<P><STRONG><a name="[49d]"></a>xTaskCheckForTimeOut</STRONG> (Thumb, 144 bytes, Stack size 16 bytes, tasks.o(i.xTaskCheckForTimeOut))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskCheckForTimeOut
</UL>
<BR>[Calls]<UL><LI><a href="#[49c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSetTimeOutState
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[46f]"></a>xTaskGenericCreate</STRONG> (Thumb, 358 bytes, Stack size 56 bytes, tasks.o(i.xTaskGenericCreate))
<BR><BR>[Stack]<UL><LI>Max Depth = 144 + Unknown Stack Size
<LI>Call Chain = xTaskGenericCreate &rArr; prvAllocateTCBAndStack &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[49e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pxPortInitialiseStack
<LI><a href="#[484]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTaskLists
<LI><a href="#[482]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvInitialiseTCBVariables
<LI><a href="#[473]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvAllocateTCBAndStack
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
</UL>
<BR>[Called By]<UL><LI><a href="#[470]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskStartScheduler
<LI><a href="#[246]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;main
</UL>

<P><STRONG><a name="[2e3]"></a>xTaskIncrementTick</STRONG> (Thumb, 292 bytes, Stack size 24 bytes, tasks.o(i.xTaskIncrementTick))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[49f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvResetNextTaskUnblockTime
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[2e2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;OS_SysTick
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
</UL>

<P><STRONG><a name="[480]"></a>xTaskPriorityDisinherit</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, tasks.o(i.xTaskPriorityDisinherit))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[47f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCopyDataToQueue
</UL>

<P><STRONG><a name="[489]"></a>xTaskRemoveFromEventList</STRONG> (Thumb, 134 bytes, Stack size 16 bytes, tasks.o(i.xTaskRemoveFromEventList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[3eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGiveFromISR
<LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[49a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReset
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[488]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvUnlockQueue
</UL>

<P><STRONG><a name="[478]"></a>xTaskResumeAll</STRONG> (Thumb, 230 bytes, Stack size 16 bytes, tasks.o(i.xTaskResumeAll))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[491]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsertEnd
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
<LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[365]"></a>T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 282 bytes, Stack size 64 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI11Screen1View16Screen1PresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 176 + Unknown Stack Size
<LI>Call Chain = T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; Screen1View::Screen1View() &rArr; Screen1ViewBase::Screen1ViewBase() &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[30c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1View::Screen1View()
<LI><a href="#[4a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Screen1Presenter::Screen1Presenter(Screen1View&)
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::NoTransition()
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::bind(ModelListener*)
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::bind(Model*)
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransitionImpl()
</UL>

<P><STRONG><a name="[366]"></a>T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 256 bytes, Stack size 56 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_12NoTransitionE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; mainScreenView::mainScreenView() &rArr; mainScreenViewBase::mainScreenViewBase() &rArr; touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::mainScreenPresenter(mainScreenView&)
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::mainScreenView()
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;mainScreenPresenter&rang;::bind(mainScreenPresenter&)
<LI><a href="#[4a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;mainScreenPresenter&rang;(unsigned short)
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;mainScreenView&rang;(unsigned short)
<LI><a href="#[3fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::NoTransition::NoTransition()
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::bind(ModelListener*)
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::bind(Model*)
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[9c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotomainScreenScreenNoTransitionImpl()
</UL>

<P><STRONG><a name="[367]"></a>T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 258 bytes, Stack size 56 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI14mainScreenView19mainScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; mainScreenView::mainScreenView() &rArr; mainScreenViewBase::mainScreenViewBase() &rArr; touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenPresenter::mainScreenPresenter(mainScreenView&)
<LI><a href="#[32d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;mainScreenView::mainScreenView()
<LI><a href="#[4a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;mainScreenPresenter&rang;::bind(mainScreenPresenter&)
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;&rang;(unsigned short)
<LI><a href="#[4a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;mainScreenPresenter&rang;(unsigned short)
<LI><a href="#[4a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;mainScreenView&rang;(unsigned short)
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::SlideTransition(unsigned char)
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::bind(ModelListener*)
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::bind(Model*)
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[9d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotomainScreenScreenSlideTransitionWestImpl()
</UL>

<P><STRONG><a name="[369]"></a>T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 258 bytes, Stack size 56 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI18settingsScreenView23settingsScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; settingsScreenView::settingsScreenView() &rArr; settingsScreenViewBase::settingsScreenViewBase() &rArr; touchgfx::ButtonWithLabel::setLabelText(touchgfx::TypedText) &rArr; touchgfx::ButtonWithLabel::updateTextPosition() &rArr; touchgfx::TypedText::assertValid() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenView::settingsScreenView()
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenPresenter::settingsScreenPresenter(settingsScreenView&)
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;settingsScreenPresenter&rang;::bind(settingsScreenPresenter&)
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;&rang;(unsigned short)
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;settingsScreenPresenter&rang;(unsigned short)
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;settingsScreenView&rang;(unsigned short)
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::SlideTransition(unsigned char)
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::bind(ModelListener*)
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::bind(Model*)
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[9e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionEastImpl()
</UL>

<P><STRONG><a name="[36a]"></a>T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 258 bytes, Stack size 56 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI18settingsScreenView23settingsScreenPresenterNS_15SlideTransitionILNS_9DirectionE3EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 232 + Unknown Stack Size
<LI>Call Chain = T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; settingsScreenView::settingsScreenView() &rArr; settingsScreenViewBase::settingsScreenViewBase() &rArr; touchgfx::ButtonWithLabel::setLabelText(touchgfx::TypedText) &rArr; touchgfx::ButtonWithLabel::updateTextPosition() &rArr; touchgfx::TypedText::assertValid() const &rArr; __aeabi_assert &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[345]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenView::settingsScreenView()
<LI><a href="#[4ae]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;settingsScreenPresenter::settingsScreenPresenter(settingsScreenView&)
<LI><a href="#[4af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::View&lang;settingsScreenPresenter&rang;::bind(settingsScreenPresenter&)
<LI><a href="#[4a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;&rang;(unsigned short)
<LI><a href="#[4ad]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;settingsScreenPresenter&rang;(unsigned short)
<LI><a href="#[4ac]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;settingsScreenView&rang;(unsigned short)
<LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::SlideTransition(unsigned char)
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::bind(ModelListener*)
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::bind(Model*)
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[9f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionWestImpl()
</UL>

<P><STRONG><a name="[36b]"></a>T2* touchgfx::makeTransition&lang;dateTimeSettingsScreenView, dateTimeSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 286 bytes, Stack size 64 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI26dateTimeSettingsScreenView31dateTimeSettingsScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = T2* touchgfx::makeTransition&lang;dateTimeSettingsScreenView, dateTimeSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; dateTimeSettingsScreenView::dateTimeSettingsScreenView() &rArr; dateTimeSettingsScreenViewBase::dateTimeSettingsScreenViewBase() &rArr; touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[380]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenView::dateTimeSettingsScreenView()
<LI><a href="#[4b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dateTimeSettingsScreenPresenter::dateTimeSettingsScreenPresenter(dateTimeSettingsScreenView&)
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;&rang;(unsigned short)
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::SlideTransition(unsigned char)
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::bind(ModelListener*)
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::bind(Model*)
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotodateTimeSettingsScreenScreenSlideTransitionEastImpl()
</UL>

<P><STRONG><a name="[36c]"></a>T2* touchgfx::makeTransition&lang;dayNightSettingsScreenView, dayNightSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 288 bytes, Stack size 64 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI26dayNightSettingsScreenView31dayNightSettingsScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 208 + Unknown Stack Size
<LI>Call Chain = T2* touchgfx::makeTransition&lang;dayNightSettingsScreenView, dayNightSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; dayNightSettingsScreenView::dayNightSettingsScreenView() &rArr; dayNightSettingsScreenViewBase::dayNightSettingsScreenViewBase() &rArr; touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[4b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenPresenter::dayNightSettingsScreenPresenter(dayNightSettingsScreenView&)
<LI><a href="#[38c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;dayNightSettingsScreenView::dayNightSettingsScreenView()
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;&rang;(unsigned short)
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::SlideTransition(unsigned char)
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::bind(ModelListener*)
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::bind(Model*)
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotodayNightSettingsScreenScreenSlideTransitionEastImpl()
</UL>

<P><STRONG><a name="[36d]"></a>T2* touchgfx::makeTransition&lang;opConfigSettingsScreenView, opConfigSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 288 bytes, Stack size 64 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI26opConfigSettingsScreenView31opConfigSettingsScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 216 + Unknown Stack Size
<LI>Call Chain = T2* touchgfx::makeTransition&lang;opConfigSettingsScreenView, opConfigSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; opConfigSettingsScreenView::opConfigSettingsScreenView() &rArr; opConfigSettingsScreenViewBase::opConfigSettingsScreenViewBase() &rArr; touchgfx::ButtonWithIcon::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Button::setBitmaps(const touchgfx::Bitmap&, const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[394]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenView::opConfigSettingsScreenView()
<LI><a href="#[4b2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opConfigSettingsScreenPresenter::opConfigSettingsScreenPresenter(opConfigSettingsScreenView&)
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;&rang;(unsigned short)
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::SlideTransition(unsigned char)
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::bind(ModelListener*)
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::bind(Model*)
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoopConfigSettingsScreenScreenSlideTransitionEastImpl()
</UL>

<P><STRONG><a name="[36e]"></a>T2* touchgfx::makeTransition&lang;tempHumiSettingsScreenView, tempHumiSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)</STRONG> (Thumb, 288 bytes, Stack size 64 bytes, frontendapplicationbase.o(t._ZN8touchgfx14makeTransitionI26tempHumiSettingsScreenView31tempHumiSettingsScreenPresenterNS_15SlideTransitionILNS_9DirectionE2EEE5ModelEEPT0_PPNS_6ScreenEPPNS_9PresenterERNS_7MVPHeapEPPNS_10TransitionEPT2_))
<BR><BR>[Stack]<UL><LI>Max Depth = 240 + Unknown Stack Size
<LI>Call Chain = T2* touchgfx::makeTransition&lang;tempHumiSettingsScreenView, tempHumiSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*) &rArr; tempHumiSettingsScreenView::tempHumiSettingsScreenView() &rArr; tempHumiSettingsScreenViewBase::tempHumiSettingsScreenViewBase() &rArr; touchgfx::Slider::Slider() &rArr; touchgfx::Image::Image(const touchgfx::Bitmap&) &rArr; touchgfx::Image::setBitmap(const touchgfx::Bitmap&) &rArr; touchgfx::Bitmap::getHeight() const &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[3a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenView::tempHumiSettingsScreenView()
<LI><a href="#[4b3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;tempHumiSettingsScreenPresenter::tempHumiSettingsScreenPresenter(tempHumiSettingsScreenView&)
<LI><a href="#[4aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T1& touchgfx::AbstractPartition::at&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;&rang;(unsigned short)
<LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::SlideTransition(unsigned char)
<LI><a href="#[4a2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;Model::bind(ModelListener*)
<LI><a href="#[4a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ModelListener::bind(Model*)
<LI><a href="#[410]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
<LI><a href="#[40f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
<LI><a href="#[252]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_assert
</UL>
<BR>[Called By]<UL><LI><a href="#[a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gototempHumiSettingsScreenScreenSlideTransitionEastImpl()
</UL>

<P><STRONG><a name="[1a9]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::handleTickEvent()</STRONG> (Thumb, 228 bytes, Stack size 8 bytes, frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::handleTickEvent() &rArr; touchgfx::Drawable::moveRelative(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::moveRelative(short, short)
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::cubicEaseOut(unsigned short, short, short, unsigned short)
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getY() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
</UL>
<P><STRONG><a name="[1ac]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::initMoveDrawable(touchgfx::Drawable&)</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16initMoveDrawableERNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::initMoveDrawable(touchgfx::Drawable&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
</UL>
<P><STRONG><a name="[1ad]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::tickMoveDrawable(touchgfx::Drawable&)</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE16tickMoveDrawableERNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::tickMoveDrawable(touchgfx::Drawable&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
</UL>
<P><STRONG><a name="[1ab]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::init()</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE4initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::init() &rArr; touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::Drawable&, void&rang;::Callback(touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;*, void(touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::*)(touchgfx::Drawable&))
</UL>
<BR>[Calls]<UL><LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::Drawable&, void&rang;::Callback(touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;*, void(touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::*)(touchgfx::Drawable&))
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::Drawable&, void&rang;::~Callback()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
</UL>
<P><STRONG><a name="[1aa]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::tearDown()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE2EE8tearDownEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::tearDown()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
</UL>
<P><STRONG><a name="[4ab]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::SlideTransition(unsigned char)</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::SlideTransition(unsigned char) &rArr; touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::Drawable&, void&rang;::Callback(touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;*, void(touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::*)(touchgfx::Drawable&))
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SnapshotWidget::SnapshotWidget()
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SnapshotWidget::makeSnapshot()
<LI><a href="#[4b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::Drawable&, void&rang;::Callback(touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;*, void(touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::*)(touchgfx::Drawable&))
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::Transition()
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;tempHumiSettingsScreenView, tempHumiSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;opConfigSettingsScreenView, opConfigSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;dayNightSettingsScreenView, dayNightSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;dateTimeSettingsScreenView, dateTimeSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[57b]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::SlideTransition__sub_object(unsigned char)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE2EEC1Eh), UNUSED)

<P><STRONG><a name="[1a8]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::~SlideTransition()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::~SlideTransition()
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SnapshotWidget::~SnapshotWidget()
<LI><a href="#[219]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::Drawable&, void&rang;::~Callback()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE2EEE)
</UL>
<P><STRONG><a name="[57c]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::~SlideTransition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE2EED1Ev), UNUSED)

<P><STRONG><a name="[1af]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::handleTickEvent()</STRONG> (Thumb, 228 bytes, Stack size 8 bytes, frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE15handleTickEventEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::handleTickEvent() &rArr; touchgfx::Drawable::moveRelative(short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[196]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::moveRelative(short, short)
<LI><a href="#[40a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::EasingEquations::cubicEaseOut(unsigned short, short, short, unsigned short)
<LI><a href="#[4b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::getY() const
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE3EEE)
</UL>
<P><STRONG><a name="[1b2]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::initMoveDrawable(touchgfx::Drawable&)</STRONG> (Thumb, 108 bytes, Stack size 16 bytes, frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16initMoveDrawableERNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::initMoveDrawable(touchgfx::Drawable&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE3EEE)
</UL>
<P><STRONG><a name="[1b3]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::tickMoveDrawable(touchgfx::Drawable&)</STRONG> (Thumb, 82 bytes, Stack size 16 bytes, frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE16tickMoveDrawableERNS_8DrawableE))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::tickMoveDrawable(touchgfx::Drawable&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE3EEE)
</UL>
<P><STRONG><a name="[1b1]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::init()</STRONG> (Thumb, 58 bytes, Stack size 24 bytes, frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE4initEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 56<LI>Call Chain = touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::init() &rArr; touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, touchgfx::Drawable&, void&rang;::Callback(touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;*, void(touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::*)(touchgfx::Drawable&))
</UL>
<BR>[Calls]<UL><LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, touchgfx::Drawable&, void&rang;::Callback(touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;*, void(touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::*)(touchgfx::Drawable&))
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, touchgfx::Drawable&, void&rang;::~Callback()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE3EEE)
</UL>
<P><STRONG><a name="[1b0]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::tearDown()</STRONG> (Thumb, 24 bytes, Stack size 8 bytes, frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE3EE8tearDownEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::tearDown()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE3EEE)
</UL>
<P><STRONG><a name="[4a9]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::SlideTransition(unsigned char)</STRONG> (Thumb, 196 bytes, Stack size 16 bytes, frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::SlideTransition(unsigned char) &rArr; touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, touchgfx::Drawable&, void&rang;::Callback(touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;*, void(touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::*)(touchgfx::Drawable&))
</UL>
<BR>[Calls]<UL><LI><a href="#[18c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Drawable::setPosition(short, short, short, short)
<LI><a href="#[407]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SnapshotWidget::SnapshotWidget()
<LI><a href="#[1a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SnapshotWidget::makeSnapshot()
<LI><a href="#[4b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, touchgfx::Drawable&, void&rang;::Callback(touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;*, void(touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::*)(touchgfx::Drawable&))
<LI><a href="#[3fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Transition::Transition()
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[57d]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::SlideTransition__sub_object(unsigned char)</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE3EEC1Eh), UNUSED)

<P><STRONG><a name="[1ae]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::~SlideTransition()</STRONG> (Thumb, 42 bytes, Stack size 8 bytes, frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::~SlideTransition()
</UL>
<BR>[Calls]<UL><LI><a href="#[1a0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SnapshotWidget::~SnapshotWidget()
<LI><a href="#[21b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, touchgfx::Drawable&, void&rang;::~Callback()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx15SlideTransitionILNS_9DirectionE3EEE)
</UL>
<P><STRONG><a name="[57e]"></a>touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::~SlideTransition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, frontendapplicationbase.o(t._ZN8touchgfx15SlideTransitionILNS_9DirectionE3EED1Ev), UNUSED)

<P><STRONG><a name="[4a4]"></a>T1& touchgfx::AbstractPartition::at&lang;mainScreenView&rang;(unsigned short)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, frontendapplicationbase.o(t._ZN8touchgfx17AbstractPartition2atI14mainScreenViewEERT_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = T1& touchgfx::AbstractPartition::at&lang;mainScreenView&rang;(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[4ac]"></a>T1& touchgfx::AbstractPartition::at&lang;settingsScreenView&rang;(unsigned short)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, frontendapplicationbase.o(t._ZN8touchgfx17AbstractPartition2atI18settingsScreenViewEERT_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = T1& touchgfx::AbstractPartition::at&lang;settingsScreenView&rang;(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[4a5]"></a>T1& touchgfx::AbstractPartition::at&lang;mainScreenPresenter&rang;(unsigned short)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, frontendapplicationbase.o(t._ZN8touchgfx17AbstractPartition2atI19mainScreenPresenterEERT_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = T1& touchgfx::AbstractPartition::at&lang;mainScreenPresenter&rang;(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[4ad]"></a>T1& touchgfx::AbstractPartition::at&lang;settingsScreenPresenter&rang;(unsigned short)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, frontendapplicationbase.o(t._ZN8touchgfx17AbstractPartition2atI23settingsScreenPresenterEERT_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = T1& touchgfx::AbstractPartition::at&lang;settingsScreenPresenter&rang;(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[4a0]"></a>T1& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, frontendapplicationbase.o(t._ZN8touchgfx17AbstractPartition2atINS_12NoTransitionEEERT_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = T1& touchgfx::AbstractPartition::at&lang;touchgfx::NoTransition&rang;(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[4aa]"></a>T1& touchgfx::AbstractPartition::at&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;&rang;(unsigned short)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, frontendapplicationbase.o(t._ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE2EEEEERT_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = T1& touchgfx::AbstractPartition::at&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;&rang;(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;tempHumiSettingsScreenView, tempHumiSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;opConfigSettingsScreenView, opConfigSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;dayNightSettingsScreenView, dayNightSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;dateTimeSettingsScreenView, dateTimeSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[4a8]"></a>T1& touchgfx::AbstractPartition::at&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;&rang;(unsigned short)</STRONG> (Thumb, 18 bytes, Stack size 16 bytes, frontendapplicationbase.o(t._ZN8touchgfx17AbstractPartition2atINS_15SlideTransitionILNS_9DirectionE3EEEEERT_t))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = T1& touchgfx::AbstractPartition::at&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;&rang;(unsigned short)
</UL>
<BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[404]"></a>touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned)</STRONG> (Thumb, 154 bytes, Stack size 48 bytes, boardconfiguration.o(t._ZN8touchgfx21touchgfx_generic_initI10STM32F7HALEERNS_3HALERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEssPtjj))
<BR><BR>[Stack]<UL><LI>Max Depth = 168 + Unknown Stack Size
<LI>Call Chain = touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned) &rArr; touchgfx::HAL& touchgfx::getHAL&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short) &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[435]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Texts::setLanguage(unsigned short)
<LI><a href="#[4b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BitmapDatabase::getInstanceSize()
<LI><a href="#[4b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BitmapDatabase::getInstance()
<LI><a href="#[439]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Bitmap::registerBitmapDatabase(const touchgfx::Bitmap::BitmapData*, unsigned short, unsigned short*, unsigned, unsigned)
<LI><a href="#[41b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::initialize()
<LI><a href="#[4ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::FontManager::setFontProvider(touchgfx::FontProvider*)
<LI><a href="#[4b7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::getHAL&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short)
<LI><a href="#[30e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::FrontendHeap()
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[403]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::touchgfx_init()
</UL>

<P><STRONG><a name="[454]"></a>T1 touchgfx::abs&lang;short&rang;(T1)</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, gestures.o(t._ZN8touchgfx3absIsEET_S1_))
<BR><BR>[Called By]<UL><LI><a href="#[423]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Gestures::registerDragEvent(unsigned short, unsigned short, unsigned short, unsigned short)
</UL>

<P><STRONG><a name="[4a7]"></a>touchgfx::View&lang;mainScreenPresenter&rang;::bind(mainScreenPresenter&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(t._ZN8touchgfx4ViewI19mainScreenPresenterE4bindERS1_))
<BR><BR>[Called By]<UL><LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[4af]"></a>touchgfx::View&lang;settingsScreenPresenter&rang;::bind(settingsScreenPresenter&)</STRONG> (Thumb, 4 bytes, Stack size 0 bytes, frontendapplicationbase.o(t._ZN8touchgfx4ViewI23settingsScreenPresenterE4bindERS1_))
<BR><BR>[Called By]<UL><LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[3ef]"></a>touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)</STRONG> (Thumb, 72 bytes, Stack size 24 bytes, application.o(t._ZN8touchgfx6VectorINS_4RectELt8EE13quickRemoveAtEt))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::quickRemoveAt(unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[98]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect()
</UL>
<BR>[Called By]<UL><LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>

<P><STRONG><a name="[3f2]"></a>touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect)</STRONG> (Thumb, 30 bytes, Stack size 8 bytes, application.o(t._ZN8touchgfx6VectorINS_4RectELt8EE3addES1_))
<BR><BR>[Stack]<UL><LI>Max Depth = 56 + Unknown Stack Size
<LI>Call Chain = touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::add(touchgfx::Rect) &rArr; abort &rArr; __rt_SIGABRT &rArr; __rt_SIGABRT_inner &rArr; __default_signal_display &rArr; _ttywrch
</UL>
<BR>[Calls]<UL><LI><a href="#[24d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;abort
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
<LI><a href="#[3ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::invalidateArea(touchgfx::Rect)
</UL>

<P><STRONG><a name="[3f4]"></a>touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector()</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, application.o(t._ZN8touchgfx6VectorINS_4RectELt8EEC1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector() &rArr; __aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Calls]<UL><LI><a href="#[308]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_vec_ctor_nocookie_nodtor
</UL>
<BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
<LI><a href="#[36f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::Application()
</UL>

<P><STRONG><a name="[57f]"></a>touchgfx::Vector&lang;touchgfx::Rect, (unsigned short)8&rang;::Vector__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, application.o(t._ZN8touchgfx6VectorINS_4RectELt8EEC1Ev), UNUSED)

<P><STRONG><a name="[4b7]"></a>touchgfx::HAL& touchgfx::getHAL&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short)</STRONG> (Thumb, 90 bytes, Stack size 48 bytes, boardconfiguration.o(t._ZN8touchgfx6getHALI10STM32F7HALEERNS_3HALERNS_13DMA_InterfaceERNS_3LCDERNS_15TouchControllerEss))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::HAL& touchgfx::getHAL&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short) &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[4bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::HAL__sub_object(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, unsigned short, unsigned short)
<LI><a href="#[2f3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__cxa_guard_acquire
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Called By]<UL><LI><a href="#[404]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL& touchgfx::touchgfx_generic_init&lang;STM32F7HAL&rang;(touchgfx::DMA_Interface&, touchgfx::LCD&, touchgfx::TouchController&, short, short, unsigned short*, unsigned, unsigned)
</UL>

<P><STRONG><a name="[1ff]"></a>touchgfx::Callback&lang;Screen1ViewBase, const touchgfx::AbstractButton&, void&rang;::execute(const touchgfx::AbstractButton&)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, screen1viewbase.o(t._ZN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Callback&lang;Screen1ViewBase, const touchgfx::AbstractButton&, void&rang;::execute(const touchgfx::AbstractButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTVN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvEE)
</UL>
<P><STRONG><a name="[202]"></a>touchgfx::Callback&lang;mainScreenViewBase, const touchgfx::AbstractButton&, void&rang;::execute(const touchgfx::AbstractButton&)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, mainscreenviewbase.o(t._ZN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Callback&lang;mainScreenViewBase, const touchgfx::AbstractButton&, void&rang;::execute(const touchgfx::AbstractButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> mainscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvEE)
</UL>
<P><STRONG><a name="[205]"></a>touchgfx::Callback&lang;settingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::execute(const touchgfx::AbstractButton&)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, settingsscreenviewbase.o(t._ZN8touchgfx8CallbackI22settingsScreenViewBaseRKNS_14AbstractButtonEvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Callback&lang;settingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::execute(const touchgfx::AbstractButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> settingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI22settingsScreenViewBaseRKNS_14AbstractButtonEvEE)
</UL>
<P><STRONG><a name="[208]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::execute()</STRONG> (Thumb, 44 bytes, Stack size 24 bytes, frontendapplicationbase.o(t._ZN8touchgfx8CallbackI23FrontendApplicationBasevvE7executeEv))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::execute()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvEE)
</UL>
<P><STRONG><a name="[363]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, frontendapplicationbase.o(t._ZN8touchgfx8CallbackI23FrontendApplicationBasevvEC1EPS1_MS1_FvvE))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback(FrontendApplicationBase*, void(FrontendApplicationBase::*)())
</UL>
<BR>[Calls]<UL><LI><a href="#[370]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GenericCallback&lang;void, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[368]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionWest()
<LI><a href="#[359]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotomainScreenScreenSlideTransitionWest()
<LI><a href="#[35a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gototempHumiSettingsScreenScreenSlideTransitionEast()
<LI><a href="#[35b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoopConfigSettingsScreenScreenSlideTransitionEast()
<LI><a href="#[35d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotodayNightSettingsScreenScreenSlideTransitionEast()
<LI><a href="#[35c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotodateTimeSettingsScreenScreenSlideTransitionEast()
<LI><a href="#[334]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotosettingsScreenScreenSlideTransitionEast()
<LI><a href="#[330]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotomainScreenScreenNoTransition()
<LI><a href="#[335]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendApplicationBase::gotoScreen1ScreenNoTransition()
</UL>

<P><STRONG><a name="[580]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::Callback__sub_object(FrontendApplicationBase*, void(FrontendApplicationBase::*)())</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, frontendapplicationbase.o(t._ZN8touchgfx8CallbackI23FrontendApplicationBasevvEC1EPS1_MS1_FvvE), UNUSED)

<P><STRONG><a name="[20b]"></a>touchgfx::Callback&lang;dateTimeSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::execute(const touchgfx::AbstractButton&)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, datetimesettingsscreenviewbase.o(t._ZN8touchgfx8CallbackI30dateTimeSettingsScreenViewBaseRKNS_14AbstractButtonEvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Callback&lang;dateTimeSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::execute(const touchgfx::AbstractButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30dateTimeSettingsScreenViewBaseRKNS_14AbstractButtonEvEE)
</UL>
<P><STRONG><a name="[20e]"></a>touchgfx::Callback&lang;dayNightSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::execute(const touchgfx::AbstractButton&)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, daynightsettingsscreenviewbase.o(t._ZN8touchgfx8CallbackI30dayNightSettingsScreenViewBaseRKNS_14AbstractButtonEvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Callback&lang;dayNightSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::execute(const touchgfx::AbstractButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30dayNightSettingsScreenViewBaseRKNS_14AbstractButtonEvEE)
</UL>
<P><STRONG><a name="[211]"></a>touchgfx::Callback&lang;opConfigSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::execute(const touchgfx::AbstractButton&)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, opconfigsettingsscreenviewbase.o(t._ZN8touchgfx8CallbackI30opConfigSettingsScreenViewBaseRKNS_14AbstractButtonEvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Callback&lang;opConfigSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::execute(const touchgfx::AbstractButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30opConfigSettingsScreenViewBaseRKNS_14AbstractButtonEvEE)
</UL>
<P><STRONG><a name="[214]"></a>touchgfx::Callback&lang;tempHumiSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::execute(const touchgfx::AbstractButton&)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, temphumisettingsscreenviewbase.o(t._ZN8touchgfx8CallbackI30tempHumiSettingsScreenViewBaseRKNS_14AbstractButtonEvE7executeES4_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Callback&lang;tempHumiSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::execute(const touchgfx::AbstractButton&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30tempHumiSettingsScreenViewBaseRKNS_14AbstractButtonEvEE)
</UL>
<P><STRONG><a name="[217]"></a>touchgfx::Callback&lang;tempHumiSettingsScreenViewBase, const touchgfx::Slider&, int&rang;::execute(const touchgfx::Slider&, int)</STRONG> (Thumb, 52 bytes, Stack size 32 bytes, temphumisettingsscreenviewbase.o(t._ZN8touchgfx8CallbackI30tempHumiSettingsScreenViewBaseRKNS_6SliderEiE7executeES4_i))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Callback&lang;tempHumiSettingsScreenViewBase, const touchgfx::Slider&, int&rang;::execute(const touchgfx::Slider&, int)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30tempHumiSettingsScreenViewBaseRKNS_6SliderEiEE)
</UL>
<P><STRONG><a name="[21a]"></a>touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::Drawable&, void&rang;::execute(touchgfx::Drawable&)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, frontendapplicationbase.o(t._ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvE7executeES5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::Drawable&, void&rang;::execute(touchgfx::Drawable&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvEE)
</UL>
<P><STRONG><a name="[4b5]"></a>touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::Drawable&, void&rang;::Callback(touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;*, void(touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::*)(touchgfx::Drawable&))</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, frontendapplicationbase.o(t._ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvEC1EPS3_MS3_FvS5_E))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::Drawable&, void&rang;::Callback(touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;*, void(touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::*)(touchgfx::Drawable&))
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GenericCallback&lang;touchgfx::Drawable&, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[4ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::SlideTransition(unsigned char)
<LI><a href="#[1ab]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::init()
</UL>

<P><STRONG><a name="[581]"></a>touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, touchgfx::Drawable&, void&rang;::Callback__sub_object(touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;*, void(touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;::*)(touchgfx::Drawable&))</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, frontendapplicationbase.o(t._ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE2EEERNS_8DrawableEvEC1EPS3_MS3_FvS5_E), UNUSED)

<P><STRONG><a name="[21c]"></a>touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, touchgfx::Drawable&, void&rang;::execute(touchgfx::Drawable&)</STRONG> (Thumb, 48 bytes, Stack size 24 bytes, frontendapplicationbase.o(t._ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvE7executeES5_))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, touchgfx::Drawable&, void&rang;::execute(touchgfx::Drawable&)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvEE)
</UL>
<P><STRONG><a name="[4b6]"></a>touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, touchgfx::Drawable&, void&rang;::Callback(touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;*, void(touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::*)(touchgfx::Drawable&))</STRONG> (Thumb, 34 bytes, Stack size 32 bytes, frontendapplicationbase.o(t._ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvEC1EPS3_MS3_FvS5_E))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, touchgfx::Drawable&, void&rang;::Callback(touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;*, void(touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::*)(touchgfx::Drawable&))
</UL>
<BR>[Calls]<UL><LI><a href="#[4bc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GenericCallback&lang;touchgfx::Drawable&, void&rang;::GenericCallback__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[4a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::SlideTransition(unsigned char)
<LI><a href="#[1b1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::init()
</UL>

<P><STRONG><a name="[582]"></a>touchgfx::Callback&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, touchgfx::Drawable&, void&rang;::Callback__sub_object(touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;*, void(touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;::*)(touchgfx::Drawable&))</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, frontendapplicationbase.o(t._ZN8touchgfx8CallbackINS_15SlideTransitionILNS_9DirectionE3EEERNS_8DrawableEvEC1EPS3_MS3_FvS5_E), UNUSED)

<P><STRONG><a name="[225]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR>[Address Reference Count : 1]<UL><LI> boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[226]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[224]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::~AbstractPartition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[583]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;Screen1Presenter, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI16Screen1PresenterNS2_INS1_3NilES4_EEEELt1EED1Ev), UNUSED)

<P><STRONG><a name="[228]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;tempHumiSettingsScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 8 bytes, Stack size 0 bytes, boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI26tempHumiSettingsScreenViewNS2_INS1_3NilES4_EEEELt1EE12element_sizeEv))
<BR>[Address Reference Count : 1]<UL><LI> boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI26tempHumiSettingsScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[229]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;tempHumiSettingsScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI26tempHumiSettingsScreenViewNS2_INS1_3NilES4_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI26tempHumiSettingsScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[227]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;tempHumiSettingsScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI26tempHumiSettingsScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;tempHumiSettingsScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::~AbstractPartition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListI26tempHumiSettingsScreenViewNS2_INS1_3NilES4_EEEELt1EEE)
</UL>
<P><STRONG><a name="[584]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;tempHumiSettingsScreenView, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListI26tempHumiSettingsScreenViewNS2_INS1_3NilES4_EEEELt1EED1Ev), UNUSED)

<P><STRONG><a name="[22b]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element_size()</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE12element_sizeEv))
<BR>[Address Reference Count : 1]<UL><LI> boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EEE)
</UL>
<P><STRONG><a name="[22c]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::element(unsigned short)</STRONG> (Thumb, 20 bytes, Stack size 0 bytes, boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EE7elementEt))
<BR>[Address Reference Count : 1]<UL><LI> boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EEE)
</UL>
<P><STRONG><a name="[22a]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()</STRONG> (Thumb, 16 bytes, Stack size 8 bytes, boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition()
</UL>
<BR>[Calls]<UL><LI><a href="#[1b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::AbstractPartition::~AbstractPartition__sub_object()
</UL>
<BR>[Called By]<UL><LI><a href="#[97]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;FrontendHeap::~FrontendHeap()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boardconfiguration.o(.constdata__ZTVN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EEE)
</UL>
<P><STRONG><a name="[585]"></a>touchgfx::Partition&lang;touchgfx::meta::TypeList&lang;touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, touchgfx::meta::TypeList&lang;touchgfx::meta::Nil, touchgfx::meta::Nil&rang;&rang;, (unsigned short)1&rang;::~Partition__sub_object()</STRONG> (Thumb, 0 bytes, Stack size 8 bytes, boardconfiguration.o(t._ZN8touchgfx9PartitionINS_4meta8TypeListINS_15SlideTransitionILNS_9DirectionE3EEENS2_INS1_3NilES6_EEEELt1EED1Ev), UNUSED)

<P><STRONG><a name="[200]"></a>touchgfx::Callback&lang;Screen1ViewBase, const touchgfx::AbstractButton&, void&rang;::isValid() const</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, screen1viewbase.o(t._ZNK8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> screen1viewbase.o(.constdata__ZTVN8touchgfx8CallbackI15Screen1ViewBaseRKNS_14AbstractButtonEvEE)
</UL>
<P><STRONG><a name="[203]"></a>touchgfx::Callback&lang;mainScreenViewBase, const touchgfx::AbstractButton&, void&rang;::isValid() const</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, mainscreenviewbase.o(t._ZNK8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> mainscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI18mainScreenViewBaseRKNS_14AbstractButtonEvEE)
</UL>
<P><STRONG><a name="[206]"></a>touchgfx::Callback&lang;settingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::isValid() const</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, settingsscreenviewbase.o(t._ZNK8touchgfx8CallbackI22settingsScreenViewBaseRKNS_14AbstractButtonEvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> settingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI22settingsScreenViewBaseRKNS_14AbstractButtonEvEE)
</UL>
<P><STRONG><a name="[209]"></a>touchgfx::Callback&lang;FrontendApplicationBase, void, void&rang;::isValid() const</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, frontendapplicationbase.o(t._ZNK8touchgfx8CallbackI23FrontendApplicationBasevvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> frontendapplicationbase.o(.constdata__ZTVN8touchgfx8CallbackI23FrontendApplicationBasevvEE)
</UL>
<P><STRONG><a name="[20c]"></a>touchgfx::Callback&lang;dateTimeSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::isValid() const</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, datetimesettingsscreenviewbase.o(t._ZNK8touchgfx8CallbackI30dateTimeSettingsScreenViewBaseRKNS_14AbstractButtonEvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> datetimesettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30dateTimeSettingsScreenViewBaseRKNS_14AbstractButtonEvEE)
</UL>
<P><STRONG><a name="[20f]"></a>touchgfx::Callback&lang;dayNightSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::isValid() const</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, daynightsettingsscreenviewbase.o(t._ZNK8touchgfx8CallbackI30dayNightSettingsScreenViewBaseRKNS_14AbstractButtonEvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> daynightsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30dayNightSettingsScreenViewBaseRKNS_14AbstractButtonEvEE)
</UL>
<P><STRONG><a name="[212]"></a>touchgfx::Callback&lang;opConfigSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::isValid() const</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, opconfigsettingsscreenviewbase.o(t._ZNK8touchgfx8CallbackI30opConfigSettingsScreenViewBaseRKNS_14AbstractButtonEvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> opconfigsettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30opConfigSettingsScreenViewBaseRKNS_14AbstractButtonEvEE)
</UL>
<P><STRONG><a name="[215]"></a>touchgfx::Callback&lang;tempHumiSettingsScreenViewBase, const touchgfx::AbstractButton&, void&rang;::isValid() const</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, temphumisettingsscreenviewbase.o(t._ZNK8touchgfx8CallbackI30tempHumiSettingsScreenViewBaseRKNS_14AbstractButtonEvE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30tempHumiSettingsScreenViewBaseRKNS_14AbstractButtonEvEE)
</UL>
<P><STRONG><a name="[218]"></a>touchgfx::Callback&lang;tempHumiSettingsScreenViewBase, const touchgfx::Slider&, int&rang;::isValid() const</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, temphumisettingsscreenviewbase.o(t._ZNK8touchgfx8CallbackI30tempHumiSettingsScreenViewBaseRKNS_6SliderEiE7isValidEv))
<BR>[Address Reference Count : 1]<UL><LI> temphumisettingsscreenviewbase.o(.constdata__ZTVN8touchgfx8CallbackI30tempHumiSettingsScreenViewBaseRKNS_6SliderEiEE)
</UL>
<P><STRONG><a name="[3dc]"></a>__aeabi_dadd</STRONG> (Thumb, 0 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __aeabi_dadd
</UL>
<BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor::getTemp()
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor::getHumi()
</UL>

<P><STRONG><a name="[4bd]"></a>_dadd</STRONG> (Thumb, 332 bytes, Stack size 16 bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub1
<LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[4c3]"></a>__fpl_dcmp_Inf</STRONG> (Thumb, 24 bytes, Stack size 0 bytes, dcmpi.o(x$fpl$dcmpinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
</UL>

<P><STRONG><a name="[3dd]"></a>__aeabi_d2iz</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_d2iz
</UL>
<BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor::getTemp()
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor::getHumi()
</UL>

<P><STRONG><a name="[4c1]"></a>_dfix</STRONG> (Thumb, 94 bytes, Stack size 32 bytes, dfix.o(x$fpl$dfix), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[3d8]"></a>__aeabi_i2d</STRONG> (Thumb, 0 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt))
<BR><BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor::getTemp()
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor::getHumi()
</UL>

<P><STRONG><a name="[586]"></a>_dflt</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, dflt_clz.o(x$fpl$dflt), UNUSED)

<P><STRONG><a name="[3db]"></a>__aeabi_cdcmple</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_cdcmple
</UL>
<BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor::getTemp()
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor::getHumi()
</UL>

<P><STRONG><a name="[4c2]"></a>_dcmple</STRONG> (Thumb, 120 bytes, Stack size 32 bytes, dleqf.o(x$fpl$dleqf), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
<LI><a href="#[4c3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dcmp_Inf
</UL>

<P><STRONG><a name="[587]"></a>__fpl_dcmple_InfNaN</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, dleqf.o(x$fpl$dleqf), UNUSED)

<P><STRONG><a name="[3d9]"></a>__aeabi_dmul</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dmul
</UL>
<BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor::getTemp()
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor::getHumi()
</UL>

<P><STRONG><a name="[4c4]"></a>_dmul</STRONG> (Thumb, 332 bytes, Stack size 32 bytes, dmul.o(x$fpl$dmul), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dretinf
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[4c0]"></a>__fpl_dnaninf</STRONG> (Thumb, 156 bytes, Stack size 16 bytes, dnaninf.o(x$fpl$dnaninf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[4c2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dcmple
<LI><a href="#[4c1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dfix
<LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[4bf]"></a>__fpl_dretinf</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, dretinf.o(x$fpl$dretinf), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4c4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dmul
<LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>

<P><STRONG><a name="[3da]"></a>__aeabi_dsub</STRONG> (Thumb, 0 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = __aeabi_dsub
</UL>
<BR>[Called By]<UL><LI><a href="#[3cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor::getTemp()
<LI><a href="#[3c7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;sensor::getHumi()
</UL>

<P><STRONG><a name="[4c5]"></a>_dsub</STRONG> (Thumb, 464 bytes, Stack size 32 bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Calls]<UL><LI><a href="#[4c6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd1
<LI><a href="#[4c0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__fpl_dnaninf
</UL>

<P><STRONG><a name="[23b]"></a>_fp_init</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, fpinit.o(x$fpl$fpinit))
<BR><BR>[Called By]<UL><LI><a href="#[23a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__rt_lib_init_fp_1
</UL>

<P><STRONG><a name="[588]"></a>__fplib_config_fpu_vfp</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)

<P><STRONG><a name="[589]"></a>__fplib_config_pureend_doubles</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, fpinit.o(x$fpl$fpinit), UNUSED)
<P>
<H3>
Local Symbols
</H3>
<P><STRONG><a name="[93]"></a>GUITask(void*)</STRONG> (Thumb, 22 bytes, Stack size 16 bytes, main.o(i._Z7GUITaskPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = GUITask(void*)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> main.o(i.main)
</UL>
<P><STRONG><a name="[230]"></a>__sti___9_Model_cpp_measTemp</STRONG> (Thumb, 124 bytes, Stack size 8 bytes, model.o(i.__sti___9_Model_cpp_measTemp))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __sti___9_Model_cpp_measTemp &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[46b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;opSocket::opSocket(GPIO_TypeDef*, unsigned)
<LI><a href="#[3e0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;actuator::actuator(opSocket&, bool)
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> model.o(.init_array)
</UL>
<P><STRONG><a name="[40f]"></a>touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)</STRONG> (Thumb, 96 bytes, Stack size 24 bytes, frontendapplicationbase.o(i._ZN8touchgfx17prepareTransitionEPPNS_6ScreenEPPNS_9PresenterEPPNS_10TransitionE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::prepareTransition(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::Transition**)
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[3f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::clearAllTimerWidgets()
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;tempHumiSettingsScreenView, tempHumiSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;opConfigSettingsScreenView, opConfigSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;dayNightSettingsScreenView, dayNightSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;dateTimeSettingsScreenView, dateTimeSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[410]"></a>touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)</STRONG> (Thumb, 60 bytes, Stack size 24 bytes, frontendapplicationbase.o(i._ZN8touchgfx18finalizeTransitionEPNS_6ScreenEPNS_9PresenterEPNS_10TransitionE))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = touchgfx::finalizeTransition(touchgfx::Screen*, touchgfx::Presenter*, touchgfx::Transition*)
</UL>
<BR>[Calls]<UL><LI><a href="#[32f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::getInstance()
<LI><a href="#[411]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Screen::bindTransition(touchgfx::Transition&)
</UL>
<BR>[Called By]<UL><LI><a href="#[36e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;tempHumiSettingsScreenView, tempHumiSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[36d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;opConfigSettingsScreenView, opConfigSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[36c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;dayNightSettingsScreenView, dayNightSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[36b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;dateTimeSettingsScreenView, dateTimeSettingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[36a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[369]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;settingsScreenView, settingsScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)2&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[367]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::SlideTransition&lang;(touchgfx::Direction)3&rang;, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[366]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;mainScreenView, mainScreenPresenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
<LI><a href="#[365]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;T2* touchgfx::makeTransition&lang;Screen1View, Screen1Presenter, touchgfx::NoTransition, Model&rang;(touchgfx::Screen**, touchgfx::Presenter**, touchgfx::MVPHeap&, touchgfx::Transition**, T4*)
</UL>

<P><STRONG><a name="[231]"></a>__sti___9_Texts_cpp_454ca793</STRONG> (Thumb, 16 bytes, Stack size 0 bytes, texts.o(i.__sti___9_Texts_cpp_454ca793))
<BR>[Address Reference Count : 1]<UL><LI> texts.o(.init_array)
</UL>
<P><STRONG><a name="[232]"></a>__sti___21_TypedTextDatabase_cpp_42ef4e5b</STRONG> (Thumb, 76 bytes, Stack size 8 bytes, typedtextdatabase.o(i.__sti___21_TypedTextDatabase_cpp_42ef4e5b))
<BR><BR>[Stack]<UL><LI>Max Depth = 124<LI>Call Chain = __sti___21_TypedTextDatabase_cpp_42ef4e5b &rArr; getFont_verdana_46_4bpp() &rArr; touchgfx::InternalFlashFont::InternalFlashFont(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, const unsigned char*, const touchgfx::KerningNode*, unsigned short, unsigned short) &rArr; touchgfx::ConstFont::ConstFont__sub_object(const touchgfx::GlyphNode*, unsigned short, unsigned short, unsigned char, unsigned char, unsigned char, unsigned char, unsigned short, unsigned short)
</UL>
<BR>[Calls]<UL><LI><a href="#[2fc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_46_4bpp()
<LI><a href="#[2fb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_34_4bpp()
<LI><a href="#[2fa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_17_8bpp()
<LI><a href="#[2f9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_verdana_12_4bpp()
<LI><a href="#[2f8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_segoeui_67_4bpp()
<LI><a href="#[2f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_segoeui_40_8bpp()
<LI><a href="#[2f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_segoeui_28_8bpp()
<LI><a href="#[2f5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_segoeui_18_8bpp()
<LI><a href="#[2f2]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;getFont_segoeui_17_8bpp()
</UL>
<BR>[Address Reference Count : 1]<UL><LI> typedtextdatabase.o(.init_array)
</UL>
<P><STRONG><a name="[304]"></a>NVIC_EnableIRQ(IRQn_Type)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f7dma.o(i._Z14NVIC_EnableIRQ9IRQn_Type))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupFillWithAlpha(const touchgfx::BlitOp&)
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataFill(const touchgfx::BlitOp&)
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataCopy(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[301]"></a>NVIC_DisableIRQ(IRQn_Type)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f7dma.o(i._Z15NVIC_DisableIRQ9IRQn_Type))
<BR><BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupFillWithAlpha(const touchgfx::BlitOp&)
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataFill(const touchgfx::BlitOp&)
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataCopy(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[305]"></a>SCB_CleanInvalidateDCache()</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, stm32f7dma.o(i._Z25SCB_CleanInvalidateDCachev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SCB_CleanInvalidateDCache()
</UL>
<BR>[Called By]<UL><LI><a href="#[b9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupFillWithAlpha(const touchgfx::BlitOp&)
<LI><a href="#[b5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataFill(const touchgfx::BlitOp&)
<LI><a href="#[b4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::setupDataCopy(const touchgfx::BlitOp&)
</UL>

<P><STRONG><a name="[309]"></a>NVIC_EnableIRQ(IRQn_Type)</STRONG> (Thumb, 22 bytes, Stack size 0 bytes, stm32f7hal.o(i._Z14NVIC_EnableIRQ9IRQn_Type))
<BR><BR>[Called By]<UL><LI><a href="#[cb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7HAL::enableInterrupts()
</UL>

<P><STRONG><a name="[30a]"></a>NVIC_DisableIRQ(IRQn_Type)</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, stm32f7hal.o(i._Z15NVIC_DisableIRQ9IRQn_Type))
<BR><BR>[Called By]<UL><LI><a href="#[cc]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7HAL::disableInterrupts()
</UL>

<P><STRONG><a name="[30b]"></a>NVIC_SetPriority(IRQn_Type, unsigned)</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f7hal.o(i._Z16NVIC_SetPriority9IRQn_Typej))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority(IRQn_Type, unsigned)
</UL>
<BR>[Called By]<UL><LI><a href="#[ca]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7HAL::configureInterrupts()
</UL>

<P><STRONG><a name="[290]"></a>SCB_CleanInvalidateDCache()</STRONG> (Thumb, 116 bytes, Stack size 8 bytes, stm32f7hal.o(i._Z25SCB_CleanInvalidateDCachev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SCB_CleanInvalidateDCache()
</UL>
<BR>[Called By]<UL><LI><a href="#[bb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7HAL::flushFrameBuffer(const touchgfx::Rect&)
<LI><a href="#[80]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;DMA2D_IRQHandler
</UL>

<P><STRONG><a name="[452]"></a>SCB_EnableDCache()</STRONG> (Thumb, 148 bytes, Stack size 8 bytes, boardconfiguration.o(i._Z16SCB_EnableDCachev))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = SCB_EnableDCache()
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
</UL>

<P><STRONG><a name="[2ef]"></a>BSP_LCD_LayerInit(unsigned short, unsigned)</STRONG> (Thumb, 90 bytes, Stack size 64 bytes, boardconfiguration.o(i._Z17BSP_LCD_LayerInittj))
<BR><BR>[Stack]<UL><LI>Max Depth = 100<LI>Call Chain = BSP_LCD_LayerInit(unsigned short, unsigned) &rArr; HAL_LTDC_ConfigLayer &rArr; LTDC_SetConfig
</UL>
<BR>[Calls]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
<LI><a href="#[2f1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_GetYSize
<LI><a href="#[2f0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_LCD_GetXSize
</UL>
<BR>[Called By]<UL><LI><a href="#[450]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::hw_init()
</UL>

<P><STRONG><a name="[233]"></a>__sti___22_BoardConfiguration_cpp_dceb80ee</STRONG> (Thumb, 108 bytes, Stack size 8 bytes, boardconfiguration.o(i.__sti___22_BoardConfiguration_cpp_dceb80ee))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = __sti___22_BoardConfiguration_cpp_dceb80ee &rArr; __aeabi_atexit &rArr; malloc &rArr; __Heap_Full &rArr; __Heap_ProvideMemory &rArr; free
</UL>
<BR>[Calls]<UL><LI><a href="#[306]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;STM32F7DMA::STM32F7DMA()
<LI><a href="#[24f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_atexit
</UL>
<BR>[Address Reference Count : 1]<UL><LI> boardconfiguration.o(.init_array)
</UL>
<P><STRONG><a name="[430]"></a>isRenderTime(touchgfx::GPIO::GPIO_ID)</STRONG> (Thumb, 12 bytes, Stack size 0 bytes, gpio.o(i._Z12isRenderTimeN8touchgfx4GPIO7GPIO_IDE))
<BR><BR>[Called By]<UL><LI><a href="#[2df]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[2de]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::set(touchgfx::GPIO::GPIO_ID)
<LI><a href="#[41f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::GPIO::toggle(touchgfx::GPIO::GPIO_ID)
</UL>

<P><STRONG><a name="[2d6]"></a>I2Cx_Error</STRONG> (Thumb, 20 bytes, Stack size 16 bytes, stm32746g_discovery.o(i.I2Cx_Error))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = I2Cx_Error &rArr; I2Cx_Init &rArr; I2Cx_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[29f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_DeInit
<LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2db]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_WriteMultiple
<LI><a href="#[2da]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_ReadMultiple
</UL>

<P><STRONG><a name="[2d7]"></a>I2Cx_Init</STRONG> (Thumb, 64 bytes, Stack size 8 bytes, stm32746g_discovery.o(i.I2Cx_Init))
<BR><BR>[Stack]<UL><LI>Max Depth = 88<LI>Call Chain = I2Cx_Init &rArr; I2Cx_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2a1]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Init
<LI><a href="#[2d8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_GetState
<LI><a href="#[2d9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_MspInit
</UL>
<BR>[Called By]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Init
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Error
</UL>

<P><STRONG><a name="[2d9]"></a>I2Cx_MspInit</STRONG> (Thumb, 338 bytes, Stack size 32 bytes, stm32746g_discovery.o(i.I2Cx_MspInit))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = I2Cx_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[283]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_EnableIRQ
<LI><a href="#[274]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GPIO_Init
</UL>
<BR>[Called By]<UL><LI><a href="#[2d7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Init
</UL>

<P><STRONG><a name="[2da]"></a>I2Cx_ReadMultiple</STRONG> (Thumb, 58 bytes, Stack size 48 bytes, stm32746g_discovery.o(i.I2Cx_ReadMultiple))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = I2Cx_ReadMultiple &rArr; HAL_I2C_Mem_Read &rArr; I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Error
</UL>
<BR>[Called By]<UL><LI><a href="#[2ea]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Read
</UL>

<P><STRONG><a name="[2db]"></a>I2Cx_WriteMultiple</STRONG> (Thumb, 58 bytes, Stack size 48 bytes, stm32746g_discovery.o(i.I2Cx_WriteMultiple))
<BR><BR>[Stack]<UL><LI>Max Depth = 160<LI>Call Chain = I2Cx_WriteMultiple &rArr; HAL_I2C_Mem_Write &rArr; I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[2d6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2Cx_Error
</UL>
<BR>[Called By]<UL><LI><a href="#[2eb]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Write
</UL>

<P><STRONG><a name="[2e4]"></a>QSPI_AutoPollingMemReady</STRONG> (Thumb, 86 bytes, Stack size 96 bytes, stm32746g_discovery_qspi.o(i.QSPI_AutoPollingMemReady))
<BR><BR>[Stack]<UL><LI>Max Depth = 152<LI>Call Chain = QSPI_AutoPollingMemReady &rArr; HAL_QSPI_AutoPolling &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AutoPolling
</UL>
<BR>[Called By]<UL><LI><a href="#[280]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_ResetMemory
</UL>

<P><STRONG><a name="[281]"></a>QSPI_DummyCyclesCfg</STRONG> (Thumb, 166 bytes, Stack size 72 bytes, stm32746g_discovery_qspi.o(i.QSPI_DummyCyclesCfg))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = QSPI_DummyCyclesCfg &rArr; QSPI_WriteEnable &rArr; HAL_QSPI_Command &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Transmit
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Receive
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[2e5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_WriteEnable
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_QSPI_Init
</UL>

<P><STRONG><a name="[280]"></a>QSPI_ResetMemory</STRONG> (Thumb, 94 bytes, Stack size 64 bytes, stm32746g_discovery_qspi.o(i.QSPI_ResetMemory))
<BR><BR>[Stack]<UL><LI>Max Depth = 216<LI>Call Chain = QSPI_ResetMemory &rArr; QSPI_AutoPollingMemReady &rArr; HAL_QSPI_AutoPolling &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[2e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_AutoPollingMemReady
</UL>
<BR>[Called By]<UL><LI><a href="#[27c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;BSP_QSPI_Init
</UL>

<P><STRONG><a name="[2e5]"></a>QSPI_WriteEnable</STRONG> (Thumb, 108 bytes, Stack size 88 bytes, stm32746g_discovery_qspi.o(i.QSPI_WriteEnable))
<BR><BR>[Stack]<UL><LI>Max Depth = 144<LI>Call Chain = QSPI_WriteEnable &rArr; HAL_QSPI_Command &rArr; QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AutoPolling
</UL>
<BR>[Called By]<UL><LI><a href="#[281]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;QSPI_DummyCyclesCfg
</UL>

<P><STRONG><a name="[47d]"></a>prvCopyDataFromQueue</STRONG> (Thumb, 42 bytes, Stack size 16 bytes, queue.o(i.prvCopyDataFromQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvCopyDataFromQueue
</UL>
<BR>[Calls]<UL><LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[47f]"></a>prvCopyDataToQueue</STRONG> (Thumb, 128 bytes, Stack size 24 bytes, queue.o(i.prvCopyDataToQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 40<LI>Call Chain = prvCopyDataToQueue &rArr; xTaskPriorityDisinherit
</UL>
<BR>[Calls]<UL><LI><a href="#[480]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskPriorityDisinherit
<LI><a href="#[47e]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memcpy
</UL>
<BR>[Called By]<UL><LI><a href="#[3e4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSendFromISR
<LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[486]"></a>prvIsQueueEmpty</STRONG> (Thumb, 26 bytes, Stack size 16 bytes, queue.o(i.prvIsQueueEmpty))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvIsQueueEmpty
</UL>
<BR>[Calls]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[487]"></a>prvIsQueueFull</STRONG> (Thumb, 30 bytes, Stack size 16 bytes, queue.o(i.prvIsQueueFull))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvIsQueueFull
</UL>
<BR>[Calls]<UL><LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
</UL>

<P><STRONG><a name="[488]"></a>prvUnlockQueue</STRONG> (Thumb, 126 bytes, Stack size 8 bytes, queue.o(i.prvUnlockQueue))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = prvUnlockQueue &rArr; xTaskRemoveFromEventList
</UL>
<BR>[Calls]<UL><LI><a href="#[489]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskRemoveFromEventList
<LI><a href="#[48a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskMissedYield
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
</UL>
<BR>[Called By]<UL><LI><a href="#[3e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericSend
<LI><a href="#[3e6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xQueueGenericReceive
</UL>

<P><STRONG><a name="[471]"></a>prvAddCurrentTaskToDelayedList</STRONG> (Thumb, 62 bytes, Stack size 8 bytes, tasks.o(i.prvAddCurrentTaskToDelayedList))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = prvAddCurrentTaskToDelayedList &rArr; vListInsert
</UL>
<BR>[Calls]<UL><LI><a href="#[472]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInsert
</UL>
<BR>[Called By]<UL><LI><a href="#[490]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskPlaceOnEventList
</UL>

<P><STRONG><a name="[473]"></a>prvAllocateTCBAndStack</STRONG> (Thumb, 66 bytes, Stack size 24 bytes, tasks.o(i.prvAllocateTCBAndStack))
<BR><BR>[Stack]<UL><LI>Max Depth = 88 + Unknown Stack Size
<LI>Call Chain = prvAllocateTCBAndStack &rArr; pvPortMalloc &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
<LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
<LI><a href="#[256]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;__aeabi_memset
</UL>
<BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>

<P><STRONG><a name="[476]"></a>prvCheckTasksWaitingTermination</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, tasks.o(i.prvCheckTasksWaitingTermination))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[47c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvDeleteTCB
<LI><a href="#[478]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskResumeAll
<LI><a href="#[477]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vTaskSuspendAll
<LI><a href="#[47b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortExitCritical
<LI><a href="#[479]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortEnterCritical
<LI><a href="#[47a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;uxListRemove
</UL>
<BR>[Called By]<UL><LI><a href="#[96]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvIdleTask
</UL>

<P><STRONG><a name="[47c]"></a>prvDeleteTCB</STRONG> (Thumb, 18 bytes, Stack size 8 bytes, tasks.o(i.prvDeleteTCB))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[475]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vPortFree
</UL>
<BR>[Called By]<UL><LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>

<P><STRONG><a name="[96]"></a>prvIdleTask</STRONG> (Thumb, 36 bytes, Stack size 0 bytes, tasks.o(i.prvIdleTask))
<BR><BR>[Stack]<UL><LI>Max Depth = 80<LI>Call Chain = prvIdleTask &rArr; prvCheckTasksWaitingTermination &rArr; prvDeleteTCB &rArr; vPortFree &rArr; xTaskResumeAll &rArr; xTaskIncrementTick
</UL>
<BR>[Calls]<UL><LI><a href="#[481]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vApplicationIdleHook
<LI><a href="#[476]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;prvCheckTasksWaitingTermination
</UL>
<BR>[Address Reference Count : 1]<UL><LI> tasks.o(i.vTaskStartScheduler)
</UL>
<P><STRONG><a name="[482]"></a>prvInitialiseTCBVariables</STRONG> (Thumb, 100 bytes, Stack size 32 bytes, tasks.o(i.prvInitialiseTCBVariables))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = prvInitialiseTCBVariables
</UL>
<BR>[Calls]<UL><LI><a href="#[483]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialiseItem
</UL>
<BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>

<P><STRONG><a name="[484]"></a>prvInitialiseTaskLists</STRONG> (Thumb, 70 bytes, Stack size 8 bytes, tasks.o(i.prvInitialiseTaskLists))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = prvInitialiseTaskLists
</UL>
<BR>[Calls]<UL><LI><a href="#[485]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;vListInitialise
</UL>
<BR>[Called By]<UL><LI><a href="#[46f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskGenericCreate
</UL>

<P><STRONG><a name="[49f]"></a>prvResetNextTaskUnblockTime</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, tasks.o(i.prvResetNextTaskUnblockTime))
<BR><BR>[Called By]<UL><LI><a href="#[2e3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;xTaskIncrementTick
</UL>

<P><STRONG><a name="[95]"></a>IdleTaskHook(void*)</STRONG> (Thumb, 40 bytes, Stack size 16 bytes, oswrappers.o(i._Z12IdleTaskHookPv))
<BR><BR>[Stack]<UL><LI>Max Depth = 48<LI>Call Chain = IdleTaskHook(void*) &rArr; touchgfx::HAL::setMCUActive(bool) &rArr; touchgfx::GPIO::clear(touchgfx::GPIO::GPIO_ID) &rArr; BSP_LED_Off
</UL>
<BR>[Calls]<UL><LI><a href="#[2ec]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::HAL::setMCUActive(bool)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> oswrappers.o(i.vApplicationIdleHook)
</UL>
<P><STRONG><a name="[94]"></a>prvTaskExitError</STRONG> (Thumb, 72 bytes, Stack size 0 bytes, port.o(i.prvTaskExitError))
<BR>[Address Reference Count : 1]<UL><LI> port.o(i.pxPortInitialiseStack)
</UL>
<P><STRONG><a name="[48b]"></a>prvHeapInit</STRONG> (Thumb, 42 bytes, Stack size 0 bytes, heap_2.o(i.prvHeapInit))
<BR><BR>[Called By]<UL><LI><a href="#[474]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;pvPortMalloc
</UL>

<P><STRONG><a name="[46d]"></a>ft5336_Get_I2C_InitializedStatus</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ft5336.o(i.ft5336_Get_I2C_InitializedStatus))
<BR><BR>[Called By]<UL><LI><a href="#[46c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_I2C_InitializeIfRequired
</UL>

<P><STRONG><a name="[46c]"></a>ft5336_I2C_InitializeIfRequired</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, ft5336.o(i.ft5336_I2C_InitializeIfRequired))
<BR><BR>[Stack]<UL><LI>Max Depth = 104<LI>Call Chain = ft5336_I2C_InitializeIfRequired &rArr; TS_IO_Init &rArr; I2Cx_Init &rArr; I2Cx_MspInit &rArr; HAL_NVIC_SetPriority &rArr; NVIC_SetPriority
</UL>
<BR>[Calls]<UL><LI><a href="#[2e9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;TS_IO_Init
<LI><a href="#[46d]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_Get_I2C_InitializedStatus
</UL>
<BR>[Called By]<UL><LI><a href="#[14]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_ReadID
<LI><a href="#[13]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_Init
</UL>

<P><STRONG><a name="[46e]"></a>ft5336_TS_Configure</STRONG> (Thumb, 6 bytes, Stack size 0 bytes, ft5336.o(i.ft5336_TS_Configure))
<BR><BR>[Called By]<UL><LI><a href="#[16]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;ft5336_TS_Start
</UL>

<P><STRONG><a name="[2b3]"></a>NVIC_GetPriorityGrouping</STRONG> (Thumb, 10 bytes, Stack size 0 bytes, stm32f7xx_hal_cortex.o(i.NVIC_GetPriorityGrouping))
<BR><BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
</UL>

<P><STRONG><a name="[2b4]"></a>NVIC_SetPriority</STRONG> (Thumb, 32 bytes, Stack size 8 bytes, stm32f7xx_hal_cortex.o(i.NVIC_SetPriority))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = NVIC_SetPriority
</UL>
<BR>[Called By]<UL><LI><a href="#[282]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_NVIC_SetPriority
<LI><a href="#[2af]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_SYSTICK_Config
</UL>

<P><STRONG><a name="[29d]"></a>DMA_CalcBaseAndBitshift</STRONG> (Thumb, 46 bytes, Stack size 0 bytes, stm32f7xx_hal_dma.o(i.DMA_CalcBaseAndBitshift))
<BR><BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
<LI><a href="#[28a]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_DeInit
</UL>

<P><STRONG><a name="[29e]"></a>DMA_CheckFifoParam</STRONG> (Thumb, 186 bytes, Stack size 0 bytes, stm32f7xx_hal_dma.o(i.DMA_CheckFifoParam))
<BR><BR>[Called By]<UL><LI><a href="#[28b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA_Init
</UL>

<P><STRONG><a name="[295]"></a>DMA2D_SetConfig</STRONG> (Thumb, 258 bytes, Stack size 32 bytes, stm32f7xx_hal_dma2d.o(i.DMA2D_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = DMA2D_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[29b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_Start_IT
<LI><a href="#[294]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_DMA2D_BlendingStart_IT
</UL>

<P><STRONG><a name="[2d5]"></a>I2C_Flush_TXDR</STRONG> (Thumb, 40 bytes, Stack size 0 bytes, stm32f7xx_hal_i2c.o(i.I2C_Flush_TXDR))
<BR><BR>[Called By]<UL><LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>

<P><STRONG><a name="[2d4]"></a>I2C_IsAcknowledgeFailed</STRONG> (Thumb, 136 bytes, Stack size 16 bytes, stm32f7xx_hal_i2c.o(i.I2C_IsAcknowledgeFailed))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2d5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_Flush_TXDR
</UL>
<BR>[Called By]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[2a7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnSTOPFlagUntilTimeout
</UL>

<P><STRONG><a name="[2a5]"></a>I2C_RequestMemoryRead</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, stm32f7xx_hal_i2c.o(i.I2C_RequestMemoryRead))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = I2C_RequestMemoryRead &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[2a9]"></a>I2C_RequestMemoryWrite</STRONG> (Thumb, 140 bytes, Stack size 32 bytes, stm32f7xx_hal_i2c.o(i.I2C_RequestMemoryWrite))
<BR><BR>[Stack]<UL><LI>Max Depth = 64<LI>Call Chain = I2C_RequestMemoryWrite &rArr; I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[2aa]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnTXISFlagUntilTimeout
<LI><a href="#[2a4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_WaitOnFlagUntilTimeout
<LI><a href="#[2a6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_TransferConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
</UL>

<P><STRONG><a name="[2a6]"></a>I2C_TransferConfig</STRONG> (Thumb, 42 bytes, Stack size 20 bytes, stm32f7xx_hal_i2c.o(i.I2C_TransferConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = I2C_TransferConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>

<P><STRONG><a name="[2a4]"></a>I2C_WaitOnFlagUntilTimeout</STRONG> (Thumb, 86 bytes, Stack size 24 bytes, stm32f7xx_hal_i2c.o(i.I2C_WaitOnFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = I2C_WaitOnFlagUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>

<P><STRONG><a name="[2a7]"></a>I2C_WaitOnSTOPFlagUntilTimeout</STRONG> (Thumb, 86 bytes, Stack size 16 bytes, stm32f7xx_hal_i2c.o(i.I2C_WaitOnSTOPFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_WaitOnSTOPFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[2a3]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Read
</UL>

<P><STRONG><a name="[2aa]"></a>I2C_WaitOnTXISFlagUntilTimeout</STRONG> (Thumb, 90 bytes, Stack size 16 bytes, stm32f7xx_hal_i2c.o(i.I2C_WaitOnTXISFlagUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 32<LI>Call Chain = I2C_WaitOnTXISFlagUntilTimeout &rArr; I2C_IsAcknowledgeFailed
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
<LI><a href="#[2d4]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_IsAcknowledgeFailed
</UL>
<BR>[Called By]<UL><LI><a href="#[2a8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_I2C_Mem_Write
<LI><a href="#[2a9]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryWrite
<LI><a href="#[2a5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;I2C_RequestMemoryRead
</UL>

<P><STRONG><a name="[2b1]"></a>LTDC_SetConfig</STRONG> (Thumb, 530 bytes, Stack size 20 bytes, stm32f7xx_hal_ltdc.o(i.LTDC_SetConfig))
<BR><BR>[Stack]<UL><LI>Max Depth = 20<LI>Call Chain = LTDC_SetConfig
</UL>
<BR>[Called By]<UL><LI><a href="#[2b0]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_LTDC_ConfigLayer
</UL>

<P><STRONG><a name="[2b9]"></a>QSPI_Config</STRONG> (Thumb, 488 bytes, Stack size 8 bytes, stm32f7xx_hal_qspi.o(i.QSPI_Config))
<BR><BR>[Stack]<UL><LI>Max Depth = 8<LI>Call Chain = QSPI_Config
</UL>
<BR>[Called By]<UL><LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MemoryMapped
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AutoPolling
</UL>

<P><STRONG><a name="[2b7]"></a>QSPI_WaitFlagStateUntilTimeout</STRONG> (Thumb, 76 bytes, Stack size 24 bytes, stm32f7xx_hal_qspi.o(i.QSPI_WaitFlagStateUntilTimeout))
<BR><BR>[Stack]<UL><LI>Max Depth = 24<LI>Call Chain = QSPI_WaitFlagStateUntilTimeout
</UL>
<BR>[Calls]<UL><LI><a href="#[292]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_GetTick
</UL>
<BR>[Called By]<UL><LI><a href="#[2bf]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Transmit
<LI><a href="#[2be]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Receive
<LI><a href="#[27b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_MemoryMapped
<LI><a href="#[27f]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Init
<LI><a href="#[2ba]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Command
<LI><a href="#[2b8]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_AutoPolling
<LI><a href="#[2b6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;HAL_QSPI_Abort
</UL>

<P><STRONG><a name="[3f8]"></a>touchgfx::enableFl(touchgfx::Rect&)</STRONG> (Thumb, 1028 bytes, Stack size 64 bytes, application.o(i._ZN8touchgfx8enableFlERNS_4RectE))
<BR><BR>[Stack]<UL><LI>Max Depth = 120<LI>Call Chain = touchgfx::enableFl(touchgfx::Rect&) &rArr; touchgfx::Rect::operator &(const touchgfx::Rect&) const &rArr; touchgfx::Rect::operator &=(const touchgfx::Rect&) &rArr; touchgfx::Rect::intersect(const touchgfx::Rect&) const
</UL>
<BR>[Calls]<UL><LI><a href="#[413]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&, const touchgfx::Rect&)
<LI><a href="#[412]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::DisplayTransformation::transformDisplayToFrameBuffer(touchgfx::Rect&)
<LI><a href="#[3ed]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::isEmpty() const
<LI><a href="#[3f7]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::operator &(const touchgfx::Rect&) const
<LI><a href="#[460]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::wmAt(int, int)
</UL>
<BR>[Called By]<UL><LI><a href="#[10b]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::draw(touchgfx::Rect&)
</UL>

<P><STRONG><a name="[3f3]"></a>touchgfx::nextRand()</STRONG> (Thumb, 18 bytes, Stack size 0 bytes, application.o(i._ZN8touchgfx8nextRandEv))
<BR><BR>[Called By]<UL><LI><a href="#[10c]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Application::cacheDrawOperations(bool)
</UL>

<P><STRONG><a name="[234]"></a>__sti___15_Application_cpp_63cd8d44</STRONG> (Thumb, 20 bytes, Stack size 8 bytes, application.o(i.__sti___15_Application_cpp_63cd8d44))
<BR><BR>[Stack]<UL><LI>Max Depth = 16<LI>Call Chain = __sti___15_Application_cpp_63cd8d44 &rArr; touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Calls]<UL><LI><a href="#[3f6]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;touchgfx::Rect::Rect(short, short, short, short)
</UL>
<BR>[Address Reference Count : 1]<UL><LI> application.o(.init_array)
</UL>
<P><STRONG><a name="[4c6]"></a>_dadd1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dadd), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4c5]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dsub
</UL>

<P><STRONG><a name="[4be]"></a>_dsub1</STRONG> (Thumb, 0 bytes, Stack size unknown bytes, daddsub_clz.o(x$fpl$dsub), UNUSED)
<BR><BR>[Called By]<UL><LI><a href="#[4bd]">&gt;&gt;</a>&nbsp;&nbsp;&nbsp;_dadd
</UL>
<P>
<H3>
Undefined Global Symbols
</H3><HR></body></html>
